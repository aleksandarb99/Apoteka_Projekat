{"version":3,"sources":["app/api.js","app/slices/userSlice.js","components/utilComponents/formGroups/TextFormGroup.js","components/utilComponents/formGroups/EmailFormGroup.js","components/utilComponents/formGroups/PasswordFormGroup.js","components/users/Login.js","components/LoginPage.js","components/utilComponents/formGroups/FirstNameFormGroup.js","components/utilComponents/formGroups/LastNameFormGroup.js","components/utilComponents/formGroups/PhoneNumberFormGroup.js","components/utilComponents/formGroups/CityFormGroup.js","components/utilComponents/formGroups/CountryFormGroup.js","components/utilComponents/formGroups/StreetFormGroup.js","components/utilComponents/modals/ErrorModal.js","components/utilComponents/modals/SuccessModal.js","components/Registration.js","app/jwtTokenUtils.js","components/pharmacyAdmin/EditBasicInfo.js","components/pharmacyAdmin/AddPurchaseOrderModal.js","components/pharmacyAdmin/SelectOfferModal.js","components/pharmacyAdmin/EditOrderModal.js","components/pharmacyAdmin/DisplayPurchaseOrders.js","components/pharmacyAdmin/AddAppointment.js","components/pharmacyAdmin/AddingMedicineModal.js","components/pharmacyAdmin/ChangePriceModal.js","components/pharmacyAdmin/DisplayMedicine.js","components/pharmacyAdmin/RejectRequestModal.js","components/pharmacyAdmin/DisplayHolidayRequests.js","components/pharmacyAdmin/AddingWorkerModal.js","components/pharmacyAdmin/DetailsOfWorkerModal.js","components/pharmacyAdmin/DisplayWorkers.js","components/pharmacyAdmin/DisplayInquiries.js","components/pharmacyAdmin/DisplayReports.js","components/pharmacyAdmin/AddAdvertismentModal.js","components/pharmacyAdmin/AdvertismentTab.js","components/utilComponents/modals/SetPasswordModal.js","components/pharmacyAdmin/PharmacyAdminHomePage.js","components/workers/appointment_start_modal.js","components/workers/pharmacist/home_page_pharmacist.js","components/workers/dermatologist/home_page_dermatologist.js","components/unregisteredAndPatient/PharmaciesView.js","components/unregisteredAndPatient/MedicineSearchAndFilter.js","components/unregisteredAndPatient/MedicinesView.js","components/unregisteredAndPatient/UnregistredAndPatientHomePage.js","components/supplier/stock/AddEditStockItemModal.js","components/supplier/stock/SupplierStock.js","app/errorHandler.js","components/supplier/offers/AddEditOfferModal.js","components/supplier/orders/OrderMedicineList.js","components/supplier/orders/OrderItem.js","components/supplier/orders/NewOrders.js","components/supplier/offers/OfferItem.js","components/supplier/offers/SupplierOffers.js","components/supplier/SupplierHomePage.js","components/utilComponents/AdminHomePage.js","components/utilComponents/HomePage.js","components/profile/AllergyRow.js","components/profile/Allergies.js","components/profile/PatientBenefits.js","components/profile/PatientPenalties.js","components/profile/BasicProfileInfo.js","components/profile/UserInfoComponent.js","components/profile/UserProfile.js","components/Footer.js","components/pharmacyProfile/PharmacyBasic.js","components/pharmacyProfile/MedicineAdminView.js","components/pharmacyProfile/AppointmentView.js","components/pharmacyProfile/WorkersView.js","components/pharmacyProfile/ERecipeSearchInPharmacy.js","components/pharmacyProfile/PharmacyProfile.js","components/medicine/MedicineProfile.js","components/utilComponents/modals/DeleteModal.js","components/utilComponents/Location.js","components/pharmacy/AddPharmacyModal.js","components/pharmacy/EditPharmacyModal.js","components/pharmacy/PharmacyTable.js","components/pharmacy/PharmacySearchPanel.js","components/pharmacy/PharmacyCrud.js","components/medicine/MedicineSearchPanel.js","components/medicine/MedicineRow.js","components/utilComponents/medicineFormGroups/MedicineNameFromGroup.js","components/utilComponents/medicineFormGroups/MedicineCodeFormGroup.js","components/utilComponents/medicineFormGroups/MedicineContentFormGroup.js","components/utilComponents/medicineFormGroups/SideEffectsFormGroup.js","components/utilComponents/medicineFormGroups/AdditionalNotesFormGroup.js","components/medicine/AddMedicineModal.js","components/medicine/EditMedicineModal.js","components/medicine/MedicineTable.js","components/medicine/MedicineCrud.js","components/workers/appointments_modal.js","components/workers/search_patients.js","components/workers/list_examined.js","components/utilComponents/header/AdminHeader.js","components/utilComponents/header/UnregistredHeader.js","components/utilComponents/header/PatientHeader.js","components/utilComponents/header/SupplierHeader.js","components/utilComponents/header/PharmacyAdminHeader.js","components/utilComponents/header/DermatologistHeader.js","components/utilComponents/header/PharmacistHeader.js","components/utilComponents/header/CommonHeader.js","components/workers/appointment_info_modal.js","components/workers/work_calendar.js","components/workers/appointment_report_therapy_modal.js","components/workers/appointment_report_schedule_modal.js","components/workers/appointment_report.js","components/workers/vacation_modal.js","components/workers/vacation_request.js","components/workers/dermatologist_profile.js","components/workers/pharmacist_profile.js","components/workers/issue_medicine.js","components/users/AddUserModal.js","components/users/EditUserModal.js","components/users/UserRow.js","components/users/UserTable.js","components/users/UserSearchPanel.js","components/users/UserCrud.js","components/unregisteredAndPatient/PharmaciesWithFreePharmacists.js","components/unregisteredAndPatient/ConsultationsInsight.js","components/unregisteredAndPatient/CheckupsInsight.js","components/unregisteredAndPatient/SubscribedPharmacies.js","components/unregisteredAndPatient/ReservedMedicines.js","components/unregisteredAndPatient/Rating.js","components/complaints/SubmitComplaintForm.js","components/complaints/ComplaintDetails.js","components/complaints/ComplaintHistory.js","components/complaints/ComplaintsPage.js","components/complaintResponses/ComplaintResponse.js","components/complaintResponses/NewComplaintsList.js","components/complaintResponses/ComplaintResponseDetails.js","components/complaintResponses/ComplaintResponsesHistory.js","components/complaintResponses/ComplaintResponsesPage.js","components/ePrescription/PharmacyWithMedicineItem.js","components/ePrescription/PharmacyWithMedicineList.js","components/ePrescription/RequiredMedicineList.js","components/ePrescription/EPrescriptionSearch.js","components/ePrescription/EPrescriptionReview.js","components/ePrescription/EPrescriptionPage.js","components/loyaltyProgram/AddEditCategoryModal.js","components/loyaltyProgram/CategoryItem.js","components/loyaltyProgram/CategoryList.js","components/utilComponents/GuardedRoute.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","e","error","Promise","reject","initialUser","slice","createSlice","name","initialState","user","reducers","loginSuccess","state","action","payload","setItem","stringify","logoutSuccess","removeItem","actions","logout","dispatch","a","console","message","TextFormGroup","placeholder","minLength","maxLength","defaultValue","required","pattern","onChange","disabled","props","useState","errors","setErrors","regex","setRegex","useEffect","main","match","options","re","RegExp","Form","Group","Label","Control","type","isInvalid","event","fieldText","test","length","findGroupErrors","target","value","bind","this","Feedback","defaultProps","EmailFormGroup","PasswordFormGroup","Login","form","setForm","validated","setValidated","useDispatch","useSelector","setField","field","to","noValidate","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","email","password","post","res","data","alert","login","className","Button","variant","LoginPage","FirstNameFormGroup","LastNameFormGroup","CityFormGroup","CountryFormGroup","StreetFormGroup","ErrorModal","Modal","Header","closeButton","color","size","Body","onClick","onHide","SuccessModal","Registration","showErrorModal","setShowErrorModal","showSuccessModal","setShowSuccessModal","sendPostRequest","newForm","convertForm","log","then","catch","address","city","street","country","roleName","PhoneNumberFormGroup","show","getIdFromToken","atob","split","id","getUserTypeFromToken","userType","EditBasicInfo","pharmacyDetails","changedPharmacy","addToast","useToasts","fixing","setFixing","editMode","setEditMode","valid","setValid","description","longitude","latitude","text","setText","handleChange","key","validateData","handleClickOnMap","get","countryName","locality","err","response","appearance","isValid","list","Number","parseInt","toString","location","document","getElementById","innerHTML","map","Map","layers","TileLayer","source","OSM","view","View","center","fromLonLat","zoom","minZoom","maxZoom","on","evt","coords","toLonLat","coordinate","lat","lon","removeEventListener","Tab","Pane","eventKey","Row","Col","lg","md","sm","as","controlId","column","dto","put","AddPurchaseOrderModal","selectedRowId","setSelectedRowId","selectedName","setSelectedName","amount","setAmount","orders","setOrders","selectedItems","setSelectedItems","startDate","setStartDate","onExited","aria-labelledby","centered","Title","Container","xs","Table","bordered","hover","striped","medicineList","item","index","medicineId","includes","medicine","code","avgGrade","di","min","ListGroup","Item","filter","date","array","d","Date","setHours","now","getTime","changeDate","Footer","handleAdd","SelectOfferModal","offers","setOffers","orderId","undefined","fetchOffer","price","moment","deliveryDat","format","worker","handleSelect","EditOrderModal","order","handleEdit","DisplayPurchaseOrders","idOfPharmacy","priceListId","refresh","refreshInq","setRefreshInq","filterValue","setFilterValue","showedOrders","setShowedOrders","showedOrder","setShowedOrder","pagNumber","setPugNummber","maxPag","setMaxPag","dropdownLabel","setDropdownLabel","selectOfferModalShow","setSelectOfferModalShow","showEditOrderModal","setShowEditOrderModal","showSpinner","setShowSpinner","addModalShow","setAddModalShow","medicineItems","setMedicineItems","fetchOrders","params","fetchPriceList","filterOrders","param","pharmacyId","deadline","items","adminId","delete","maxNumber","Math","floor","first","max","deleteOrder","deletePOrder","selectedOfferId","Dropdown","Toggle","Menu","addPurchaseOrder","Card","style","width","height","Pagination","Prev","Next","Alert","Heading","editOrder","Spinner","display","animation","selectOrder","orderItem","AddAppointment","dermatologists","setDermatologists","appointments","setAppointments","startHour","setStartHour","dermatogistPicked","setDermatogistPicked","duration","setDuration","setPrice","setRefresh","fetchDermatologists","fetchAppointments","i","flag","j","workDays","weekday","localeCompare","substring","toUpperCase","d1","d2","startTime","endTime","reloadForm","dermatologist","lastName","firstName","long","appointment","appointmentState","AddingMedicineModal","setMedicineList","fetchMedicine","medicineItemsLength","content","ChangePriceModal","onEntered","oldPrice","DisplayMedicine","refreshPriceList","setRefreshPriceList","selectedRowPrice","setSelectedRowPrice","changePriceModalShow","setChangePriceModalShow","removeModalShow","setRemoveModalShow","selectedMedicineId","handleRemove","removeMedicine","medicineItemId","addMedicine","changePrice","RejectRequestModal","reason","setReason","rows","rejectRequest","DisplayHolidayRequests","requests","setRequests","showAlert","setShowAlert","fetchRequests","requestId","absenceType","requestState","start","end","workerDetails","acceptRequest","AddingWorkerModal","workerList","setWorkerList","endHour","setEndHour","enable1","setEnable1","enable2","setEnable2","enable3","setEnable3","enable4","setEnable4","enable5","setEnable5","enable6","setEnable6","enable7","setEnable7","DetailsOfWorkerModal","workerId","handleClose","DisplayWorkers","pharmacies","setPharmacies","pharamcyNameMap","setPharamcyNameMap","workers","setWorkers","showedWorkers","setShowedWorkers","selectedWorker","setSelectedWorker","detailsModalShow","setDetailsModalShow","fsearch","setFSearch","filterGrade","setFilterGrade","filterPharmacyName","setFilterPharmacyName","fetchWorkers","resp","fetchPharmacies","fetchNames","result","searchValue","marginTop","telephone","removeWorker","workersLength","addWorker","DisplayInquiries","inquiries","setInquiries","showedInquiries","setShowedInquiries","filterInquiries","fetchInquiries","active","DisplayReports","chartData","setChartData","selectedChart","setSelectedChart","selectedPeriod","setSelectedPeriod","profitDisplay","setProfitDisplay","appointmentsData","setAppointmentsData","drugConsumptionData","setDrugConsumptionData","profitData","setProfitData","properties","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","plugins","title","fetchDataOfAppointmentsForReport","fetchDataForDrugConsumptionForReport","fetchProfitReport","drawGraph","colors2","datasets","labels","Object","keys","colors","genRandomColors","dataset1","label","values","backgroundColor","borderColor","borderWidth","push","dataset2","colors3","dataset3","random","randomColor","InputGroup","Prepend","Text","AddAdvertismentModal","endDate","setEndDate","discount","setDiscount","setType","AdvertismentTab","setList","fetchAdvertisment","medicineItem","discountPercent","advertisementText","addAdverb","SetPasswordModal","errorMessage","setErrorMessage","handleSet","onPasswordSet","backdrop","isPasswordSet","PharmacyAdminHomePage","setPharmacyDetails","setPharmacyId","setLoadingPWChanged","showModalPWChange","setShowModalPWChange","fetchPharmacy","fetchPharmacyid","passwordChanged","defaultActiveKey","Nav","Link","Content","AppointmentStartModal","history","useHistory","patient","subtract","bodyFormData","FormData","append","pathname","appointmentID","add","onCancelMethod","PharmHomePage","showModal","setShowModal","startAppt","setStartAppt","loadingPWChanged","loadingAppts","setLoadingAppts","minHeight","float","textAlign","id_farm","page","DermHomePage","pharmacy","id_derm","PharmaciesView","backup","setBackup","showedPharmacies","setShowedPharmacies","filterDistance","setFilterDistance","sorter","setSorter","ascDesc","setAscDesc","reload","setReload","triggered","setTriggered","div","blocker","calculateDistance","lon2","lat2","lat1","lon1","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","doSorting","sort","ph1","ph2","reverse","classList","remove","marginRight","filtered","navigator","geolocation","getCurrentPosition","position","filteringList","paddingTop","fluid","ListGroupItem","Array","ceil","MedicineSearchAndFilter","medicineType","setMedicineType","medicineForm","setMedicineForm","medTypes","setMedTypes","medForms","setMedForms","medName","setMedName","generateSearchParams","updateParams","marginBottom","custom","mt","mf","MedicinesView","medicines","setMedicines","showedMedicines","setShowedMedicines","searchParams","setSearchParams","fetchMedicines","newParams","updateSearchParams","UnregistredAndPatientHomePage","AddEditStockItemModal","singleSelection","setSingleSelection","setOptions","medicineName","onSuccess","labelKey","option","selected","step","SupplierStock","stock","setStock","showAddEditModal","setShowAddEditModal","fetchStock","margin","stockItem","getErrorMessage","AddEditOfferModal","itemsToRender","offer","totalPrice","setTotalPrice","deliveryDate","selectedDate","setSelectedDate","addOffer","editOffer","convertDate","timestamp","year","getFullYear","month","getMonth","day","getDate","oi","offerState","dateString","OrderMedicineList","orderItems","OrderItem","showAddOfferModal","setShowAddOfferModal","borderRadius","padding","FormGroup","FormLabel","orderState","toLocaleDateString","offset","span","NewOrders","setMessage","isArray","o","OfferItem","showEditOfferModal","setShowEditOfferModal","setOrder","fetchOrder","SupplierOffers","currentOfferType","setCurrentOfferType","fetchOffers","SupplierHomePage","setIsPasswordSet","unmountOnExit","TabPane","AdminHomePage","HomePage","homePage","AllergyRow","allergy","deleteClick","Allergies","allergies","setAllergies","selectedMedicine","setSelectedMedicine","showAddModal","setShowAddModal","fetchData","reloadTable","m","updateSelectedMedicine","PatientBenefits","points","setPoints","category","setCategory","fetchPoints","fetchCategory","pointsRequired","fontWeight","PatientPenalties","penalties","setPenalties","fetchPenalties","BasicProfileInfo","setUser","showUser","setShowUser","oldPassword","newPassword","repeatPassword","passwordDTO","setPasswordDTO","isEdit","setEdit","showPasswordModal","setShowPasswordModal","inputType","setInputType","fetchUser","handleClick","handleClick2","forSend","left","right","UserInfo","UserProfile","col_width","PharmacyBasic","details","isUserSubscribed","setIsUserSubscribed","checkIfUserIsSubscribed","hidden","AppointmentView","appointsments","setAppointsments","showedAppointsments","setShowedAppointsments","fetchAppointsments","search_params","URLSearchParams","appointsment","appointmentType","textDecoration","WorkersView","ERecipeSearchInPharmacy","QRImage","setQRImage","parsedData","setParsedData","method","url","formData","handleSubmit","File","Input","files","handleFileChange","PharmacyProfile","useParams","MedicineProfile","setMedicine","pickupDate","setPickupDate","selectedPharmacy","setSelectedPharmacy","pid","priceid","sideEffects","dailyIntake","recipeRequired","additionalNotes","manufacturer","p","updateSelectedPharmacy","closeOnScroll","dateFormat","isClearable","fontSize","userId","DeleteModal","class","bodyText","onDelete","Location","defAddress","setAddress","setLocation","locationPoint","setLocationPoint","coordinates","setCoordinates","setMap","lp","Feature","geometry","Point","initMap","iconStyle","Style","image","Icon","anchor","src","setStyle","vectorSource","Vector","features","vectorLayer","VectorLayer","newCoordinates","transformed","transform","getGeometry","callString","setNewLocation","jsonData","parseJsonData","addressData","l","for","AddPharmacyModal","newErrors","findFormErrors","EditPharmacyModal","pointsForAppointment","onShow","defaultForm","PharmacyTable","setSelected","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","PharmacySearchPanel","PharmacyCrud","MedicineSearchPanel","MedicineRow","editClick","detailsClick","window","open","MedicineNameFormGroup","MedicineCodeFormGroup","MedicineContentFormGroup","SideEffectsFormGroup","AdditionalNotesFormGroup","AddMedicineModal","EditMedicineModal","sendPutRequest","MedicineTable","medi","MedicineCrud","AppointmentsModal","onCancel","appt","info","onCancelAppointment","onCloseModal","patientName","trim","ButtonGroup","onStart","SearchPatPage","patients","setPatients","fName","setFName","lName","setLName","setPatient","currFetchState","setCurrFetchState","fetchPatients","pat_to_show","onShowAppointmentsButton","SearchExaminedPatPage","sort1","setSort1","sort2","setSort2","sort3","setSort3","sortWay1","setSortWay1","sortWay2","setSortWay2","sortWay3","setSortWay3","currUserType","setCurrUserType","user_type","DatePicker","appointmentStart","AdminHeader","userChanged","Navbar","sticky","expand","Brand","aria-controls","Collapse","UnregistredHeader","PatientHeader","SupplierHeader","PharmacyAdminHeader","DermatologistHeader","PharmacistHeader","CommonHeader","header","AppointmentInfoModal","apptInfo","setApptInfo","onHideFun","therapyDTOList","therapyLength","WorkCalendar","eventi","setEventi","showModalInfo","setShowModalInfo","currUser","setCurrUser","user_id","appts","reqVac","concat","dayGridPlugin","timeGridPlugin","resourceTimelinePlugin","headerToolbar","allDaySlot","events","initialView","eventClick","extendedProps","calendarType","k","views","WeekView","buttonText","weeks","eventContent","propi","html","eventDidMount","tippy","el","allowHTML","setProp","MonthView","months","slotDuration","days","dayMaxEvents","YearView","years","visibleRange","startOf","toDate","endOf","TherapyMedicineModal","primaryOptions","setPrimaryOptions","showHidePrimary","setShowHidePrimary","alternativeSelection","setAlternativeSelection","alternativeOptions","setAlternativeOptions","showHideSecondary","setShowHideSecondary","alternativeError","setAlternativeError","reset","pharm_id","pharmacyID","pat_id","patientID","exitModal","clickedShow","onHideModal","isNaN","therapyLen","onAddMedicine","scrollable","med_item_id","med_id","worker_id","setAlternatives","medicineItemID","medicineID","ScheduleAnotherApp","workersWorktime","setWorkersWorktime","showWorkTime","setShowWorkTime","apptsOnSelectedDate","setApptsOnSelectedDate","startHours","setStartHours","startMinutes","setStartMinutes","workerID","valueOf","holidays","workDayList","minDate","hours","minutes","durationI","totalMillisHourMin","onSchedule","scheduleAndFinish","AppointmentReport","showScheduleAnother","setShowScheduleAnother","showClicked","setShowClicked","currAppt","setCurrAppt","apptType","setApptType","useLocation","appt_id","finishAppt","appointment_id","apptId","newArray","medItem","VacationModal","fromDate","setFromDate","setToDate","typeVac","setTypeVac","userID","onCreateMethod","VacationRequest","declineText","DermatologistProfile","workplaces","setWorkplaces","currSelect","setCurrSelect","PharmacistProfile","workplace","setWorkplace","IssueMedicine","reservedMedicine","setReservedMedicine","resID","setResID","searchRes","reservationID","reservationDate","issueMed","AddUserModal","usertype","EditUserModal","UserRow","UserTable","initialUserType","users","setUsers","currentUserType","setCurrentUserType","getFormattedUserType","UserSearchPanel","UserCrud","PharmaciesWithFreePharmacists","requestedDate","setRequestedDate","chosenPharmacy","setChosenPharmacy","reloadPharmacies","setReloadPharmacies","sorter2","setSorter2","reload2","setReload2","status","consultationPrice","w","updateSelectedWorker","ConsultationsInsight","consultations","setConsultations","fetchConsultations","justifyContent","fc","workerName","pharmacyName","CheckupsInsight","checkups","setCheckups","fetchCheckups","c","SubscribedPharmacies","loadPharmacies","substr","ReservedMedicines","reservations","setReservations","fetchReservations","r","Rating","entities","setEntitites","selectedEntity","setSelectedEntity","rating","setRating","enabledRating","setEnabledRating","spans","querySelectorAll","fetchEntities","updateSelectedEntity","toLowerCase","medicineCode","grade","count","newRating","gradedID","patientId","activeColor","transition","SubmitComplaintForm","complaintType","setComplaintType","textAreaText","setTextAreaText","getLabelKey","complaintOn","complaintOnId","toLocaleLowerCase","ComplaintDetails","complaint","setResponse","responseText","fetchResponse","border","ComplaintHistory","complaints","setComplaints","fetchComplaints","ComplaintsPage","ComplaintResponse","onSuccessfulSubmit","setResponseText","complaintId","NewComplaintsList","getNewComplaints","ComplaintResponseDetails","complaintResponse","FormControl","ComplaintResponsesHistory","complaintResponses","setComplaintResponses","cr","PharmacyWithMedicineItem","doBuy","addressStreet","addressCity","PharmacyWithMedicineList","RequiredMedicineList","quantity","ERecipeSearch","showSearchPanel","setShowSearchPanel","sortBy","setSortBy","sortOrder","setSortOrder","eRecipeItems","EPrescriptionReview","setFilter","doFiltering","sortParam","e1","e2","prescriptionDate","dispensingDate","EPrescriptionPage","EPrescriptionSearch","AddEditCategoryModal","setName","requiredPoints","setRequiredPoints","onEnter","parseFloat","onAddEdit","CategoryItem","onItemChanged","marginLeft","CategoryList","components","setComponents","GuardedRoute","Component","component","rest","render","App","autoDismiss","autoDismissTimeout","placement","path","exact","ComplaintResponsesPage","CategotyList","reducer","combineReducers","store","configureStore","Boolean","hostname","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22cfe2a3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://apotekaprojekat.herokuapp.com\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    let token = null;\r\n    try {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } catch (e) {}\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default api;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"../api\";\r\n\r\nconst initialUser = localStorage.getItem(\"user\")\r\n  ? JSON.parse(localStorage.getItem(\"user\"))\r\n  : null;\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: initialUser,\r\n  },\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      state.user = action.payload;\r\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\r\n    },\r\n    logoutSuccess: (state, action) => {\r\n      state.user = null;\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nconst { loginSuccess, logoutSuccess } = slice.actions;\r\n\r\nexport const login = ({ email, password }) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/auth/login/\", {\r\n      email,\r\n      password,\r\n    });\r\n    dispatch(loginSuccess(res.data));\r\n  } catch (e) {\r\n    alert(\"User not found\");\r\n    return console.error(e.message);\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    return dispatch(logoutSuccess());\r\n  } catch (e) {\r\n    return console.error(e.message);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction TextFormGroup({ name, placeholder, minLength, maxLength, defaultValue, required, pattern, onChange, disabled, ...props }) {\r\n\r\n    const [errors, setErrors] = useState(\"\")\r\n    const [regex, setRegex] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!!pattern) {\r\n            const main = pattern.match(/\\/(.+)\\/.*/)[1]\r\n            const options = pattern.match(/\\/.+\\/(.*)/)[1]\r\n            let re = new RegExp(main, options)\r\n            setRegex(re)\r\n        }\r\n        //findGroupErrors(defaultValue)\r\n    }, [])\r\n\r\n    const findGroupErrors = (fieldText) => {\r\n        let error = '';\r\n\r\n        if (required && (!fieldText || fieldText === ''))\r\n            error = 'This field cannot be blank!'\r\n\r\n        else if (!!pattern) {\r\n            if (!regex.test(fieldText)) {\r\n                error = 'Input data is not in a valid format'\r\n            }\r\n        }\r\n\r\n        else if (!!minLength && fieldText.length < minLength)\r\n            error = 'Minimum number of characters is ' + minLength + '.'\r\n\r\n        else if (!!maxLength && fieldText.length > maxLength) {\r\n            error = 'Maximum number of characters is ' + maxLength + '.'\r\n        }\r\n\r\n        else\r\n            error = ''\r\n\r\n        setErrors(error)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        onChange(event)\r\n        findGroupErrors(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Form.Group {...props}>\r\n            <Form.Label>{name}</Form.Label>\r\n            <Form.Control\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                defaultValue={defaultValue}\r\n                isInvalid={!!errors}\r\n                onChange={handleChange.bind(this)}\r\n                required={required}\r\n                disabled={disabled}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>\r\n                {errors}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\n\r\nTextFormGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    minLength: PropTypes.number,\r\n    maxLength: PropTypes.number,\r\n    defaultValue: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    pattern: PropTypes.string\r\n}\r\n\r\nTextFormGroup.defaultProps = {\r\n    required: false,\r\n    minLength: 0,\r\n    onChange: () => { },\r\n    maxLength: 100,\r\n    pattern: \"\",\r\n    disabled: false\r\n}\r\n\r\nexport default TextFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction EmailFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"E-mail\"}\r\n            placeholder={\"Enter e-mail...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            required={true}\r\n            onChange={(event) => props.onChange(event)}\r\n            pattern={\"/^(([^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+\\\\.)+[^<>()[\\\\]\\\\.,;:\\\\s@\\\"]{2,})$/i\"}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default EmailFormGroup\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction PasswordFormGroup({ name, minLength, maxLength, onChange, ...props }) {\r\n\r\n    const [errors, setErrors] = useState(\"\")\r\n\r\n    const findGroupErrors = (fieldText) => {\r\n        let error = '';\r\n        if (!fieldText || fieldText === '')\r\n            error = 'Password cannot be blank!'\r\n        else if (!!minLength && fieldText.length < minLength)\r\n            error = 'Minimum number of characters is ' + minLength + '.'\r\n        else if (!!maxLength && fieldText.length > maxLength)\r\n            error = 'Maximum number of characters is ' + maxLength + '.'\r\n        else\r\n            error = ''\r\n        setErrors(error)\r\n    }\r\n\r\n    useEffect(findGroupErrors, [])\r\n\r\n    const handleChange = (event) => {\r\n        onChange(event)\r\n        findGroupErrors(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Form.Group {...props}>\r\n            <Form.Label>{name}</Form.Label>\r\n            <Form.Control\r\n                type=\"password\"\r\n                isInvalid={!!errors}\r\n                onChange={handleChange.bind(this)}\r\n                required={true}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>\r\n                {errors}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nPasswordFormGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    minLength: PropTypes.number,\r\n    maxLength: PropTypes.number,\r\n}\r\n\r\nPasswordFormGroup.defaultProps = {\r\n    minLength: 6,\r\n    onChange: () => { },\r\n    maxLength: 255,\r\n    name: \"Password\"\r\n}\r\n\r\nexport default PasswordFormGroup\r\n","import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport { login } from '../../app/slices/userSlice'\r\nimport EmailFormGroup from '../utilComponents/formGroups/EmailFormGroup'\r\nimport PasswordFormGroup from '../utilComponents/formGroups/PasswordFormGroup'\r\n\r\nfunction Login() {\r\n    const [form, setForm] = useState({})\r\n    const [validated, setValidated] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        const f = event.currentTarget;\r\n\r\n        if (f.checkValidity() === true) {\r\n            setValidated(true)\r\n            dispatch(login(form))\r\n        }\r\n    }\r\n\r\n    if (user.user) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"my__login__form\">\r\n            <EmailFormGroup onChange={(event) => setField('email', event.target.value)}></EmailFormGroup>\r\n            <PasswordFormGroup onChange={(event) => setField('password', event.target.value)}></PasswordFormGroup>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\r\nimport \"../styling/home_page.css\";\r\nimport Login from \"./users/Login\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <main className=\"home__page my__login__container\">\r\n      <Login></Login>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction FirstNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"First Name\"}\r\n            placeholder={\"Enter first name...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default FirstNameFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction LastNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Last Name\"}\r\n            placeholder={\"Enter last name...\"}\r\n            minLength={1}\r\n            maxLength={60}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default LastNameFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction FirstNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Phone Number\"}\r\n            placeholder={\"Enter phone number...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            required={true}\r\n            onChange={(event) => props.onChange(event)}\r\n            pattern={\"/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$/\"}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default FirstNameFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction CityFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"City\"}\r\n            placeholder={\"Enter city...\"}\r\n            minLength={1}\r\n            maxLength={100}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default CityFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction CountryFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Country\"}\r\n            placeholder={\"Enter country...\"}\r\n            minLength={1}\r\n            maxLength={100}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default CountryFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction StreetFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Street\"}\r\n            placeholder={\"Enter street...\"}\r\n            minLength={1}\r\n            maxLength={150}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default StreetFormGroup\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { PatchMinus } from 'react-bootstrap-icons';\r\n\r\nfunction ErrorModal(props) {\r\n    return (\r\n        <>\r\n            <style type=\"text/css\">\r\n                {`\r\n                    [variant=\"modal-header-error\"] {\r\n                        background: #e85e6c;\r\n                        text-align: center;\r\n                        margin: -5px, -5px, 0, 0;\r\n                        padding: 10px;\r\n                      }\r\n                `}\r\n            </style>\r\n            <Modal {...props}>\r\n                <Modal.Header variant='modal-header-error' className=\"justify-content-center\" closeButton>\r\n                    <PatchMinus color='white' size={26}></PatchMinus>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"justify-content-center\">\r\n                    <h4>Oops!</h4>\r\n                    <p>{props.message}</p>\r\n                    <Button className=\"float-right\" variant=\"outline-secondary\" onClick={props.onHide} >Close</Button>\r\n                </Modal.Body>\r\n            </Modal >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorModal\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { PatchCheck } from 'react-bootstrap-icons';\r\n\r\nfunction SuccessModal(props) {\r\n    return (\r\n        <>\r\n            <style type=\"text/css\">\r\n                {`\r\n                    [variant=\"modal-header-success\"] {\r\n                        background: #B9E883;\r\n                        text-align: center;\r\n                        margin: -5px, -5px, 0, 0;\r\n                        padding: 10px;\r\n                      }\r\n                `}\r\n            </style>\r\n            <Modal {...props}>\r\n                <Modal.Header variant='modal-header-success' className=\"justify-content-center\" closeButton>\r\n                    <PatchCheck color='white' size={26}></PatchCheck>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"justify-content-center\">\r\n                    <p>{props.message}</p>\r\n                    <Button className=\"float-right\" variant=\"outline-secondary\" onClick={props.onHide} >Close</Button>\r\n                </Modal.Body>\r\n            </Modal >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuccessModal\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport \"../styling/home_page.css\";\r\nimport FirstNameFormGroup from \"./utilComponents/formGroups/FirstNameFormGroup\";\r\nimport LastNameFormGroup from \"./utilComponents/formGroups/LastNameFormGroup\";\r\nimport EmailFormGroup from \"./utilComponents/formGroups/EmailFormGroup\";\r\nimport PasswordFormGroup from \"./utilComponents/formGroups/PasswordFormGroup\";\r\nimport PhoneNumberFormGroup from \"./utilComponents/formGroups/PhoneNumberFormGroup\";\r\nimport CityFormGroup from \"./utilComponents/formGroups/CityFormGroup\";\r\nimport CountryFormGroup from \"./utilComponents/formGroups/CountryFormGroup\";\r\nimport StreetFormGroup from \"./utilComponents/formGroups/StreetFormGroup\";\r\n\r\nimport axios from \"../app/api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport ErrorModal from \"./utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"./utilComponents/modals/SuccessModal\";\r\n\r\nfunction Registration() {\r\n  const [form, setForm] = useState({});\r\n  const [validated, setValidated] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const f = event.currentTarget;\r\n\r\n    if (f.checkValidity() === true) {\r\n      setValidated(true);\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    const newForm = convertForm(form);\r\n    console.log(newForm);\r\n    axios\r\n      .post(\"/api/users/\", newForm)\r\n      .then(() => {\r\n        setForm({});\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let address = {\r\n      city: form[\"city\"],\r\n      street: form[\"street\"],\r\n      country: form[\"country\"],\r\n    };\r\n\r\n    let newForm = {\r\n      ...form,\r\n      address: address,\r\n      roleName: \"PATIENT\",\r\n    };\r\n\r\n    delete newForm[\"city\"];\r\n    delete newForm[\"street\"];\r\n    delete newForm[\"country\"];\r\n\r\n    return newForm;\r\n  };\r\n\r\n  if (user.user) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"home__page my__login__container\">\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={handleSubmit}\r\n        className=\"my__login__form\"\r\n      >\r\n        <FirstNameFormGroup\r\n          onChange={(event) => setField(\"firstName\", event.target.value)}\r\n        />\r\n        <LastNameFormGroup\r\n          onChange={(event) => setField(\"lastName\", event.target.value)}\r\n        />\r\n        <EmailFormGroup\r\n          onChange={(event) => setField(\"email\", event.target.value)}\r\n        ></EmailFormGroup>\r\n        <PasswordFormGroup\r\n          onChange={(event) => setField(\"password\", event.target.value)}\r\n        ></PasswordFormGroup>\r\n        <PhoneNumberFormGroup\r\n          onChange={(event) => setField(\"telephone\", event.target.value)}\r\n        ></PhoneNumberFormGroup>\r\n        <CityFormGroup\r\n          onChange={(event) => setField(\"city\", event.target.value)}\r\n        ></CityFormGroup>\r\n        <StreetFormGroup\r\n          onChange={(event) => setField(\"street\", event.target.value)}\r\n        ></StreetFormGroup>\r\n        <CountryFormGroup\r\n          onChange={(event) => setField(\"country\", event.target.value)}\r\n        ></CountryFormGroup>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong. User registration failed.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Successfully registred. Please confirm your email.\"\r\n      >\r\n        {\" \"}\r\n      </SuccessModal>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","export function getIdFromToken() {\r\n  try {\r\n    let token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    let parsedToken = JSON.parse(atob(token.split(\".\")[1]));\r\n    let id = parsedToken.id;\r\n    return id;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getUserTypeFromToken() {\r\n  try {\r\n    let token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    let parsedToken = JSON.parse(atob(token.split(\".\")[1]));\r\n    let userType = parsedToken.userType;\r\n    return userType;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport Map from \"ol/Map\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport { fromLonLat, toLonLat } from \"ol/proj\";\r\n\r\nimport \"../../styling/pharmacyHomePage.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction EditBasicInfo({ pharmacyDetails, changedPharmacy }) {\r\n  const { addToast } = useToasts();\r\n  const [fixing, setFixing] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [valid, setValid] = useState(true);\r\n  const [text, setText] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n    street: \"\",\r\n    longitude: 0,\r\n    latitude: 0,\r\n  });\r\n\r\n  let handleChange = (event) => {\r\n    let key = event.target.name;\r\n    let value = event.target.value;\r\n    validateData(key, value);\r\n    setText({ ...text, [key]: value });\r\n  };\r\n\r\n  let editClickHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let saveClickHandler = () => {\r\n    if (valid) {\r\n      setEditMode(false);\r\n    }\r\n    let dto = {\r\n      id: pharmacyDetails.id,\r\n      name: text.name,\r\n      description: text.description,\r\n      address: {\r\n        id: pharmacyDetails.address.id,\r\n        country: text.country,\r\n        city: text.city,\r\n        street: text.street,\r\n        location: {\r\n          id: pharmacyDetails.address.location.id,\r\n          longitude: text.longitude,\r\n          latitude: text.latitude,\r\n        },\r\n      },\r\n    };\r\n\r\n    axios\r\n      .put(`/api/pharmacy/${pharmacyDetails.id}`, dto)\r\n      .then((res) => {\r\n        changedPharmacy();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let cancelClickHandler = () => {\r\n    setValid(true);\r\n    setEditMode(false);\r\n    setText({\r\n      name: pharmacyDetails?.name,\r\n      description: pharmacyDetails?.description,\r\n      country: pharmacyDetails?.address?.country,\r\n      city: pharmacyDetails?.address?.city,\r\n      street: pharmacyDetails?.address?.street,\r\n      longitude: pharmacyDetails?.address?.location?.longitude,\r\n      latitude: pharmacyDetails?.address?.location?.latitude,\r\n    });\r\n  };\r\n\r\n  let handleClickOnMap = function (longitude, latitude) {\r\n    setText({ ...text, latitude: latitude, longitude: longitude });\r\n    if (fixing === \"longitude\" || fixing === \"latitude\") {\r\n      setFixing(null);\r\n      setValid(true);\r\n    }\r\n    // Try finding city and country\r\n    axios\r\n      .get(\r\n        `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\r\n      )\r\n      .then((res) => {\r\n        setText({\r\n          ...text,\r\n          country: res.data.countryName,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          street: res.data.locality,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let validateData = (key, value) => {\r\n    let isValid = true;\r\n    let message = \"\";\r\n    if (value == \"\") {\r\n      isValid = false;\r\n      message = `Value '${key}' is required.`;\r\n    }\r\n    if (key === \"longitude\" || key === \"latitude\") {\r\n      let list = value.split(/\\./);\r\n      if (list.length !== 2) {\r\n        isValid = false;\r\n      } else {\r\n        if (\r\n          Number.parseInt(list[0]).toString() === list[0] &&\r\n          Number.parseInt(list[1]).toString() === list[1]\r\n        ) {\r\n          isValid = true;\r\n        } else {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      if (!isValid) {\r\n        message = `Value '${key}' is not valid. Example of valid value is '19.833549'`;\r\n      }\r\n    }\r\n\r\n    if (!isValid) {\r\n      setFixing(key);\r\n    } else {\r\n      setFixing(null);\r\n    }\r\n\r\n    setValid(isValid);\r\n\r\n    if (message != \"\")\r\n      addToast(message, {\r\n        appearance: \"warning\",\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setText({\r\n      name: pharmacyDetails?.name,\r\n      description: pharmacyDetails?.description,\r\n      country: pharmacyDetails?.address?.country,\r\n      city: pharmacyDetails?.address?.city,\r\n      street: pharmacyDetails?.address?.street,\r\n      longitude: pharmacyDetails?.address?.location?.longitude,\r\n      latitude: pharmacyDetails?.address?.location?.latitude,\r\n    });\r\n  }, [pharmacyDetails]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"divForMap\").innerHTML = \"\";\r\n    let map = new Map({\r\n      target: \"divForMap\",\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n\r\n      view: new View({\r\n        center: fromLonLat([\r\n          pharmacyDetails?.address?.location?.longitude,\r\n          pharmacyDetails?.address?.location?.latitude,\r\n        ]),\r\n        zoom: 10,\r\n        minZoom: 5,\r\n        maxZoom: 12,\r\n      }),\r\n    });\r\n\r\n    if (editMode) {\r\n      map.on(\"click\", (evt) => {\r\n        let coords = toLonLat(evt.coordinate);\r\n        let lat = coords[1];\r\n        let lon = coords[0];\r\n        handleClickOnMap(lon, lat);\r\n      });\r\n    } else {\r\n      map.removeEventListener(\"click\");\r\n    }\r\n\r\n    return map;\r\n  }, [pharmacyDetails, editMode, handleClickOnMap]);\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"first\">\r\n      <h1 className=\"content-header\">Basic informations</h1>\r\n      <hr></hr>\r\n      <Form>\r\n        <Row className=\"row-content\">\r\n          <Col lg={6} md={12} sm={12}>\r\n            <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n              <Form.Label column sm={2}>\r\n                Name\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  disabled={!editMode || (fixing !== null && fixing !== \"name\")}\r\n                  value={text?.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalDescription\">\r\n              <Form.Label column sm={2}>\r\n                Description\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"description\")\r\n                  }\r\n                  value={text?.description}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalCountry\">\r\n              <Form.Label column sm={2}>\r\n                Country\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  placeholder=\"Country\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"country\")\r\n                  }\r\n                  value={text?.country}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalCity\">\r\n              <Form.Label column sm={2}>\r\n                City\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  disabled={!editMode || (fixing !== null && fixing !== \"city\")}\r\n                  value={text?.city}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalStreet\">\r\n              <Form.Label column sm={2}>\r\n                Street\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"street\"\r\n                  placeholder=\"Street\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"street\")\r\n                  }\r\n                  value={text?.street}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalLongitude\">\r\n              <Form.Label column sm={2}>\r\n                Longitude\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"longitude\"\r\n                  placeholder=\"Longitude\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"longitude\")\r\n                  }\r\n                  value={text?.longitude}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalLatitude\">\r\n              <Form.Label column sm={2}>\r\n                Latitude\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"latitude\"\r\n                  placeholder=\"Latitude\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"latitude\")\r\n                  }\r\n                  value={text?.latitude}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col lg={6} md={12} sm={12}>\r\n            <div id=\"divForMap\"></div>\r\n          </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n          <Col className=\"center\">\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              disabled={!editMode || !valid}\r\n              onClick={saveClickHandler}\r\n            >\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"lg\"\r\n              disabled={editMode}\r\n              onClick={editClickHandler}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"lg\"\r\n              disabled={!editMode}\r\n              onClick={cancelClickHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default EditBasicInfo;\r\n","import { React, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  Modal,\r\n  Form,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AddPurchaseOrderModal(props) {\r\n  const { addToast } = useToasts();\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [selectedName, setSelectedName] = useState(\"\");\r\n  const [amount, setAmount] = useState(100);\r\n  const [orders, setOrders] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  let handleClick = (medicineId, name) => {\r\n    setSelectedRowId(medicineId);\r\n    setSelectedName(name);\r\n  };\r\n\r\n  let handleRemove = (medicineId) => {\r\n    setSelectedItems(selectedItems.filter((item) => item != medicineId));\r\n    setOrders(orders.filter((item) => item.medicineId != medicineId));\r\n  };\r\n\r\n  let handleAdd = () => {\r\n    setOrders([\r\n      ...orders,\r\n      { medicineId: selectedRowId, amount, name: selectedName },\r\n    ]);\r\n    setSelectedItems([...selectedItems, selectedRowId]);\r\n    setSelectedRowId(-1);\r\n    setSelectedName(\"\");\r\n  };\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    d.setHours(0, 0, 0);\r\n    let now = new Date();\r\n    if (d.getTime() > now.getTime()) setStartDate(d);\r\n    else {\r\n      setStartDate(null);\r\n      addToast(\"End date should be in future!\", {\r\n        appearance: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setSelectedRowId(-1);\r\n        setAmount(100);\r\n        setOrders([]);\r\n        setSelectedItems([]);\r\n        setSelectedName(\"\");\r\n        setStartDate(null);\r\n      }}\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add order items\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} md={8} lg={8}>\r\n              <Table bordered hover striped variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Code</th>\r\n                    <th>Name</th>\r\n                    <th>Avg. grade</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {props?.medicineList?.length != 0 &&\r\n                    props?.medicineList?.map((item, index) => (\r\n                      <tr\r\n                        onClick={() => {\r\n                          if (!selectedItems.includes(item.medicine.id))\r\n                            handleClick(item.medicine.id, item.medicine.name);\r\n                        }}\r\n                        className={`${\r\n                          selectedRowId == item.medicine.id && \"selectedRow\"\r\n                        }  ${\r\n                          selectedItems.includes(item.medicine.id)\r\n                            ? \"disabledRow\"\r\n                            : \"pointer\"\r\n                        } `}\r\n                      >\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.medicine.code}</td>\r\n                        <td>{item.medicine.name}</td>\r\n                        <td>{item.medicine.avgGrade}</td>\r\n                        <td>{item.amount}</td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n              <Form.Group controlId=\"amountPicker\" di>\r\n                <Form.Label>Order amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={amount}\r\n                  disabled={selectedRowId == -1}\r\n                  onChange={(event) =>\r\n                    setAmount(Number.parseInt(event.target.value))\r\n                  }\r\n                  min=\"1\"\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                disabled={selectedRowId == -1}\r\n                onClick={handleAdd}\r\n                variant=\"success\"\r\n              >\r\n                Add item\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <ListGroup variant=\"flush\">\r\n                {orders?.map((item) => (\r\n                  <ListGroup.Item\r\n                    onClick={() => handleRemove(item.medicineId)}\r\n                    className=\"pointer\"\r\n                    variant=\"dark\"\r\n                  >\r\n                    {item?.name} {item?.amount}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <hr></hr>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"datePicker\" di>\r\n                <Form.Label>Deadline date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(event) => changeDate(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={orders?.length == 0 || startDate === null}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd({ orders, startDate });\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddPurchaseOrderModal;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Button, Table, Modal } from \"react-bootstrap\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nfunction SelectOfferModal(props) {\r\n  const [offers, setOffers] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n\r\n  let handleClick = (medicineId) => {\r\n    setSelectedRowId(medicineId);\r\n  };\r\n\r\n  async function fetchOffer() {\r\n    const request = await axios.get(\r\n      `/api/suppliers/offers/byorderid/${props.orderId}`\r\n    );\r\n    setOffers(request.data);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.orderId != undefined) {\r\n      fetchOffer();\r\n    }\r\n  }, [props.orderId]);\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setSelectedRowId(-1);\r\n      }}\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Choose offer\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Table bordered hover striped variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Price</th>\r\n              <th>Delivery date</th>\r\n              <th>Supplier</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {offers?.length != 0 &&\r\n              offers?.map((item, index) => (\r\n                <tr\r\n                  onClick={() => {\r\n                    handleClick(item.id);\r\n                  }}\r\n                  className={`${\r\n                    selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                  }`}\r\n                >\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.price}</td>\r\n                  <td>\r\n                    {moment(item.deliveryDat).format(\"DD MMM YYYY   hh:mm a\")}\r\n                  </td>\r\n                  <td>{item.worker}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={selectedRowId == -1}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleSelect(selectedRowId);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SelectOfferModal;\r\n","import { React, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\nimport moment from \"moment\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction EditOrderModal(props) {\r\n  const { addToast } = useToasts();\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    d.setHours(0, 0, 0);\r\n    let now = new Date();\r\n    if (d.getTime() > now.getTime()) setStartDate(d);\r\n    else {\r\n      setStartDate(null);\r\n      addToast(\"The date must be in the future.\", {\r\n        appearance: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setStartDate(null);\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit deadline\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h4>\r\n                Old deadline is{\" \"}\r\n                {moment(props.order.deliveryDat).format(\"DD MMM YYYY\")}\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"datePicker\" di>\r\n                <Form.Label>Deadline date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(event) => changeDate(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={startDate === null}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleEdit(startDate);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditOrderModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport {\r\n  Pagination,\r\n  Table,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport AddPurchaseOrderModal from \"./AddPurchaseOrderModal\";\r\nimport SelectOfferModal from \"./SelectOfferModal\";\r\nimport EditOrderModal from \"./EditOrderModal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction DisplayPurchaseOrders({\r\n  idOfPharmacy,\r\n  priceListId,\r\n  refresh,\r\n  refreshInq,\r\n  setRefreshInq,\r\n}) {\r\n  const { addToast } = useToasts();\r\n  const [orders, setOrders] = useState([]);\r\n  const [filterValue, setFilterValue] = useState(\"All\");\r\n  const [showedOrders, setShowedOrders] = useState([]);\r\n  const [showedOrder, setShowedOrder] = useState(null);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"All\");\r\n\r\n  const [selectOfferModalShow, setSelectOfferModalShow] = useState(false);\r\n  const [showEditOrderModal, setShowEditOrderModal] = useState(false);\r\n\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [medicineItems, setMedicineItems] = useState([]);\r\n\r\n  async function fetchPriceList() {\r\n    const request = await axios\r\n      .get(`/api/pricelist/${priceListId}`)\r\n      .then((res) => {\r\n        setMedicineItems(res.data.medicineItems);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (priceListId != undefined) {\r\n      fetchPriceList();\r\n    }\r\n  }, [priceListId, refresh]);\r\n\r\n  async function fetchOrders() {\r\n    const request = await axios.get(\r\n      `/api/orders/bypharmacyid/${idOfPharmacy}`,\r\n      { params: { filter: filterValue } }\r\n    );\r\n    setOrders(request.data);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchOrders();\r\n    }\r\n  }, [idOfPharmacy, filterValue]);\r\n\r\n  let filterOrders = (param) => {\r\n    setShowedOrder(null);\r\n    setPugNummber(0);\r\n    setFilterValue(param);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(orders?.length / 4) - 1;\r\n    if (orders?.length / 4 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [orders]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 4;\r\n    let max = orders.length < first + 4 ? orders?.length : first + 4;\r\n    setShowedOrders(orders?.slice(first, max));\r\n  }, [orders, pagNumber]);\r\n\r\n  async function addPurchaseOrder(data) {\r\n    let dto = {\r\n      pharmacyId: idOfPharmacy,\r\n      deadline: data.startDate.getTime(),\r\n      items: [...data.orders],\r\n      adminId: getIdFromToken(),\r\n    };\r\n\r\n    const request = await axios\r\n      .post(`/api/orders/addorder`, dto)\r\n      .then((res) => {\r\n        fetchOrders();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  let handleAddModalSave = (orders) => {\r\n    setAddModalShow(false);\r\n    addPurchaseOrder(orders);\r\n  };\r\n\r\n  let handleAddModalClose = () => {\r\n    setAddModalShow(false);\r\n  };\r\n\r\n  async function deletePOrder() {\r\n    const request = await axios\r\n      .delete(`/api/orders/${showedOrder.id}`)\r\n      .then((res) => {\r\n        fetchOrders();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let deleteOrder = () => {\r\n    deletePOrder();\r\n  };\r\n\r\n  async function selectOrder(selectedOfferId) {\r\n    let dto = {\r\n      selectedOfferId,\r\n      orderId: showedOrder.id,\r\n      adminId: getIdFromToken(),\r\n    };\r\n    setShowSpinner(true);\r\n    const request = await axios\r\n      .post(`/api/suppliers/offers/accept/`, dto)\r\n      .then((res) => {\r\n        setShowSpinner(false);\r\n        filterOrders(\"All\");\r\n        setDropdownLabel(\"All\");\r\n        setRefreshInq(!refreshInq);\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleSelectOfferModalSave = (selectedOfferId) => {\r\n    setSelectOfferModalShow(false);\r\n    selectOrder(selectedOfferId);\r\n  };\r\n\r\n  let handleSelectOfferModalClose = () => {\r\n    setSelectOfferModalShow(false);\r\n  };\r\n\r\n  async function editOrder(date) {\r\n    const request = await axios\r\n      .put(`/api/orders/${showedOrder.id}/${date.getTime()}/`)\r\n      .then((res) => {\r\n        fetchOrders();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleEditModalSave = (date) => {\r\n    setShowEditOrderModal(false);\r\n    editOrder(date);\r\n  };\r\n\r\n  let handleEditModalClose = () => {\r\n    setShowEditOrderModal(false);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"seventh\">\r\n      <h1 className=\"content-header\">Purchase orders</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        {\" \"}\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n            Filter : {dropdownLabel}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"All\");\r\n                setDropdownLabel(\"All\");\r\n              }}\r\n            >\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"InProgress\");\r\n                setDropdownLabel(\"InProgress\");\r\n              }}\r\n            >\r\n              In progress\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"OnHold\");\r\n                setDropdownLabel(\"OnHold\");\r\n              }}\r\n            >\r\n              On hold\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"Processed\");\r\n                setDropdownLabel(\"Processed\");\r\n              }}\r\n            >\r\n              Ended\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Button\r\n          variant=\"success\"\r\n          size=\"md\"\r\n          onClick={() => {\r\n            setAddModalShow(true);\r\n          }}\r\n        >\r\n          Add purchase order\r\n        </Button>\r\n        <AddPurchaseOrderModal\r\n          medicineList={medicineItems}\r\n          idOfPharmacy={idOfPharmacy}\r\n          show={addModalShow}\r\n          onHide={handleAddModalClose}\r\n          handleAdd={handleAddModalSave}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        {showedOrders != [] &&\r\n          showedOrders?.map((order, index) => (\r\n            <Col className=\"my__flex\" key={index} lg={3} md={6} sm={4}>\r\n              <Card\r\n                onClick={() => {\r\n                  setShowedOrder(order);\r\n                }}\r\n                className=\"my__card\"\r\n                style={{ width: \"22rem\", height: \"10rem\" }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Title>Order {order.id}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  {moment(order.deadline).format(\"DD MMM YYYY   hh:mm a\")}\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <Row className=\"my__row__pagination\">\r\n        <Col className=\"my__flex\">\r\n          <Pagination size=\"lg\">\r\n            <Pagination.Prev\r\n              disabled={pagNumber === 0}\r\n              onClick={handleSlideLeft}\r\n            />\r\n            <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n            <Pagination.Next\r\n              disabled={pagNumber === maxPag}\r\n              onClick={handleSlideRight}\r\n            />\r\n          </Pagination>\r\n        </Col>\r\n      </Row>\r\n      {showedOrder != null && (\r\n        <Row>\r\n          <Col>\r\n            <Alert variant=\"secondary\">\r\n              <Alert.Heading>Order {showedOrder.id}</Alert.Heading>\r\n            </Alert>\r\n          </Col>\r\n          <Col className=\"center\">\r\n            <Button\r\n              disabled={\r\n                showedOrder == null || showedOrder.adminId != getIdFromToken()\r\n              }\r\n              variant=\"info\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                setShowEditOrderModal(true);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <EditOrderModal\r\n              order={showedOrder}\r\n              show={showEditOrderModal}\r\n              onHide={handleEditModalClose}\r\n              handleEdit={handleEditModalSave}\r\n            />\r\n            <Button\r\n              disabled={\r\n                showedOrder == null ||\r\n                dropdownLabel !== \"OnHold\" ||\r\n                showedOrder.adminId != getIdFromToken()\r\n              }\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                setSelectOfferModalShow(true);\r\n              }}\r\n            >\r\n              Choose offer\r\n            </Button>\r\n            <Button\r\n              disabled={\r\n                showedOrder == null || showedOrder.adminId != getIdFromToken()\r\n              }\r\n              variant=\"danger\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                deleteOrder();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Col></Col>\r\n        <Col className=\"center\">\r\n          {\" \"}\r\n          <Spinner\r\n            style={{ display: showSpinner ? \"block\" : \"none\" }}\r\n            animation=\"border\"\r\n          />\r\n          <hr></hr>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {showedOrder && (\r\n            <Table striped bordered variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Code</th>\r\n                  <th>Name</th>\r\n                  <th>Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <SelectOfferModal\r\n                  orderId={showedOrder.id}\r\n                  show={selectOfferModalShow}\r\n                  onHide={handleSelectOfferModalClose}\r\n                  handleSelect={handleSelectOfferModalSave}\r\n                />\r\n                {showedOrder &&\r\n                  showedOrder.orderItem.map((item, index) => (\r\n                    <tr>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.medicine.code}</td>\r\n                      <td>{item.medicine.name}</td>\r\n                      <td>{item.amount}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayPurchaseOrders;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { Button, Tab, Row, Col, Table, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AddAppointment({ idOfPharmacy }) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [dermatologists, setDermatologists] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startHour, setStartHour] = useState(\"10:00\");\r\n  const [dermatogistPicked, setDermatogistPicked] = useState(0);\r\n  const [duration, setDuration] = useState(15);\r\n  const [price, setPrice] = useState(2000);\r\n  const [refresh, setRefresh] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      async function fetchDermatologists() {\r\n        const request = await axios.get(\r\n          `/api/workplace/dermatologists/bypharmacyid/${idOfPharmacy}`\r\n        );\r\n        setDermatologists(request.data);\r\n        return request;\r\n      }\r\n      fetchDermatologists();\r\n    }\r\n  }, [idOfPharmacy]);\r\n\r\n  useEffect(() => {\r\n    if (dermatogistPicked != 0) {\r\n      async function fetchAppointments() {\r\n        const request = await axios\r\n          .get(`/api/appointment/all/bydermatologistid/${dermatogistPicked}`, {\r\n            params: { date: startDate.getTime() },\r\n          })\r\n          .then((res) => {\r\n            setAppointments(res.data);\r\n          })\r\n          .catch((err) => {\r\n            addToast(err.response.data, {\r\n              appearance: \"error\",\r\n            });\r\n          });\r\n\r\n        return request;\r\n      }\r\n      fetchAppointments();\r\n    } else {\r\n      setAppointments([]);\r\n    }\r\n  }, [startDate, dermatogistPicked, refresh]);\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    setStartDate(d);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dermatologists !== []) {\r\n      let i;\r\n      let flag = false;\r\n      for (i = 0; i < dermatologists.length; i++) {\r\n        if (dermatologists[i].worker.id == dermatogistPicked) {\r\n          let j;\r\n          for (j = 0; j < dermatologists[i].workDays.length; j++) {\r\n            if (\r\n              !dermatologists[i].workDays[j].weekday.localeCompare(\r\n                startDate.toString().substring(0, 3).toUpperCase()\r\n              )\r\n            ) {\r\n              let d1 = new Date();\r\n              let d2 = new Date();\r\n              d1.setHours(dermatologists[i].workDays[j].startTime);\r\n              d2.setHours(dermatologists[i].workDays[j].endTime);\r\n\r\n              addToast(\r\n                `Workshedule : ${moment(d1.getTime()).format(\r\n                  \"hh:00 a\"\r\n                )} - ${moment(d2.getTime()).format(\"hh:00 a\")}`,\r\n                {\r\n                  appearance: \"info\",\r\n                }\r\n              );\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (!flag) {\r\n        if (dermatogistPicked != 0) {\r\n          addToast(\"It's a non-working day\", {\r\n            appearance: \"info\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [dermatogistPicked, startDate]);\r\n\r\n  let sendAppointment = () => {\r\n    let date = startDate;\r\n    let hour = startHour;\r\n    let array = hour.split(\":\");\r\n    date.setHours(Number.parseInt(array[0]), Number.parseInt(array[1]), 0);\r\n    let long = date.getTime();\r\n    let request = { duration, price: price, startTime: long };\r\n    console.log(request);\r\n\r\n    axios\r\n      .post(`/api/appointment/${idOfPharmacy}/${dermatogistPicked}`, request)\r\n      .then((res) => {\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n        reloadForm();\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let reloadForm = () => {\r\n    setStartHour(\"10:00\");\r\n    setDuration(15);\r\n    setRefresh(!refresh);\r\n    setPrice(2000);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"fourth\">\r\n      <h1 className=\"content-header\">Add appointment</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col lg={4} md={4} sm={12}>\r\n          <Form.Group controlId=\"dermatologistSelect\">\r\n            <Form.Label>Dermatologist</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(event) => setDermatogistPicked(event.target.value)}\r\n              defaultValue=\"0\"\r\n            >\r\n              <option value=\"0\">Not Selected</option>\r\n              {dermatologists != [] &&\r\n                dermatologists?.map((dermatologist) => (\r\n                  <option value={dermatologist.worker.id}>\r\n                    {dermatologist.worker.lastName}{\" \"}\r\n                    {dermatologist.worker.firstName}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"datePicker\" di>\r\n            <Form.Label>Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) => changeDate(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"timePicker\" di>\r\n            <Form.Label>Start time</Form.Label>\r\n            <Form.Control\r\n              type=\"time\"\r\n              value={startHour}\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) => setStartHour(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"durationPicker\" di>\r\n            <Form.Label>Duration (in minutes)</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={duration}\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) =>\r\n                setDuration(Number.parseInt(event.target.value))\r\n              }\r\n              min=\"0\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"pricePicker\" di>\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={price}\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) =>\r\n                setPrice(Number.parseInt(event.target.value))\r\n              }\r\n              min=\"0\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={dermatogistPicked == 0}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={sendAppointment}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          {appointments.length != 0 && (\r\n            <div>\r\n              <Alert variant=\"primary\">\r\n                <Alert.Heading>Appointments on that date</Alert.Heading>\r\n                <p>\r\n                  These are already created meetings that day. Try to find free\r\n                  time for your meeting.\r\n                </p>\r\n              </Alert>\r\n              <Table bordered striped variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Start time</th>\r\n                    <th>End time</th>\r\n                    <th>State</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {appointments != [] &&\r\n                    appointments.map((appointment, index) => (\r\n                      <tr>\r\n                        <td>{index + 1}</td>\r\n                        <td>\r\n                          {moment(appointment.startTime).format(\"hh:mm a\")}\r\n                        </td>\r\n                        <td>{moment(appointment.endTime).format(\"hh:mm a\")}</td>\r\n                        <td>{appointment.appointmentState}</td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default AddAppointment;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Button, Table, Modal, Form } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nfunction AddingMedicineModal(props) {\r\n  const [medicineList, setMedicineList] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [price, setPrice] = useState(2000);\r\n\r\n  let handleClick = (medicineId) => {\r\n    setSelectedRowId(medicineId);\r\n  };\r\n\r\n  async function fetchMedicine() {\r\n    const request = await axios.get(\r\n      `/api/medicine/notexistingmedicinebypharmacyid/${props.idOfPharmacy}`\r\n    );\r\n    setMedicineList(request.data);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.idOfPharmacy != undefined) {\r\n      fetchMedicine();\r\n    }\r\n  }, [props.idOfPharmacy, props.medicineItemsLength]);\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setSelectedRowId(-1);\r\n        setPrice(2000);\r\n      }}\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Choose medicine\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Table bordered hover striped variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Code</th>\r\n              <th>Name</th>\r\n              <th>Content</th>\r\n              <th>Avg. grade</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {medicineList?.length != 0 &&\r\n              medicineList?.map((item, index) => (\r\n                <tr\r\n                  onClick={() => {\r\n                    handleClick(item.id);\r\n                  }}\r\n                  className={`${\r\n                    selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                  }`}\r\n                >\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.code}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.content}</td>\r\n                  <td>{item.avgGrade}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n        <Form.Group controlId=\"pricePicker\" di>\r\n          <Form.Label>Starting price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={price}\r\n            disabled={selectedRowId == -1}\r\n            onChange={(event) => setPrice(Number.parseInt(event.target.value))}\r\n            min=\"0\"\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={selectedRowId == -1}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd(selectedRowId, price);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddingMedicineModal;\r\n","import { React, useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nfunction ChangePriceModal(props) {\r\n  const [price, setPrice] = useState(0);\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setPrice(0);\r\n      }}\r\n      onEntered={() => {\r\n        setPrice(props.oldPrice);\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Change price\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group controlId=\"pricePicker\" di>\r\n          <Form.Label>Price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={price}\r\n            onChange={(event) => setPrice(Number.parseInt(event.target.value))}\r\n            min=\"0\"\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleChange(price);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePriceModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Button, Table, Modal, Alert } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmacy.css\";\r\n\r\nimport AddingMedicineModal from \"./AddingMedicineModal\";\r\nimport ChangePriceModal from \"./ChangePriceModal\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction DisplayMedicine({\r\n  idOfPharmacy,\r\n  priceListId,\r\n  refreshPriceList,\r\n  setRefreshPriceList,\r\n}) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [medicineItems, setMedicineItems] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [selectedRowPrice, setSelectedRowPrice] = useState(-1);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [changePriceModalShow, setChangePriceModalShow] = useState(false);\r\n  const [removeModalShow, setRemoveModalShow] = useState(false);\r\n\r\n  async function fetchPriceList() {\r\n    const request = await axios\r\n      .get(`/api/pricelist/${priceListId}`)\r\n      .then((res) => {\r\n        setMedicineItems(res.data.medicineItems);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (priceListId != undefined) {\r\n      fetchPriceList();\r\n    }\r\n  }, [priceListId]);\r\n\r\n  let handleClick = (medicineItemId, price) => {\r\n    setSelectedRowId(medicineItemId);\r\n    setSelectedRowPrice(price);\r\n  };\r\n\r\n  async function addMedicine(selectedMedicineId, price) {\r\n    const request = await axios\r\n      .post(\r\n        `/api/pricelist/${priceListId}/addmedicine/${selectedMedicineId}/${price}`\r\n      )\r\n      .then((res) => {\r\n        fetchPriceList();\r\n        setRefreshPriceList(!refreshPriceList);\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function removeMedicine() {\r\n    const request = await axios\r\n      .delete(`/api/pricelist/${priceListId}/removemedicine/${selectedRowId}`)\r\n      .then((res) => {\r\n        fetchPriceList();\r\n        setRefreshPriceList(!refreshPriceList);\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function changePrice(price) {\r\n    const request = await axios\r\n      .post(\r\n        `/api/pricelist/${priceListId}/changeprice/${selectedRowId}/${price}`\r\n      )\r\n      .then((res) => {\r\n        fetchPriceList();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleAddModalSave = (selectedMedicineId, price) => {\r\n    setAddModalShow(false);\r\n    addMedicine(selectedMedicineId, price);\r\n  };\r\n\r\n  let handleChangePriceModalSave = (price) => {\r\n    setChangePriceModalShow(false);\r\n    if (selectedRowPrice != price) changePrice(price);\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  let handleAddModalClose = () => {\r\n    setAddModalShow(false);\r\n  };\r\n\r\n  let handleChangePriceModalClose = () => {\r\n    setChangePriceModalShow(false);\r\n  };\r\n\r\n  let handleRemove = () => {\r\n    removeMedicine();\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"third\">\r\n      <h1 className=\"content-header\">Medicine</h1>\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Code</th>\r\n                <th>Name</th>\r\n                <th>Content</th>\r\n                <th>Avg. grade</th>\r\n                <th>Price</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {medicineItems?.length != 0 &&\r\n                medicineItems?.map((item, index) => (\r\n                  <tr\r\n                    onClick={() => {\r\n                      handleClick(item.id, item.price);\r\n                    }}\r\n                    className={`${\r\n                      selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                    } `}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.medicine.code}</td>\r\n                    <td>{item.medicine.name}</td>\r\n                    <td>{item.medicine.content}</td>\r\n                    <td>{item.medicine.avgGrade}</td>\r\n                    <td>{item.price}$</td>\r\n                    <td>{item.amount}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <div className=\"center\">\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              variant=\"secondary\"\r\n              onClick={() => {\r\n                setChangePriceModalShow(true);\r\n              }}\r\n            >\r\n              Change price\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={() => {\r\n                setAddModalShow(true);\r\n                setSelectedRowId(-1);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                setRemoveModalShow(true);\r\n              }}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n\r\n          <AddingMedicineModal\r\n            medicineItemsLength={medicineItems?.length}\r\n            idOfPharmacy={idOfPharmacy}\r\n            show={addModalShow}\r\n            onHide={handleAddModalClose}\r\n            handleAdd={handleAddModalSave}\r\n          />\r\n          <ChangePriceModal\r\n            oldPrice={selectedRowPrice}\r\n            show={changePriceModalShow}\r\n            onHide={handleChangePriceModalClose}\r\n            handleChange={handleChangePriceModalSave}\r\n          />\r\n          <Modal\r\n            oldPrice={idOfPharmacy}\r\n            show={removeModalShow}\r\n            onHide={() => {\r\n              setRemoveModalShow(false);\r\n            }}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Attention</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              Are you sure you want to delete the medicine?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  setRemoveModalShow(false);\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => {\r\n                  handleRemove();\r\n                  setRemoveModalShow(false);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayMedicine;\r\n","import { React, useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nfunction RejectRequestModal(props) {\r\n  const [reason, setReason] = useState(\"\");\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setReason(\"\");\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Reason for rejecting request\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Write a reason for rejecting request</Form.Label>\r\n          <Form.Control\r\n            onChange={(event) => setReason(event.target.value)}\r\n            as=\"textarea\"\r\n            rows={3}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={reason === \"\"}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.rejectRequest(reason);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default RejectRequestModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Button, Table, Modal, Alert } from \"react-bootstrap\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmacy.css\";\r\nimport RejectRequestModal from \"./RejectRequestModal\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nfunction DisplayHolidayRequests({ idOfPharmacy }) {\r\n  const { addToast } = useToasts();\r\n  const [requests, setRequests] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  async function fetchRequests() {\r\n    const request = await axios.get(\r\n      `/api/vacation/getunresolvedrequestsbypharmacyid/${idOfPharmacy}`\r\n    );\r\n    setRequests(request.data);\r\n\r\n    return request;\r\n  }\r\n\r\n  async function rejectRequest(reason) {\r\n    const request = await axios\r\n      .post(`/api/vacation/rejectrequest/${selectedRowId}`, reason)\r\n      .then((res) => {\r\n        fetchRequests();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function acceptRequest() {\r\n    const request = await axios\r\n      .post(`/api/vacation/acceptrequest/${selectedRowId}`)\r\n      .then((res) => {\r\n        fetchRequests();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchRequests();\r\n    }\r\n  }, [idOfPharmacy]);\r\n\r\n  let handleClick = (requestId) => {\r\n    setSelectedRowId(requestId);\r\n  };\r\n\r\n  let handleReject = (reason) => {\r\n    setShowAlert(false);\r\n    rejectRequest(reason);\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  let handleAccept = () => {\r\n    acceptRequest();\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"fifth\">\r\n      <h1 className=\"content-header\">Requests for vacations and absences</h1>\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Type</th>\r\n                <th>State</th>\r\n                <th>Start time</th>\r\n                <th>End time</th>\r\n                <th>Worker details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\" \"}\r\n              {requests?.length != 0 &&\r\n                requests?.map((item, index) => (\r\n                  <tr\r\n                    onClick={() => {\r\n                      handleClick(item.id);\r\n                    }}\r\n                    className={`${\r\n                      selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                    } `}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.absenceType}</td>\r\n                    <td>{item.requestState}</td>\r\n                    <td>{moment(item.start).format(\"DD-MM-YYYY\")}</td>\r\n                    <td>{moment(item.end).format(\"DD-MM-YYYY\")}</td>\r\n                    <td>{item.workerDetails}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <RejectRequestModal\r\n            show={showAlert}\r\n            onHide={() => setShowAlert(false)}\r\n            rejectRequest={handleReject}\r\n          />\r\n\r\n          <div className=\"center\">\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              onClick={handleAccept}\r\n              variant=\"primary\"\r\n            >\r\n              Accept request\r\n            </Button>\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              onClick={() => setShowAlert(true)}\r\n              variant=\"secondary\"\r\n            >\r\n              Reject request\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayHolidayRequests;\r\n","import { React, useState } from \"react\";\r\nimport { Button, Table, Modal, Form, Row, Col } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AddingWorkerModal(props) {\r\n  const { addToast } = useToasts();\r\n  const [workerList, setWorkerList] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n\r\n  const [startHour, setStartHour] = useState(10);\r\n  const [endHour, setEndHour] = useState(17);\r\n\r\n  const [enable1, setEnable1] = useState(false);\r\n  const [enable2, setEnable2] = useState(false);\r\n  const [enable3, setEnable3] = useState(false);\r\n  const [enable4, setEnable4] = useState(false);\r\n  const [enable5, setEnable5] = useState(false);\r\n  const [enable6, setEnable6] = useState(false);\r\n  const [enable7, setEnable7] = useState(false);\r\n\r\n  let handleClick = (medicineId) => {\r\n    setSelectedRowId(medicineId);\r\n  };\r\n\r\n  async function fetchWorkers() {\r\n    setSelectedRowId(-1);\r\n    let dto = {\r\n      startHour,\r\n      endHour,\r\n      enable1,\r\n      enable2,\r\n      enable3,\r\n      enable4,\r\n      enable5,\r\n      enable6,\r\n      enable7,\r\n    };\r\n    const request = await axios\r\n      .post(\r\n        `/api/workers/notexistingworkplacebypharmacyid/${props.idOfPharmacy}`,\r\n        dto\r\n      )\r\n      .then((res) => {\r\n        setWorkerList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setWorkerList([]);\r\n        setSelectedRowId(-1);\r\n        setStartHour(10);\r\n        setEndHour(17);\r\n        setEnable1(false);\r\n        setEnable2(false);\r\n        setEnable3(false);\r\n        setEnable4(false);\r\n        setEnable5(false);\r\n        setEnable6(false);\r\n        setEnable7(false);\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Adding worker\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"startPicker\" di>\r\n              <Form.Label>Shift start</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={startHour}\r\n                onChange={(event) => setStartHour(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"endPicker\" di>\r\n              <Form.Label>Shift end</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={endHour}\r\n                onChange={(event) => setEndHour(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p>Mark days</p>\r\n            <Table bordered hover striped size=\"sm\" variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Weekday</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  className={`${enable1 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable1(!enable1)}\r\n                >\r\n                  <td>1</td>\r\n                  <td>Monday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable2 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable2(!enable2)}\r\n                >\r\n                  <td>2</td>\r\n                  <td>Tuesday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable3 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable3(!enable3)}\r\n                >\r\n                  <td>3</td>\r\n                  <td>Wednesday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable4 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable4(!enable4)}\r\n                >\r\n                  <td>4</td>\r\n                  <td>Thursday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable5 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable5(!enable5)}\r\n                >\r\n                  <td>5</td>\r\n                  <td>Friday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable6 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable6(!enable6)}\r\n                >\r\n                  <td>6</td>\r\n                  <td>Saturday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable7 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable7(!enable7)}\r\n                >\r\n                  <td>7</td>\r\n                  <td>Sunday</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"center\">\r\n            <Button\r\n              disabled={\r\n                !enable1 &&\r\n                !enable2 &&\r\n                !enable3 &&\r\n                !enable4 &&\r\n                !enable5 &&\r\n                !enable6 &&\r\n                !enable7\r\n              }\r\n              variant=\"primary\"\r\n              onClick={fetchWorkers}\r\n            >\r\n              Check\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Table bordered hover striped variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Type</th>\r\n                  <th>Firstname</th>\r\n                  <th>LastName</th>\r\n                  <th>Avg. grade</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {workerList?.length != 0 &&\r\n                  workerList?.map((item, index) => (\r\n                    <tr\r\n                      onClick={() => {\r\n                        handleClick(item.id);\r\n                      }}\r\n                      className={`${\r\n                        selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                      }`}\r\n                    >\r\n                      <td>{index + 1}</td>\r\n                      <td>{item?.roleName}</td>\r\n                      <td>{item.firstName}</td>\r\n                      <td>{item.lastName}</td>\r\n                      <td>{item.avgGrade}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={selectedRowId == -1}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd(selectedRowId, {\r\n              startHour,\r\n              endHour,\r\n              enable1,\r\n              enable2,\r\n              enable3,\r\n              enable4,\r\n              enable5,\r\n              enable6,\r\n              enable7,\r\n            });\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddingWorkerModal;\r\n","import { React } from \"react\";\r\nimport { Button, Modal, ListGroup } from \"react-bootstrap\";\r\n\r\nfunction DetailsOfWorkerModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Worker pharmacies\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {props?.map[props?.workerId]?.length == 0 && (\r\n          <h4>He does not work in any pharmacy.</h4>\r\n        )}\r\n        {props?.map[props?.workerId]?.length != 0 &&\r\n          props?.map[props?.workerId]?.map((item) => (\r\n            <ListGroup.Item>{item}</ListGroup.Item>\r\n          ))}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default DetailsOfWorkerModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Search, Reply } from \"react-bootstrap-icons\";\r\n\r\nimport { Tab, Row, Col, Button, Table, Form } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/pharmacy.css\";\r\nimport AddingWorkerModal from \"./AddingWorkerModal\";\r\nimport DetailsOfWorkerModal from \"./DetailsOfWorkerModal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction DisplayWorkers({ idOfPharmacy }) {\r\n  const { addToast } = useToasts();\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [pharamcyNameMap, setPharamcyNameMap] = useState([]);\r\n\r\n  const [workers, setWorkers] = useState([]);\r\n  const [showedWorkers, setShowedWorkers] = useState([]);\r\n\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n\r\n  const [selectedWorker, setSelectedWorker] = useState(-1);\r\n\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [detailsModalShow, setDetailsModalShow] = useState(false);\r\n\r\n  // -------------------\r\n  const [fsearch, setFSearch] = useState(\"\");\r\n  const [filterGrade, setFilterGrade] = useState(\"\");\r\n  const [filterPharmacyName, setFilterPharmacyName] = useState(\"\");\r\n\r\n  async function fetchNames() {\r\n    const request = await axios.get(`/api/workplace/pharmacies/all/`);\r\n    setPharamcyNameMap(request.data);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacies() {\r\n      const request = await axios.get(\"/api/pharmacy/\");\r\n      setPharmacies(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  }, []);\r\n\r\n  async function fetchWorkers() {\r\n    const request = await axios\r\n      .get(`/api/workplace/bypharmacyid/${idOfPharmacy}`)\r\n      .then((resp) => {\r\n        setWorkers(resp.data);\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  async function addWorker(id, dto) {\r\n    const request = await axios\r\n      .post(`/api/workplace/addworker/bypharmacyid/${idOfPharmacy}/${id}`, dto)\r\n      .then((res) => {\r\n        fetchWorkers();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  async function removeWorker() {\r\n    const request = await axios\r\n      .delete(\r\n        `/api/workplace/removeworker/bypharmacyid/${idOfPharmacy}/${selectedRowId}`\r\n      )\r\n      .then((res) => {\r\n        fetchWorkers();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchWorkers();\r\n      fetchNames();\r\n    }\r\n  }, [idOfPharmacy]);\r\n\r\n  let handleClick = (requestId, workerId) => {\r\n    setSelectedRowId(requestId);\r\n    setSelectedWorker(workerId);\r\n  };\r\n\r\n  let handleRemove = () => {\r\n    removeWorker();\r\n    setSelectedRowId(-1);\r\n    setSelectedWorker(-1);\r\n  };\r\n\r\n  let handleAddModalSave = (selectedMedicineId, dto) => {\r\n    setAddModalShow(false);\r\n    addWorker(selectedMedicineId, dto);\r\n  };\r\n\r\n  let handleInfo = () => {\r\n    setDetailsModalShow(true);\r\n  };\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (fsearch.length === 0) {\r\n      fetchWorkers();\r\n    } else {\r\n      axios\r\n        .get(`/api/workplace/search/${idOfPharmacy}`, {\r\n          params: { searchValue: fsearch },\r\n        })\r\n        .then((resp) => {\r\n          setWorkers(resp.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    setFSearch(\"\");\r\n    fetchWorkers();\r\n  };\r\n\r\n  const formFilter = (event) => {\r\n    event.preventDefault();\r\n    filter();\r\n  };\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [workers]);\r\n\r\n  // UseEffect za filter\r\n  useEffect(() => {\r\n    if (showedWorkers == null) setShowedWorkers(workers);\r\n    else {\r\n      if (filterPharmacyName === \"\" && filterGrade == \"\") return;\r\n\r\n      if (filterPharmacyName != \"\") {\r\n        const result = showedWorkers.filter((worker) => {\r\n          if (pharamcyNameMap[worker.worker.id].includes(filterPharmacyName))\r\n            return true;\r\n          return false;\r\n        });\r\n        if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n      }\r\n\r\n      if (filterGrade != \"\") {\r\n        if (filterGrade === \"LOW\") {\r\n          const result = showedWorkers.filter(\r\n            (worker) => worker.worker.avgGrade < 3\r\n          );\r\n          if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n        } else if (filterGrade === \"MEDIUM\") {\r\n          const result = showedWorkers.filter(\r\n            (worker) => worker.worker.avgGrade == 3\r\n          );\r\n          if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n        } else if (filterGrade === \"HIGH\") {\r\n          const result = showedWorkers.filter(\r\n            (worker) => worker.worker.avgGrade > 3\r\n          );\r\n          if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n        }\r\n      }\r\n    }\r\n  }, [showedWorkers]);\r\n\r\n  let filter = () => {\r\n    setShowedWorkers(null);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"second\">\r\n      <Row>\r\n        <Col>\r\n          <Form onSubmit={formSearch}>\r\n            <Form.Group className=\"my__flex\" style={{ marginTop: \"20px\" }}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"searchValue\"\r\n                value={fsearch}\r\n                onChange={(e) => setFSearch(e.target.value)}\r\n                placeholder=\"Enter name or lastname...\"\r\n              />\r\n\r\n              <Button type=\"submit\" className=\"my__search__buttons\">\r\n                <Search />\r\n              </Button>\r\n              <Button\r\n                className=\"my__search__buttons my__flex\"\r\n                onClick={resetSearch}\r\n              >\r\n                Reset <Reply />\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Form onSubmit={formFilter} className=\"my__div__filter\">\r\n            <Form.Group controlId=\"gradeSelect\">\r\n              <Form.Label>Grade</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterGrade(event.target.value)}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\">Not Selected</option>\r\n                <option value=\"LOW\">Low</option>\r\n                <option value=\"MEDIUM\">Medium</option>\r\n                <option value=\"HIGH\">High</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"pharmacySelect\">\r\n              <Form.Label>Pharmacy name</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterPharmacyName(event.target.value)}\r\n                defaultValue={\"\"}\r\n              >\r\n                <option value=\"\">Not Selected</option>\r\n                {pharmacies?.length != 0 &&\r\n                  pharmacies?.map((item, index) => (\r\n                    <option value={item.name}>{item.name}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"my__search__buttons\">\r\n              <Search />\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Type</th>\r\n                <th>Firstname</th>\r\n                <th>Lastname</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Avg. grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\" \"}\r\n              {showedWorkers?.length != 0 &&\r\n                showedWorkers?.map((item, index) => (\r\n                  <tr\r\n                    onClick={() => {\r\n                      handleClick(item.id, item.worker.id);\r\n                    }}\r\n                    className={`${\r\n                      selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                    } `}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{item?.worker?.roleName}</td>\r\n                    <td>{item?.worker?.firstName}</td>\r\n                    <td>{item?.worker?.lastName}</td>\r\n                    <td>{item?.worker?.email}</td>\r\n                    <td>{item?.worker?.telephone}</td>\r\n                    <td>{item?.worker?.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <div className=\"center\">\r\n            {idOfPharmacy != -1 && (\r\n              <div>\r\n                <Button\r\n                  onClick={() => {\r\n                    setAddModalShow(true);\r\n                    setSelectedRowId(-1);\r\n                  }}\r\n                  variant=\"success\"\r\n                >\r\n                  Add worker\r\n                </Button>\r\n                <Button\r\n                  disabled={selectedRowId == -1}\r\n                  onClick={handleRemove}\r\n                  variant=\"danger\"\r\n                >\r\n                  Remove worker\r\n                </Button>\r\n\r\n                <AddingWorkerModal\r\n                  workersLength={workers?.length}\r\n                  idOfPharmacy={idOfPharmacy}\r\n                  show={addModalShow}\r\n                  onHide={() => {\r\n                    setAddModalShow(false);\r\n                  }}\r\n                  handleAdd={handleAddModalSave}\r\n                />\r\n              </div>\r\n            )}\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              onClick={handleInfo}\r\n              variant=\"info\"\r\n            >\r\n              Show pharmacies\r\n            </Button>\r\n            <DetailsOfWorkerModal\r\n              map={pharamcyNameMap}\r\n              workerId={selectedWorker}\r\n              show={detailsModalShow}\r\n              handleClose={() => {\r\n                setDetailsModalShow(false);\r\n              }}\r\n              onHide={() => {\r\n                setDetailsModalShow(false);\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayWorkers;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Table, Tab, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport moment from \"moment\";\r\n\r\nfunction DisplayInquiries({ idOfPharmacy, refreshInq }) {\r\n  const [inquiries, setInquiries] = useState([]);\r\n  const [showedInquiries, setShowedInquiries] = useState([]);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"Active\");\r\n\r\n  async function fetchInquiries() {\r\n    const request = await axios.get(\r\n      `/api/inquiry/bypharmacyid/${idOfPharmacy}`\r\n    );\r\n    setInquiries(request.data);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      filterInquiries(\"Active\");\r\n    }\r\n  }, [inquiries]);\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchInquiries();\r\n    }\r\n  }, [idOfPharmacy, refreshInq]);\r\n\r\n  let filterInquiries = (filter) => {\r\n    let result = inquiries.filter((item) => {\r\n      if (filter == \"Active\") return item.active;\r\n      else return !item.active;\r\n    });\r\n\r\n    setShowedInquiries(result);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"eight\">\r\n      <h1 className=\"content-header\">Inquiries</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        {\" \"}\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n            Filter : {dropdownLabel}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterInquiries(\"Active\");\r\n                setDropdownLabel(\"Active\");\r\n              }}\r\n            >\r\n              Active\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterInquiries(\"End\");\r\n                setDropdownLabel(\"Ended\");\r\n              }}\r\n            >\r\n              Ended\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Row>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col>\r\n          <Table striped bordered variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Medicine</th>\r\n                <th>Date</th>\r\n                <th>Worker</th>\r\n                <th>Active</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {showedInquiries &&\r\n                showedInquiries.map((item, index) => (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.medicineItems.medicine.name}</td>\r\n                    <td>{moment(item.date).format(\"DD MMM YYYY\")}</td>\r\n                    <td>\r\n                      {item.worker.firstName} {item.worker.lastName}\r\n                    </td>\r\n                    <td>{item.active ? \"True\" : \"False\"}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayInquiries;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Dropdown, InputGroup, Form } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport { Line, Bar, Radar, Doughnut, PolarArea, Pie } from \"react-chartjs-2\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction DisplayReports({ pharmacyDetails }) {\r\n  const { addToast } = useToasts();\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const [selectedChart, setSelectedChart] = useState(\"Bar\");\r\n  const [selectedPeriod, setSelectedPeriod] = useState(\"Monthly\");\r\n  const [profitDisplay, setProfitDisplay] = useState(\"HiddenProfit\");\r\n\r\n  const [appointmentsData, setAppointmentsData] = useState(null);\r\n  const [drugConsumptionData, setDrugConsumptionData] = useState(null);\r\n  const [profitData, setProfitData] = useState(null);\r\n\r\n  const [duration, setDuration] = useState(0);\r\n\r\n  const properties = {\r\n    height: 400,\r\n    width: 600,\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      scales: { yAxes: [{ ticks: { beginAtZero: true } }] },\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Appointments and medicine consumption\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  async function fetchDataOfAppointmentsForReport() {\r\n    const request = await axios.get(\r\n      `/api/appointment/report/${pharmacyDetails?.id}/${selectedPeriod}`\r\n    );\r\n    setAppointmentsData(request.data);\r\n    return request;\r\n  }\r\n\r\n  async function fetchDataForDrugConsumptionForReport() {\r\n    const request = await axios.get(\r\n      `/api/medicine-reservation/report/${pharmacyDetails?.id}/${selectedPeriod}`\r\n    );\r\n    setDrugConsumptionData(request.data);\r\n    return request;\r\n  }\r\n\r\n  async function fetchProfitReport() {\r\n    const request = await axios.get(\r\n      `/api/pharmacy/report/${pharmacyDetails?.id}/${selectedPeriod}/${duration}`\r\n    );\r\n    setProfitData(request.data);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pharmacyDetails != undefined) {\r\n      fetchDataOfAppointmentsForReport();\r\n      fetchDataForDrugConsumptionForReport();\r\n      if (profitDisplay == \"DisplayProfit\" && duration != 0)\r\n        fetchProfitReport();\r\n    }\r\n  }, [pharmacyDetails, selectedPeriod, profitDisplay, duration]);\r\n\r\n  useEffect(() => {\r\n    if (appointmentsData != null && drugConsumptionData != null) {\r\n      if (profitDisplay === \"DisplayProfit\" && profitData != null) drawGraph();\r\n      if (profitDisplay === \"HiddenProfit\") drawGraph();\r\n    }\r\n  }, [appointmentsData, drugConsumptionData, profitData, selectedChart]);\r\n\r\n  let drawGraph = () => {\r\n    let datasets = [];\r\n    let labels = Object.keys(appointmentsData);\r\n\r\n    let colors = genRandomColors(labels.length);\r\n    let dataset1 = {\r\n      label: \"Number of appointments\",\r\n      data: Object.values(appointmentsData),\r\n      backgroundColor: colors,\r\n      borderColor: \"black\",\r\n      borderWidth: 2,\r\n    };\r\n    datasets.push(dataset1);\r\n\r\n    let colors2;\r\n    if (\r\n      selectedChart === \"Bar\" ||\r\n      selectedChart === \"Line\" ||\r\n      selectedChart === \"Radar\"\r\n    )\r\n      colors2 = genRandomColors(Object.keys(drugConsumptionData).length);\r\n    else colors2 = colors;\r\n\r\n    let dataset2 = {\r\n      label: \"Medicine consumption\",\r\n      data: Object.values(drugConsumptionData),\r\n      backgroundColor: colors2,\r\n      borderColor: \"black\",\r\n      borderWidth: 2,\r\n    };\r\n\r\n    datasets.push(dataset2);\r\n\r\n    if (profitDisplay === \"DisplayProfit\") {\r\n      let colors3;\r\n      if (\r\n        selectedChart === \"Bar\" ||\r\n        selectedChart === \"Line\" ||\r\n        selectedChart === \"Radar\"\r\n      )\r\n        colors3 = genRandomColors(Object.keys(profitData).length);\r\n      else colors3 = colors;\r\n\r\n      let dataset3 = {\r\n        label: \"Profit\",\r\n        data: Object.values(profitData),\r\n        backgroundColor: colors3,\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n      };\r\n\r\n      datasets.push(dataset3);\r\n    }\r\n\r\n    setChartData({ labels, datasets });\r\n  };\r\n\r\n  let genRandomColors = (length) => {\r\n    if (\r\n      selectedChart === \"Bar\" ||\r\n      selectedChart === \"Line\" ||\r\n      selectedChart === \"Radar\"\r\n    ) {\r\n      return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n    }\r\n    let array = [];\r\n    let i;\r\n    let randomColor;\r\n    for (i = 0; i < length; i++) {\r\n      randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n      array.push(\"#\" + randomColor);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  let getMax = () => {\r\n    if (selectedPeriod === \"Monthly\") return 12;\r\n    else if (selectedPeriod === \"Yearly\") return 10;\r\n    else return 4;\r\n  };\r\n\r\n  const charTypes = [\"Line\", \"Bar\", \"Radar\", \"Doughnut\", \"PolarArea\", \"Pie\"];\r\n  const periods = [\"Monthly\", \"Quarterly\", \"Yearly\"];\r\n  const profit = [\"HiddenProfit\", \"DisplayProfit\"];\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"sixth\">\r\n      <h1 className=\"content-header\">Reports</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col className=\"center\">\r\n          <h4>Average grade: {pharmacyDetails?.avgGrade}</h4>\r\n        </Col>\r\n        <Col className=\"center\">\r\n          <h4>\r\n            Average grades of workers can be seen on tab 'Pharmacists and\r\n            dermatologists'\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              {selectedChart}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {charTypes.map((item) => (\r\n                <Dropdown.Item\r\n                  active={selectedChart == item}\r\n                  onClick={() => {\r\n                    setSelectedChart(item);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              {selectedPeriod}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {periods.map((item) => (\r\n                <Dropdown.Item\r\n                  active={selectedPeriod == item}\r\n                  onClick={() => {\r\n                    setSelectedPeriod(item);\r\n                    setDuration(0);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              {profitDisplay}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {profit.map((item) => (\r\n                <Dropdown.Item\r\n                  active={profitDisplay == item}\r\n                  onClick={() => {\r\n                    if (duration == 0 && profitDisplay == \"HiddenProfit\")\r\n                      addToast(\r\n                        \"Duration cannot be 0! Change it if u want to see profit!\",\r\n                        {\r\n                          appearance: \"warning\",\r\n                        }\r\n                      );\r\n                    else setProfitDisplay(item);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"basic-addon3\">\r\n                Duration in past\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              id=\"basic-url\"\r\n              type=\"number\"\r\n              value={duration}\r\n              onChange={(event) =>\r\n                setDuration(Number.parseInt(event.target.value))\r\n              }\r\n              max={getMax()}\r\n              min=\"0\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col className=\"center\">\r\n          {selectedChart == \"Line\" && <Line data={chartData} {...properties} />}\r\n          {selectedChart == \"Bar\" && <Bar data={chartData} {...properties} />}\r\n          {selectedChart == \"Radar\" && (\r\n            <Radar data={chartData} {...properties} />\r\n          )}\r\n          {selectedChart == \"Doughnut\" && (\r\n            <Doughnut data={chartData} {...properties} />\r\n          )}\r\n          {selectedChart == \"PolarArea\" && (\r\n            <PolarArea data={chartData} {...properties} />\r\n          )}\r\n          {selectedChart == \"Pie\" && <Pie data={chartData} {...properties} />}\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayReports;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, Container, Modal, Form } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AddAdvertismentModal(props) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n  const [type, setType] = useState(\"0\");\r\n  const [medicineItems, setMedicineItems] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(0);\r\n\r\n  async function fetchPriceList() {\r\n    const request = await axios\r\n      .get(`/api/pricelist/${props.priceListId}`)\r\n      .then((res) => {\r\n        setMedicineItems(res.data.medicineItems);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.priceListId != undefined) {\r\n      fetchPriceList();\r\n    }\r\n  }, [props.priceListId]);\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    d.setHours(0, 0, 0);\r\n    let now = new Date();\r\n    if (d.getTime() > now.getTime()) setEndDate(d);\r\n    else {\r\n      setEndDate(null);\r\n      addToast(\"End date should be in future!\", {\r\n        appearance: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setEndDate(null);\r\n        setDiscount(0);\r\n        setSelectedRowId(0);\r\n        setText(\"\");\r\n        setType(\"0\");\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add advertisment\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"typeSelect\">\r\n                <Form.Label>Types</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(event) => setType(event.target.value)}\r\n                  defaultValue=\"0\"\r\n                >\r\n                  <option value=\"0\">Not Selected</option>\r\n                  <option value=\"1\">Promotion</option>\r\n                  <option value=\"2\">Sale</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"medicineSelect\">\r\n                <Form.Label>Medicine</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(event) => setSelectedRowId(event.target.value)}\r\n                  defaultValue=\"0\"\r\n                >\r\n                  <option value=\"0\">Not Selected</option>\r\n                  {medicineItems?.length != 0 &&\r\n                    medicineItems?.map((item, index) => (\r\n                      <option value={item?.id}>{item?.medicine?.name}</option>\r\n                    ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"datePicker\" di>\r\n                <Form.Label>End date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(event) => changeDate(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"discountPicker\" di>\r\n                <Form.Label>Discount</Form.Label>\r\n                <Form.Control\r\n                  disabled={type != \"2\"}\r\n                  type=\"number\"\r\n                  onChange={(event) => setDiscount(event.target.value)}\r\n                  max=\"100\"\r\n                  min=\"0\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"contentPicker\" di>\r\n                <Form.Label>Content</Form.Label>\r\n                <Form.Control\r\n                  disabled={type != \"1\"}\r\n                  type=\"text\"\r\n                  onChange={(event) => setText(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={type == \"0\" || selectedRowId == \"0\" || endDate == null}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd({\r\n              type,\r\n              selectedRowId,\r\n              endDate: endDate.getTime(),\r\n              discount,\r\n              text,\r\n            });\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdvertismentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Button, Table } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport AddAdvertismentModal from \"./AddAdvertismentModal\";\r\n\r\nimport moment from \"moment\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AdvertismentTab({ pharmacyDetails }) {\r\n  const { addToast } = useToasts();\r\n  const [list, setList] = useState([]);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  async function fetchAdvertisment() {\r\n    const request = await axios\r\n      .get(`/api/sales/${pharmacyDetails.id}`)\r\n      .then((res) => {\r\n        setList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pharmacyDetails?.id != undefined) {\r\n      fetchAdvertisment();\r\n    }\r\n  }, [pharmacyDetails, refresh]);\r\n\r\n  async function addAdverb(data) {\r\n    const request = await axios\r\n      .post(`/api/sales/${pharmacyDetails.id}`, data)\r\n      .then((res) => {\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n        setRefresh(!refresh);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  let handleAddModalSave = (data) => {\r\n    setAddModalShow(false);\r\n    addAdverb(data);\r\n  };\r\n\r\n  let handleAddModalClose = () => {\r\n    setAddModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"ninth\">\r\n      <h1 className=\"content-header\">Advertisment</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Medicine</th>\r\n                <th>Type</th>\r\n                <th>Discount(percent)</th>\r\n                <th>Start date</th>\r\n                <th>End date</th>\r\n                <th>Content</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {list?.length != 0 &&\r\n                list?.map((item, index) => (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.medicineItem.medicine.name}</td>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.discountPercent}</td>\r\n                    <td>{moment(item.startDate).format(\"DD MMM YYYY\")}</td>\r\n                    <td>{moment(item.endDate).format(\"DD MMM YYYY\")}</td>\r\n                    <td>{item.advertisementText}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <AddAdvertismentModal\r\n          show={addModalShow}\r\n          onHide={handleAddModalClose}\r\n          handleAdd={handleAddModalSave}\r\n          priceListId={pharmacyDetails?.priceListId}\r\n        />\r\n        <Col className=\"center\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              setAddModalShow(true);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default AdvertismentTab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form, Button, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PasswordFormGroup from \"../formGroups/PasswordFormGroup\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport ErrorModal from \"../modals/ErrorModal\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\n\r\n// Use when user is logging in for the first time\r\nconst SetPasswordModal = (props) => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {});\r\n\r\n  const [form, setForm] = useState({});\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const f = event.currentTarget;\r\n\r\n    if (f.checkValidity() === true) {\r\n      setErrorMessage(\"\");\r\n      setValidated(true);\r\n      handleSet();\r\n    }\r\n  };\r\n\r\n  const handleSet = () => {\r\n    api\r\n      .put(\"/api/users/set-password/\" + getIdFromToken(), form)\r\n      .then(props.onPasswordSet())\r\n      .catch(setErrorMessage(\"Oops! Something went wrong, try again!\"));\r\n  };\r\n\r\n  return (\r\n    <Modal {...props}>\r\n      <Modal.Header\r\n        className=\"justify-content-center\"\r\n        backdrop=\"static\"\r\n        onHide={handleClose}\r\n        closeButton\r\n      >\r\n        <p>Welcome! Please set new password!</p>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"justify-content-center\">\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <PasswordFormGroup\r\n            onChange={(event) => setField(\"newPassword\", event.target.value)}\r\n          ></PasswordFormGroup>\r\n          <Button\r\n            className=\"float-center\"\r\n            variant=\"outline-secondary\"\r\n            type=\"submit\"\r\n          >\r\n            Set Password\r\n          </Button>\r\n        </Form>\r\n        {errorMessage.length > 0 && (\r\n          <Row className=\"justify-content-center m-3\">\r\n            <p className=\"text-danger\">{errorMessage}</p>\r\n          </Row>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nSetPasswordModal.defaultProps = {\r\n  isPasswordSet: false,\r\n};\r\n\r\nexport default SetPasswordModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../../styling/pharmacyHomePage.css\";\r\nimport \"../../styling/pharmacy.css\";\r\nimport \"../../styling/home_page.css\";\r\n\r\nimport EditBasicInfo from \"./EditBasicInfo\";\r\nimport DisplayPurchaseOrders from \"./DisplayPurchaseOrders\";\r\nimport AddAppointment from \"./AddAppointment\";\r\nimport DisplayMedicine from \"./DisplayMedicine\";\r\nimport DisplayHolidayRequests from \"./DisplayHolidayRequests\";\r\nimport DisplayWorkers from \"./DisplayWorkers\";\r\nimport DisplayInquiries from \"./DisplayInquiries\";\r\n\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport DisplayReports from \"./DisplayReports\";\r\nimport AdvertismentTab from \"./AdvertismentTab\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport SetPasswordModal from \"../utilComponents/modals/SetPasswordModal\";\r\n\r\nfunction PharmacyAdminHomePage() {\r\n  const { addToast } = useToasts();\r\n  const [pharmacyDetails, setPharmacyDetails] = useState({});\r\n  const [refreshPriceList, setRefreshPriceList] = useState(false);\r\n\r\n  const [pharmacyId, setPharmacyId] = useState(null);\r\n\r\n  const [refreshInq, setRefreshInq] = useState(false);\r\n\r\n  const [loadingPWChanged, setLoadingPWChanged] = useState(true);\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  async function fetchPharmacyid() {\r\n    const request = await axios\r\n      .get(`/api/pharmacy/getpharmacyidbyadmin/${getIdFromToken()}`)\r\n      .then((res) => {\r\n        setPharmacyId(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(\r\n          err.response.data.message == undefined\r\n            ? err.response.data\r\n            : err.response.data.message,\r\n          {\r\n            appearance: \"error\",\r\n          }\r\n        );\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function fetchPharmacy() {\r\n    const request = await axios\r\n      .get(`/api/pharmacy/${pharmacyId}`)\r\n      .then((res) => {\r\n        setPharmacyDetails(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let changedPharmacy = () => {\r\n    fetchPharmacy();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pharmacyId != null) fetchPharmacy();\r\n  }, [pharmacyId]);\r\n\r\n  useEffect(() => {\r\n    fetchPharmacyid();\r\n\r\n    axios.get(\"/api/users/\" + getIdFromToken()).then((res) => {\r\n      if (!res.data.passwordChanged) {\r\n        setShowModalPWChange(true);\r\n        setLoadingPWChanged(false);\r\n      } else {\r\n        setShowModalPWChange(false);\r\n        setLoadingPWChanged(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Basic informations\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                  Pharmacists and dermatologists\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                  Medicine\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"fourth\">\r\n                  Add appointment\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"fifth\">\r\n                  Holiday requests\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"sixth\">\r\n                  Reports\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"seventh\">\r\n                  Purchase orders\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"eight\">\r\n                  Inquiries\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"ninth\">\r\n                  Advertisment\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <EditBasicInfo\r\n                pharmacyDetails={pharmacyDetails}\r\n                changedPharmacy={changedPharmacy}\r\n              />\r\n              <DisplayWorkers idOfPharmacy={pharmacyDetails?.id} />\r\n              <DisplayHolidayRequests idOfPharmacy={pharmacyDetails?.id} />\r\n              <AddAppointment idOfPharmacy={pharmacyDetails?.id} />\r\n              <DisplayMedicine\r\n                setRefreshPriceList={setRefreshPriceList}\r\n                refreshPriceList={refreshPriceList}\r\n                idOfPharmacy={pharmacyDetails?.id}\r\n                priceListId={pharmacyDetails?.priceListId}\r\n              />\r\n              <DisplayPurchaseOrders\r\n                refreshInq={refreshInq}\r\n                setRefreshInq={setRefreshInq}\r\n                refresh={refreshPriceList}\r\n                idOfPharmacy={pharmacyDetails?.id}\r\n                priceListId={pharmacyDetails?.priceListId}\r\n              />\r\n              <DisplayInquiries\r\n                refreshInq={refreshInq}\r\n                idOfPharmacy={pharmacyDetails?.id}\r\n              />\r\n              <DisplayReports pharmacyDetails={pharmacyDetails} />\r\n              <AdvertismentTab pharmacyDetails={pharmacyDetails} />\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n      <SetPasswordModal\r\n        show={showModalPWChange}\r\n        onPasswordSet={() => {\r\n          setShowModalPWChange(false);\r\n        }}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacyAdminHomePage;\r\n","import React from \"react\";\r\nimport { Button, Modal, Container } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentStartModal(props) {\r\n  // prosledis appointment\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n\r\n  const onStart = () => {\r\n    if (\r\n      !(\r\n        moment(Date.now()) >\r\n        moment(props.appointment.start).subtract(15, \"minutes\")\r\n      )\r\n    ) {\r\n      // ne moze da se krene vise od 15 min ranije\r\n      addToast(\"You can't start this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", props.appointment.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/start_appointment\", bodyFormData)\r\n      .then(() => {\r\n        history.push({\r\n          pathname: \"/worker/appointment_report\",\r\n          state: {\r\n            // location state\r\n            appointmentID: props.appointment.id,\r\n          },\r\n        });\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't start this appointment!\", { appearance: \"error\" })\r\n      );\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (\r\n      !(moment(Date.now()) > moment(props.appointment.start).add(5, \"minutes\"))\r\n    ) {\r\n      // ne moze da se cancelluje dok ne prodje bar 5 minuta od pocetka sastanka TODO check na backu\r\n      addToast(\"You can't cancel this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", props.appointment.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/cancel_appointment\", bodyFormData)\r\n      .then(() => {\r\n        addToast(\"Appointment cancelled! Patient didn't show up!\", {\r\n          appearance: \"info\",\r\n        });\r\n        props.onCancelMethod();\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't cancel this appointment yet!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Initialize appointment for {props.appointment.patient}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Button onClick={onStart}>Start appointment</Button>\r\n          <Button onClick={onCancel}>Patient didn't show up</Button>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppointmentStartModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport AppointmentStartModal from \"../appointment_start_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../../app/api\";\r\nimport { getUserTypeFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport SetPasswordModal from \"../../utilComponents/modals/SetPasswordModal\";\r\nimport \"../../../styling/worker.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PharmHomePage() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [startAppt, setStartAppt] = useState({});\r\n\r\n  const [loadingPWChanged, setLoadingPWChanged] = useState(true);\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  const [loadingAppts, setLoadingAppts] = useState(true);\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      let id = getIdFromToken();\r\n      if (!id) {\r\n        addToast(\"Invalid user!\", { appearance: \"error\" });\r\n        setAppointments([]);\r\n        return;\r\n      }\r\n      await api\r\n        .get(\"/api/appointment/workers_upcoming?id=\" + id + \"&page=0&size=10\")\r\n        .then((resp) => {\r\n          setAppointments(resp.data);\r\n          setLoadingAppts(false);\r\n        })\r\n        .catch(() => {\r\n          setAppointments([]);\r\n          setLoadingAppts(false);\r\n        });\r\n    }\r\n    let id = getIdFromToken();\r\n    api.get(\"/api/users/\" + id).then((res) => {\r\n      if (!res.data.passwordChanged) {\r\n        setShowModalPWChange(true);\r\n        setLoadingPWChanged(false);\r\n      } else {\r\n        setShowModalPWChange(false);\r\n        setLoadingPWChanged(false);\r\n      }\r\n    });\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const initiateAppt = (appointment) => {\r\n    if (\r\n      !(moment(Date.now()) > moment(appointment.start).subtract(15, \"minutes\"))\r\n    ) {\r\n      // nikako ga ne mozemo zapoceti vise od 15 minuta ranije\r\n      addToast(\r\n        \"You can't initiate appointment until at least 15 minutes before!\",\r\n        { appearance: \"error\" }\r\n      );\r\n      return;\r\n    }\r\n    setStartAppt(appointment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCancelMethod = () => {\r\n    setShowModal(false);\r\n    let id_farm = getIdFromToken();\r\n    if (!id_farm) {\r\n      addToast(\"Invalid user!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/appointment/workers_upcoming\", {\r\n        params: { id: id_farm, page: 0, size: 10 },\r\n      })\r\n      .then((resp) => setAppointments(resp.data))\r\n      .catch(() => setAppointments([])); //resetujemo prikaz\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 pb-3 pl-3 pr-3 align-items-center\">\r\n        <h2 className=\"my_content_header\">Upcomming appointments</h2>\r\n      </Row>\r\n\r\n      {appointments.length === 0 && !loadingAppts && (\r\n        <Row className=\"justify-content-center m-3 align-items-center\">\r\n          <h3>There are no upcomming appointments!</h3>\r\n        </Row>\r\n      )}\r\n\r\n      {loadingPWChanged ? (\r\n        <Row className=\"justify-content-center m-5 align-items-center\">\r\n          <h3>Checking user data...</h3>\r\n        </Row>\r\n      ) : (\r\n        <div>\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center p-4 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col md={7}>\r\n                  <Card className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        Appointment date:{\" \"}\r\n                        {moment(value.start).format(\"DD MMM YYYY\")}\r\n                        <span style={{ float: \"right\" }}>\r\n                          Time: {moment(value.start).format(\"hh:mm a\")} -{\" \"}\r\n                          {moment(value.end).format(\"hh:mm a\")}\r\n                        </span>\r\n                      </Card.Title>\r\n                      <hr\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"black\",\r\n                          height: 1,\r\n                        }}\r\n                      />\r\n                      <Card.Text className=\"mb-2\">\r\n                        Patient: {value.patient}\r\n                      </Card.Text>\r\n                      <Card.Text className=\"mb-2\">\r\n                        Price: {value.price}\r\n                      </Card.Text>\r\n\r\n                      <Card.Text style={{ textAlign: \"center\" }}>\r\n                        <Card.Link\r\n                          as={Link}\r\n                          to=\"#\"\r\n                          onClick={() => initiateAppt(value)}\r\n                        >\r\n                          Start appointment\r\n                        </Card.Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <AppointmentStartModal\r\n        show={showModal}\r\n        onCancelMethod={onCancelMethod}\r\n        appointment={startAppt}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentStartModal>\r\n\r\n      <SetPasswordModal\r\n        show={showModalPWChange}\r\n        onPasswordSet={() => {\r\n          setShowModalPWChange(false);\r\n        }}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmHomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport AppointmentStartModal from \"../appointment_start_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../../app/api\";\r\nimport { getUserTypeFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport SetPasswordModal from \"../../utilComponents/modals/SetPasswordModal\";\r\nimport \"../../../styling/worker.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DermHomePage() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [startAppt, setStartAppt] = useState({});\r\n\r\n  const [loadingPWChanged, setLoadingPWChanged] = useState(true);\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  const [loadingAppts, setLoadingAppts] = useState(true);\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      let id = getIdFromToken();\r\n      if (!id) {\r\n        addToast(\"Invalid user!\", { appearance: \"error\" });\r\n        setAppointments([]);\r\n        return;\r\n      }\r\n\r\n      await api\r\n        .get(\"/api/appointment/workers_upcoming?id=\" + id + \"&page=0&size=10\")\r\n        .then((resp) => {\r\n          setAppointments(resp.data);\r\n          setLoadingAppts(false);\r\n        })\r\n        .catch(() => {\r\n          setAppointments([]);\r\n          setLoadingAppts(false);\r\n        });\r\n    }\r\n    let id = getIdFromToken();\r\n    api.get(\"/api/users/\" + id).then((res) => {\r\n      if (!res.data.passwordChanged) {\r\n        setShowModalPWChange(true);\r\n        setLoadingPWChanged(false);\r\n      } else {\r\n        setShowModalPWChange(false);\r\n        setLoadingPWChanged(false);\r\n      }\r\n    });\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const initiateAppt = (appointment) => {\r\n    if (\r\n      !(moment(Date.now()) > moment(appointment.start).subtract(15, \"minutes\"))\r\n    ) {\r\n      // nikako ga ne mozemo zapoceti vise od 15 minuta ranije\r\n      addToast(\r\n        \"You can't initiate appointment until at least 15 minutes before!\",\r\n        { appearance: \"error\" }\r\n      );\r\n      return;\r\n    }\r\n    setStartAppt(appointment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCancelMethod = () => {\r\n    setShowModal(false);\r\n    let id_derm = getIdFromToken();\r\n    if (!id_derm) {\r\n      addToast(\"Invalid user!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/appointment/workers_upcoming\", {\r\n        params: { id: id_derm, page: 0, size: 10 },\r\n      })\r\n      .then((resp) => setAppointments(resp.data))\r\n      .catch(() => setAppointments([])); //resetujemo prikaz\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 pb-3 pl-3 pr-3 align-items-center\">\r\n        <h2 className=\"my_content_header\">Upcomming appointments</h2>\r\n      </Row>\r\n\r\n      {appointments.length === 0 && !loadingAppts && (\r\n        <Row className=\"justify-content-center m-3 align-items-center\">\r\n          <h3>There are no upcomming appointments!</h3>\r\n        </Row>\r\n      )}\r\n\r\n      {loadingPWChanged ? (\r\n        <Row className=\"justify-content-center m-5 align-items-center\">\r\n          <h3>Checking user data...</h3>\r\n        </Row>\r\n      ) : (\r\n        <div>\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center p-4 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col md={7}>\r\n                  <Card className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        Appointment date:{\" \"}\r\n                        {moment(value.start).format(\"DD MMM YYYY\")}\r\n                        <span style={{ float: \"right\" }}>\r\n                          Time: {moment(value.start).format(\"hh:mm a\")} -{\" \"}\r\n                          {moment(value.end).format(\"hh:mm a\")}\r\n                        </span>\r\n                      </Card.Title>\r\n                      <hr\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"black\",\r\n                          height: 1,\r\n                        }}\r\n                      />\r\n                      <Card.Text className=\"mb-2\">\r\n                        Pharmacy: {value.pharmacy}\r\n                      </Card.Text>\r\n                      <Card.Text className=\"mb-2\">\r\n                        Patient: {value.patient}\r\n                      </Card.Text>\r\n                      <Card.Text className=\"mb-2\">\r\n                        Price: {value.price}\r\n                      </Card.Text>\r\n\r\n                      <Card.Text style={{ textAlign: \"center\" }}>\r\n                        <Card.Link\r\n                          as={Link}\r\n                          to=\"#\"\r\n                          onClick={() => initiateAppt(value)}\r\n                        >\r\n                          Start appointment\r\n                        </Card.Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      <AppointmentStartModal\r\n        show={showModal}\r\n        onCancelMethod={onCancelMethod}\r\n        appointment={startAppt}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentStartModal>\r\n\r\n      <SetPasswordModal\r\n        show={showModalPWChange}\r\n        onPasswordSet={() => {\r\n          setShowModalPWChange(false);\r\n        }}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DermHomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n  Nav,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { StarFill, Search, Reply } from \"react-bootstrap-icons\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\n\r\nfunction PharmaciesView() {\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [backup, setBackup] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedPharmacies, setShowedPharmacies] = useState([]);\r\n  const [fsearch, setFSearch] = useState(\"\");\r\n  const [filterGrade, setFilterGrade] = useState(\"\");\r\n  const [filterDistance, setFilterDistance] = useState(\"\");\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [ascDesc, setAscDesc] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const [triggered, setTriggered] = useState(\"none\");\r\n  let div = document.getElementById(\"my__transition__div\");\r\n  let blocker = document.getElementById(\"my__blocker\");\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacies() {\r\n      const request = await axios.get(\"/api/pharmacy/\");\r\n      setPharmacies(request.data);\r\n      setBackup(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  }, []);\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (fsearch.length === 0) {\r\n      axios.get(\"/api/pharmacy/\").then((resp) => {\r\n        setPharmacies(resp.data);\r\n        setBackup(resp.data);\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"/api/pharmacy/search\", {\r\n          params: { searchValue: fsearch },\r\n        })\r\n        .then((resp) => {\r\n          setPharmacies(resp.data);\r\n          setBackup(resp.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const formFilter = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (filterGrade === \"\" && filterDistance === \"\") {\r\n      setPharmacies(backup);\r\n      return;\r\n    }\r\n\r\n    var filtered = [];\r\n\r\n    if (filterGrade !== \"\") {\r\n      for (let i = 0; i < backup.length; i++) {\r\n        if (filterGrade === \"HIGH\" && backup[i].avgGrade > 3) {\r\n          filtered.push(backup[i]);\r\n        } else if (filterGrade === \"MEDIUM\" && backup[i].avgGrade === 3) {\r\n          filtered.push(backup[i]);\r\n        } else if (filterGrade === \"LOW\" && backup[i].avgGrade < 3) {\r\n          filtered.push(backup[i]);\r\n        }\r\n      }\r\n\r\n      setPharmacies(filtered);\r\n      if (filtered.length === 0) return;\r\n    }\r\n\r\n    if (filterDistance !== \"\") {\r\n      if (navigator.geolocation) {\r\n        // Ako odredjeni browser podrzava geolocation\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          let filteringList = filtered.length !== 0 ? [...filtered] : backup;\r\n          filtered = [];\r\n          for (let i = 0; i < filteringList.length; i++) {\r\n            if (\r\n              filterDistance === \"5LESS\" &&\r\n              calculateDistance(\r\n                filteringList[i].address,\r\n                position.coords.longitude,\r\n                position.coords.latitude\r\n              ) <= 5\r\n            ) {\r\n              filtered.push(filteringList[i]);\r\n            } else if (\r\n              filterDistance === \"10LESS\" &&\r\n              calculateDistance(\r\n                filteringList[i].address,\r\n                position.coords.longitude,\r\n                position.coords.latitude\r\n              ) <= 10\r\n            ) {\r\n              filtered.push(filteringList[i]);\r\n            } else if (\r\n              filterDistance === \"10HIGHER\" &&\r\n              calculateDistance(\r\n                filteringList[i].address,\r\n                position.coords.longitude,\r\n                position.coords.latitude\r\n              ) > 10\r\n            ) {\r\n              filtered.push(filteringList[i]);\r\n            }\r\n          }\r\n\r\n          setPharmacies(filtered);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateDistance = (address, lon2, lat2) => {\r\n    let lat1 = address.location.latitude;\r\n    let lon1 = address.location.longitude;\r\n\r\n    if (lat1 == lat2 && lon1 == lon2) {\r\n      return 0;\r\n    } else {\r\n      var radlat1 = (Math.PI * lat1) / 180;\r\n      var radlat2 = (Math.PI * lat2) / 180;\r\n      var theta = lon1 - lon2;\r\n      var radtheta = (Math.PI * theta) / 180;\r\n      var dist =\r\n        Math.sin(radlat1) * Math.sin(radlat2) +\r\n        Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n      if (dist > 1) {\r\n        dist = 1;\r\n      }\r\n      dist = Math.acos(dist);\r\n      dist = (dist * 180) / Math.PI;\r\n      dist = dist * 60 * 1.1515 * 1.609344;\r\n      console.log(dist);\r\n      return dist;\r\n    }\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    axios\r\n      .get(\"/api/pharmacy/\")\r\n      .then((resp) => {\r\n        setPharmacies(resp.data);\r\n        setBackup(resp.data);\r\n      })\r\n      .catch(() => setPharmacies([]));\r\n    setFSearch(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(pharmacies?.length / 12) - 1;\r\n    if (pharmacies?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [pharmacies, reload]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = pharmacies.length < first + 12 ? pharmacies?.length : first + 12;\r\n    setShowedPharmacies(pharmacies?.slice(first, max));\r\n  }, [pharmacies, pagNumber, reload]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  const doSorting = (type, value) => {\r\n    if (type === \"sorter\") setSorter(value);\r\n    else setAscDesc(value);\r\n\r\n    if (value === \"none\") return;\r\n    if (type === \"sorter\" && ascDesc === \"none\") return;\r\n    if (type === \"ascDesc\" && sorter === \"none\") return;\r\n\r\n    pharmacies.sort(function (ph1, ph2) {\r\n      if (\r\n        (type === \"sorter\" && value === \"grade\") ||\r\n        (type === \"ascDesc\" && sorter === \"grade\")\r\n      )\r\n        return ph1?.avgGrade - ph2?.avgGrade;\r\n      if (\r\n        (type === \"sorter\" && value === \"pharmacy name\") ||\r\n        (type === \"ascDesc\" && sorter === \"pharmacy name\")\r\n      )\r\n        return ph1?.name.localeCompare(ph2?.name);\r\n      if (\r\n        (type === \"sorter\" && value === \"city name\") ||\r\n        (type === \"ascDesc\" && sorter === \"city name\")\r\n      )\r\n        return ph1?.address?.city.localeCompare(ph2?.address?.city);\r\n    });\r\n    if (\r\n      (type === \"ascDesc\" && value === \"descending\") ||\r\n      (type === \"sorter\" && ascDesc === \"descending\")\r\n    )\r\n      pharmacies.reverse();\r\n    setReload(!reload);\r\n  };\r\n\r\n  function hideBlocker() {\r\n    blocker.classList.remove(\"blocker\");\r\n    div.classList.remove(\"my__transition__div__move\");\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"first\">\r\n      <div id=\"my__blocker\" onClick={() => hideBlocker()}></div>\r\n      <div id=\"my__transition__div\" className=\"my__flex\">\r\n        <Form\r\n          onSubmit={formSearch}\r\n          style={{\r\n            display: triggered === \"search\" ? \"block\" : \"none\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <Form.Group className=\"my__flex\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"searchValue\"\r\n              value={fsearch}\r\n              onChange={(e) => setFSearch(e.target.value)}\r\n              placeholder=\"Enter name or place...\"\r\n            />\r\n\r\n            <Button type=\"submit\" className=\"my__search__buttons\">\r\n              <Search />\r\n            </Button>\r\n            <Button\r\n              className=\"my__search__buttons my__flex\"\r\n              onClick={resetSearch}\r\n            >\r\n              Reset <Reply />\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n        <div\r\n          className=\"my__flex\"\r\n          style={{ display: triggered === \"sorter\" ? \"flex\" : \"none\" }}\r\n        >\r\n          <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className=\"my__search__buttons\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              {sorter}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"none\");\r\n                }}\r\n              >\r\n                none\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"pharmacy name\");\r\n                }}\r\n              >\r\n                pharmacy name\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"city name\");\r\n                }}\r\n              >\r\n                city name\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"grade\");\r\n                }}\r\n              >\r\n                grade\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className=\"my__search__buttons\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              {ascDesc}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"ascDesc\", \"none\");\r\n                }}\r\n              >\r\n                none\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"ascDesc\", \"ascending\");\r\n                }}\r\n              >\r\n                ascending\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"ascDesc\", \"descending\");\r\n                }}\r\n              >\r\n                descending\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n        <div style={{ display: triggered === \"filter\" ? \"block\" : \"none\" }}>\r\n          <Form onSubmit={formFilter} className=\"my__div__filter\">\r\n            <Form.Group controlId=\"gradeSelect\">\r\n              <Form.Label>Grade</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterGrade(event.target.value)}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\">Not Selected</option>\r\n                <option value=\"LOW\">Low</option>\r\n                <option value=\"MEDIUM\">Medium</option>\r\n                <option value=\"HIGH\">High</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"distanceSelect\">\r\n              <Form.Label>Distance</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterDistance(event.target.value)}\r\n                defaultValue={\"\"}\r\n              >\r\n                <option value={\"\"}>Not Selected</option>\r\n                <option value=\"5LESS\">5km(Less)</option>\r\n                <option value=\"10LESS\">10km(Less)</option>\r\n                <option value=\"10HIGHER\">10km(Higher)</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"my__search__buttons\">\r\n              <Search />\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"my__flex\" style={{ paddingTop: \"30px\" }}>\r\n        <Button\r\n          className=\"my__search__buttons\"\r\n          onClick={() => {\r\n            div.classList.add(\"my__transition__div__move\");\r\n            blocker.classList.add(\"blocker\");\r\n            setTriggered(\"search\");\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          className=\"my__search__buttons\"\r\n          onClick={() => {\r\n            div.classList.add(\"my__transition__div__move\");\r\n            blocker.classList.add(\"blocker\");\r\n            setTriggered(\"sorter\");\r\n          }}\r\n        >\r\n          Sorter\r\n        </Button>\r\n        <Button\r\n          className=\"my__search__buttons\"\r\n          onClick={() => {\r\n            div.classList.add(\"my__transition__div__move\");\r\n            blocker.classList.add(\"blocker\");\r\n            setTriggered(\"filter\");\r\n          }}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n      <Container fluid>\r\n        <Row>\r\n          {showedPharmacies.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>No result!</h3>\r\n            </Row>\r\n          )}\r\n          {showedPharmacies &&\r\n            showedPharmacies.map((pharmacy, index) => {\r\n              return (\r\n                <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                  <Nav.Link\r\n                    as={Link}\r\n                    className=\"my__nav__link__card\"\r\n                    to={`/pharmacy/${pharmacy.id}`}\r\n                  >\r\n                    <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                      <Card.Body>\r\n                        <Card.Title>{pharmacy.name}</Card.Title>\r\n                        <Card.Text>{pharmacy.description}</Card.Text>\r\n                      </Card.Body>\r\n                      <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem className=\"my__flex\">\r\n                          {[...Array(Math.ceil(pharmacy.avgGrade))].map(() => (\r\n                            <StarFill className=\"my__star\" />\r\n                          ))}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem className=\"my__flex\">\r\n                          {pharmacy.address.street +\r\n                            \", \" +\r\n                            pharmacy.address.city}\r\n                        </ListGroupItem>\r\n                      </ListGroup>\r\n                    </Card>\r\n                  </Nav.Link>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default PharmaciesView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Form, Row, Button } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport api from \"../../app/api\";\r\n\r\nconst MedicineSearchAndFilter = (props) => {\r\n  const [medicineType, setMedicineType] = useState(\"\");\r\n  const [medicineForm, setMedicineForm] = useState(\"\");\r\n  const [medTypes, setMedTypes] = useState([]);\r\n  const [medForms, setMedForms] = useState([]);\r\n  const [medName, setMedName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    api.get(`/api/medicine-types/`).then((res) => {\r\n      setMedTypes(res.data);\r\n    });\r\n    api.get(`/api/medicine-forms/`).then((res) => {\r\n      setMedForms(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    props.updateParams(generateSearchParams());\r\n  };\r\n\r\n  const generateSearchParams = () => {\r\n    let searchParam = `name:${medName},medicineType:${medicineType},medicineForm:${medicineForm}`;\r\n    return searchParam;\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Container style={{ marginBottom: \"20px\" }}>\r\n        <Row>\r\n          <Col md={5}>\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setMedName(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Form.Group>\r\n              <Form.Label>Type:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                onChange={(event) => {\r\n                  setMedicineType(event.target.value);\r\n                }}\r\n              >\r\n                <option value=\"\">Show all</option>\r\n                {medTypes.map((mt) => {\r\n                  return <option value={mt.name}>{mt.name}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Form.Group>\r\n              <Form.Label>Form:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                onChange={(event) => {\r\n                  setMedicineForm(event.target.value);\r\n                }}\r\n              >\r\n                <option value=\"\">Show all</option>\r\n                {medForms.map((mf) => {\r\n                  return <option value={mf.name}>{mf.name}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={1}>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MedicineSearchAndFilter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Nav,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport MedicineSearchAndFilter from \"./MedicineSearchAndFilter\";\r\n\r\nfunction MedicinesView() {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedMedicines, setShowedMedicines] = useState([]);\r\n  const [searchParams, setSearchParams] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicines() {\r\n      const request = await axios.get(\"/api/medicine/\");\r\n      setMedicines(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchMedicines();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicines() {\r\n      const request = await axios.get(`/api/medicine?search=${searchParams}`);\r\n      setMedicines(request.data);\r\n\r\n      return request;\r\n    }\r\n    if (!!searchParams) {\r\n      fetchMedicines();\r\n    }\r\n  }, [searchParams]);\r\n\r\n  function updateSearchParams(newParams) {\r\n    setSearchParams(newParams);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(medicines?.length / 12) - 1;\r\n    if (medicines?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [medicines]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = medicines.length < first + 12 ? medicines?.length : first + 12;\r\n    setShowedMedicines(medicines?.slice(first, max));\r\n  }, [medicines, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"third\">\r\n      <Container fluid>\r\n        <MedicineSearchAndFilter\r\n          updateParams={(newParams) => {\r\n            updateSearchParams(newParams);\r\n          }}\r\n        ></MedicineSearchAndFilter>\r\n        <Row>\r\n          {showedMedicines &&\r\n            showedMedicines.map((medicine, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Nav.Link\r\n                  as={Link}\r\n                  className=\"my__nav__link__card\"\r\n                  to={`/medicine/${medicine.id}/pharmacy/-1/price/-1`}\r\n                >\r\n                  <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                    <Card.Body>\r\n                      <Card.Title>{medicine.name}</Card.Title>\r\n                      <Card.Text>#{medicine.code}</Card.Text>\r\n                      <Card.Text>{medicine.content}</Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {[...Array(Math.ceil(medicine.avgGrade))].map(() => (\r\n                          <StarFill className=\"my__star\" />\r\n                        ))}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Nav.Link>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default MedicinesView;\r\n","import { React, useEffect } from \"react\";\r\nimport \"../../styling/home_page.css\";\r\nimport { Nav, Tab, Row, Col } from \"react-bootstrap\";\r\nimport PharmaciesView from \"./PharmaciesView\";\r\nimport MedicinesView from \"./MedicinesView\";\r\nimport DisplayWorkers from \"../pharmacyAdmin/DisplayWorkers\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils.js\";\r\nimport DisplayHolidayRequests from \"../pharmacyAdmin/DisplayHolidayRequests\";\r\n\r\nfunction UnregistredAndPatientHomePage() {\r\n  const user = useSelector((state) => state.user);\r\n  let userType = getUserTypeFromToken();\r\n  useEffect(() => {\r\n    userType = getUserTypeFromToken();\r\n  }, [user]);\r\n\r\n  return (\r\n    <main className=\"home__page\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Pharmacies\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              {userType === \"PATIENT\" && (\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                    Dermatologits and pharmacists\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                  Medicines\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <PharmaciesView />\r\n              <MedicinesView />\r\n              {userType === \"PATIENT\" && <DisplayWorkers idOfPharmacy={-1} />}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default UnregistredAndPatientHomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst AddEditStockItemModal = (props) => {\r\n  const [singleSelection, setSingleSelection] = useState([]);\r\n  const [amount, setAmount] = useState(1);\r\n  const [options, setOptions] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicine() {\r\n      const response = await api.get(`/api/medicine/`);\r\n      setOptions(response.data);\r\n    }\r\n    fetchMedicine();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let data = {};\r\n    if (!singleSelection[0]) {\r\n      addToast(\"Medicine not selected\", { appearance: \"warning\" });\r\n      return;\r\n    }\r\n    data.medicineId = singleSelection[0].id;\r\n    data.medicineName = singleSelection[0].name;\r\n    data.amount = amount;\r\n    api.post(`/api/suppliers/stock/${getIdFromToken()}`, data).then(() => {\r\n      addToast(\"Medicine added successfully\", { appearance: \"success\" });\r\n      props.onSuccess();\r\n      props.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add medicine to stock\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Medicine</Form.Label>\r\n            <Typeahead\r\n              labelKey={(option) => `${option.code} -- ${option.name}`}\r\n              onChange={setSingleSelection}\r\n              options={options}\r\n              placeholder=\"Select a medicine...\"\r\n              selected={singleSelection}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Amount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setAmount(event.target.value)}\r\n              defaultValue={1}\r\n              min={1}\r\n              max={1000}\r\n              step={1}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={props.onHide}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEditStockItemModal;\r\n","import StockItem from \"./StockItem\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, ListGroup } from \"react-bootstrap\";\r\nimport AddEditStockItemModal from \"../stock/AddEditStockItemModal\";\r\n\r\nconst SupplierStock = () => {\r\n  const [stock, setStock] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [showAddEditModal, setShowAddEditModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchStock() {\r\n      const response = await api.get(\r\n        `/api/suppliers/stock/${getIdFromToken()}`\r\n      );\r\n      setStock(response.data);\r\n    }\r\n    fetchStock();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  return (\r\n    <ListGroup style={{ margin: \"20px\" }}>\r\n      {stock &&\r\n        stock.map((stockItem) => {\r\n          return (\r\n            <ListGroup.Item\r\n              style={{ margin: \"10px\" }}\r\n              key={stockItem.medicineId}\r\n            >\r\n              {\" \"}\r\n              {`${stockItem.medicineName}  --  ${stockItem.amount}`}\r\n            </ListGroup.Item>\r\n          );\r\n        })}\r\n      <Button onClick={() => setShowAddEditModal(true)}>Add</Button>\r\n      <AddEditStockItemModal\r\n        show={showAddEditModal}\r\n        onHide={() => setShowAddEditModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default SupplierStock;\r\n","export function getErrorMessage(err) {\r\n    return err.response.data.message ? err.response.data.message : err.response.data\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../../app/errorHandler\";\r\n\r\nconst AddEditOfferModal = (props) => {\r\n  const [totalPrice, setTotalPrice] = useState(\r\n    !props.offer ? 0 : props.offer.price\r\n  );\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    !props.offer ? Date.now() : new Date(props.offer.deliveryDate).getTime()\r\n  );\r\n  const { addToast } = useToasts();\r\n\r\n  const setDateTimestamp = (dateString) => {\r\n    setSelectedDate(new Date(dateString).getTime());\r\n  };\r\n\r\n  const handleClose = () => {};\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let data = {};\r\n    data.price = totalPrice;\r\n    data.deliveryDate = selectedDate;\r\n    data.offerState = props.offer ? props.offer.offerState : \"PENDING\";\r\n    data.orderId = props.order.id;\r\n    props.offer ? editOffer(data) : addOffer(data);\r\n  };\r\n\r\n  const addOffer = (data) => {\r\n    api\r\n      .post(`/api/suppliers/offers/${getIdFromToken()}`, data)\r\n      .then(() => {\r\n        props.onSuccess();\r\n        props.onHide();\r\n        addToast(\"Successfully added\", { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const editOffer = (data) => {\r\n    data.id = props.offer.id;\r\n    api\r\n      .put(`/api/suppliers/offers/${getIdFromToken()}`, data)\r\n      .then(() => {\r\n        addToast(\"Successfully updated\", { appearance: \"success\" });\r\n        props.onSuccess();\r\n        props.onHide();\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const convertDate = (timestamp) => {\r\n    let date = new Date(timestamp);\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    month = month < 10 ? \"0\" + month : month;\r\n    day = day < 10 ? \"0\" + day : day;\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  let itemsToRender;\r\n  if (!!props.order && !!props.order.orderItem) {\r\n    itemsToRender = props.order.orderItem.map((oi) => {\r\n      return (\r\n        <div key={oi.id}>\r\n          <p>{`${oi.medicine.code} -- ${oi.medicine.name} -- Amount: ${oi.amount}`}</p>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal {...props}>\r\n      <Modal.Header\r\n        className=\"justify-content-center\"\r\n        backdrop=\"static\"\r\n        onHide={handleClose}\r\n        closeButton\r\n      >\r\n        <p>{!props.offer ? \"Create offer\" : \"Edit offer\"} </p>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"justify-content-center\">\r\n        {itemsToRender}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Total price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setTotalPrice(event.target.value)}\r\n              defaultValue={!props.offer ? 0 : props.offer.price}\r\n              min={0}\r\n              step={1}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Due</Form.Label>\r\n\r\n            <Form.Control\r\n              type=\"date\"\r\n              onChange={(event) => setDateTimestamp(event.target.value)}\r\n              defaultValue={\r\n                !props.offer\r\n                  ? convertDate(Date.now())\r\n                  : convertDate(props.offer.deliveryDate)\r\n              }\r\n              min={convertDate(Date.now())}\r\n              max={!!props.order ? convertDate(props.order.deadline) : \"\"}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            className=\"float-center\"\r\n            variant=\"outline-secondary\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEditOfferModal;\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst OrderMedicineList = ({ orderItems }) => {\r\n    return (\r\n        <ListGroup style={{ marginBottom: '20px' }}>\r\n            {orderItems.map((oi) => {\r\n                return <ListGroup.Item>{`Code: ${oi.medicine.code} -- ${oi.medicine.name}   Amount ${oi.amount} pcs`}</ListGroup.Item>\r\n            })}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nOrderMedicineList.defaultProps = {\r\n    orderItems: []\r\n}\r\n\r\nexport default OrderMedicineList\r\n","import React, { useState } from 'react'\r\nimport { Button, Col, Container, FormGroup, FormLabel, Row } from 'react-bootstrap'\r\nimport AddEditOfferModal from '../offers/AddEditOfferModal'\r\nimport OrderMedicineList from './OrderMedicineList';\r\n\r\nconst OrderItem = ({ order, onSuccess }) => {\r\n    const [showAddOfferModal, setShowAddOfferModal] = useState(false);\r\n\r\n    return (\r\n        <Container className=\"border border-primary\" style={{ borderRadius: '10px', padding: '10px', marginTop: '10px', marginBottom: '10px', backgroundColor: 'white' }}>\r\n            <Row className=\"justify-content-between\">\r\n                <Col md={4}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Status: {order.orderState}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Deadline: {new Date(order.deadline).toLocaleDateString(\"sr-sp\")}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <OrderMedicineList orderItems={order.orderItem}></OrderMedicineList>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{ offset: 0, span: 2 }}>\r\n                    <Button onClick={() => { setShowAddOfferModal(true) }} style={{ width: '100%' }}>Create Offer</Button>\r\n                </Col>\r\n            </Row>\r\n            <AddEditOfferModal show={showAddOfferModal} order={order} onHide={() => setShowAddOfferModal(false)} onSuccess={() => { onSuccess() }}></AddEditOfferModal>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default OrderItem\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport AddEditOfferModal from \"../offers/AddEditOfferModal\";\r\n\r\nconst NewOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchOrders() {\r\n      const response = await api.get(\r\n        `/api/orders/without-offers/${getIdFromToken()}`\r\n      );\r\n      setOrders(response.data);\r\n    }\r\n    fetchOrders();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMessage(\r\n      Array.isArray(orders) && orders.length ? \"\" : \"No orders to show\"\r\n    );\r\n  }, [orders]);\r\n\r\n  return (\r\n    <div>\r\n      {orders &&\r\n        orders.map((o) => {\r\n          return (\r\n            <OrderItem\r\n              key={o.id}\r\n              order={o}\r\n              onSuccess={() => reloadTable()}\r\n            ></OrderItem>\r\n          );\r\n        })}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewOrders;\r\n","import {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AddEditOfferModal from \"../offers/AddEditOfferModal\";\r\nimport api from \"../../../app/api\";\r\n\r\nconst OfferItem = (props) => {\r\n  const [showEditOfferModal, setShowEditOfferModal] = useState(false);\r\n  const [order, setOrder] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchOrder() {\r\n      const res = await api.get(`/api/orders/${props.offer.orderId}`);\r\n      setOrder(res.data);\r\n    }\r\n    fetchOrder();\r\n  }, []);\r\n\r\n  const canEdit = () => {\r\n    return props.offer.offerState === \"PENDING\" && order.deadline > Date.now();\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"border border-primary\"\r\n      style={{\r\n        borderRadius: \"10px\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Row className=\"justify-content-between\">\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>State: {props.offer.offerState}</FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>Price: {props.offer.price}</FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>\r\n              Delivery Date:{\" \"}\r\n              {new Date(props.offer.deliveryDate).toLocaleDateString(\"sr-sp\")}\r\n            </FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>\r\n              Deadline:{\" \"}\r\n              {!!order\r\n                ? new Date(order.deadline).toLocaleDateString(\"sr-sp\")\r\n                : \"\"}\r\n            </FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 0, span: 2 }}>\r\n          <Button\r\n            disabled={!canEdit()}\r\n            onClick={() => {\r\n              setShowEditOfferModal(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <AddEditOfferModal\r\n        show={showEditOfferModal}\r\n        order={order}\r\n        offer={props.offer}\r\n        onHide={() => setShowEditOfferModal(false)}\r\n        onSuccess={() => {\r\n          props.onSuccess();\r\n        }}\r\n      ></AddEditOfferModal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OfferItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport OfferItem from \"../offers/OfferItem\";\r\n\r\nconst SupplierOffers = () => {\r\n  const [offers, setOffers] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [currentOfferType, setCurrentOfferType] = useState(\"ACCEPTED\");\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    async function fetchOffers() {\r\n      const response = await api.get(\r\n        `/api/suppliers/offers/${id}/?type=${currentOfferType}`\r\n      );\r\n      setOffers(response.data);\r\n    }\r\n    fetchOffers();\r\n  }, [reload, currentOfferType]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const updateCurrentOfferType = (event) => {\r\n    setCurrentOfferType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form.Group controlId=\"selectOffer\">\r\n        <Form.Label>Offer state</Form.Label>\r\n        <Form.Control as=\"select\" onChange={updateCurrentOfferType.bind(this)}>\r\n          <option value=\"ACCEPTED\">Accepted</option>\r\n          <option value=\"PENDING\">Pending</option>\r\n          <option value=\"DENIED\">Denied</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      {offers &&\r\n        offers.map((o) => {\r\n          return (\r\n            <OfferItem\r\n              key={o.id}\r\n              offer={o}\r\n              onSuccess={() => {\r\n                reloadTable();\r\n              }}\r\n            ></OfferItem>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupplierOffers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Nav, Row, Tab, TabPane } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport SetPasswordModal from \"../utilComponents/modals/SetPasswordModal\";\r\nimport SupplierStock from \"../supplier/stock/SupplierStock\";\r\nimport NewOrders from \"../supplier/orders/NewOrders\";\r\nimport SupplierOffers from \"./offers/SupplierOffers\";\r\n\r\nconst SupplierHomePage = () => {\r\n  const [isPasswordSet, setIsPasswordSet] = useState(false);\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    api.get(\"/api/users/\" + id).then((res) => {\r\n      setIsPasswordSet(res.data.passwordChanged);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <main className=\"home__page\">\r\n        <Tab.Container unmountOnExit>\r\n          <Row className=\"my-panel\">\r\n            <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                    New orders\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                    My offers\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                    Stock\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Col>\r\n            <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n              <Tab.Content>\r\n                <TabPane eventKey=\"first\">\r\n                  <NewOrders></NewOrders>\r\n                </TabPane>\r\n                <TabPane eventKey=\"second\">\r\n                  <SupplierOffers></SupplierOffers>\r\n                </TabPane>\r\n                <TabPane eventKey=\"third\">\r\n                  <SupplierStock></SupplierStock>\r\n                </TabPane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </main>\r\n      <SetPasswordModal\r\n        show={!isPasswordSet}\r\n        onPasswordSet={() => setIsPasswordSet(true)}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupplierHomePage;\r\n","import { React } from \"react\";\r\nimport \"../../styling/home_page.css\";\r\nimport { Nav, Tab, Row, Col } from \"react-bootstrap\";\r\n\r\nimport DisplayHolidayRequests from \"../pharmacyAdmin/DisplayHolidayRequests\";\r\n\r\nfunction AdminHomePage() {\r\n  return (\r\n    <main className=\"home__page\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"fifth\">\r\n                  Holiday requests\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <DisplayHolidayRequests idOfPharmacy={-1} />\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AdminHomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport PharmacyAdminHomePage from \"../pharmacyAdmin/PharmacyAdminHomePage\";\r\nimport PharmHomePage from \"../workers/pharmacist/home_page_pharmacist\";\r\nimport DermHomePage from \"../workers/dermatologist/home_page_dermatologist\";\r\nimport UnregistredAndPatientHomePage from \"../unregisteredAndPatient/UnregistredAndPatientHomePage\";\r\nimport SupplierHomePage from \"../supplier/SupplierHomePage\";\r\nimport AdminHomePage from \"./AdminHomePage\";\r\n\r\nconst HomePage = () => {\r\n  const user = useSelector((state) => state.user);\r\n  let userType = getUserTypeFromToken();\r\n  useEffect(() => {\r\n    userType = getUserTypeFromToken();\r\n  }, [user]);\r\n\r\n  let homePage;\r\n  switch (userType) {\r\n    case \"ADMIN\":\r\n      homePage = <AdminHomePage></AdminHomePage>;\r\n      break;\r\n    case \"PHARMACIST\":\r\n      homePage = <PharmHomePage></PharmHomePage>;\r\n      break;\r\n    case \"DERMATOLOGIST\":\r\n      homePage = <DermHomePage></DermHomePage>;\r\n      break;\r\n    case \"SUPPLIER\":\r\n      homePage = <SupplierHomePage></SupplierHomePage>;\r\n      break;\r\n    case \"PATIENT\":\r\n      homePage = (\r\n        <UnregistredAndPatientHomePage></UnregistredAndPatientHomePage>\r\n      );\r\n      break;\r\n    case \"PHARMACY_ADMIN\":\r\n      homePage = <PharmacyAdminHomePage></PharmacyAdminHomePage>;\r\n      break;\r\n    default:\r\n      homePage = (\r\n        <UnregistredAndPatientHomePage></UnregistredAndPatientHomePage>\r\n      );\r\n      break;\r\n  }\r\n  return <div>{homePage}</div>;\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst AllergyRow = ({ allergy, deleteClick }) => {\r\n  return (\r\n    <tr key={allergy.id}>\r\n      <td>{allergy.code}</td>\r\n      <td>{allergy.name}</td>\r\n      <td>{allergy.content}</td>\r\n      <td>\r\n        <Button variant=\"danger\" onClick={deleteClick}>\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AllergyRow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./../../app/api\";\r\nimport { Table, Button, Modal } from \"react-bootstrap\";\r\nimport AllergyRow from \"./AllergyRow\";\r\nimport { Plus } from \"react-bootstrap-icons\";\r\nimport \"../../styling/allergies.css\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction Allergies() {\r\n  const [reload, setReload] = useState(false);\r\n  const [allergies, setAllergies] = useState([]);\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [selectedMedicine, setSelectedMedicine] = useState({});\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\r\n        \"/api/patients/allergies/all/\" + getIdFromToken()\r\n      );\r\n      setAllergies(response.data);\r\n      if (response.data == \"\") setAllergies(null);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\"/api/medicine/\");\r\n      setMedicines(response.data);\r\n      if (response.data == \"\") setMedicines(null);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  const updateSelectedMedicine = (selectedMedicine) => {\r\n    setSelectedMedicine(selectedMedicine);\r\n  };\r\n\r\n  const deleteAllergy = (id) => {\r\n    axios\r\n      .delete(\"/api/patients/allergies/\" + getIdFromToken() + \"/\" + id)\r\n      .then((res) => {\r\n        reloadTable();\r\n        addToast(res.data, { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const addAllergy = () => {\r\n    axios\r\n      .post(\r\n        \"/api/patients/allergies/\" +\r\n          getIdFromToken() +\r\n          \"/\" +\r\n          selectedMedicine.id\r\n      )\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        reloadTable();\r\n        setShowAddModal(false);\r\n        setSelectedMedicine({});\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"my__allergy__header\">Allergies</h3>\r\n      <Table\r\n        striped\r\n        bordered\r\n        variant=\"light\"\r\n        size=\"lg\"\r\n        style={{ display: allergies != null ? \"block\" : \"none\" }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Code</th>\r\n            <th>Name</th>\r\n            <th>Content</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"my__table__body\">\r\n          {allergies &&\r\n            allergies.map((a) => (\r\n              <AllergyRow\r\n                key={a.id}\r\n                allergy={a}\r\n                deleteClick={() => deleteAllergy(a.id)}\r\n              ></AllergyRow>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n      <Button variant=\"primary\" onClick={() => setShowAddModal(true)}>\r\n        <Plus style={{ width: \"1.5em\", height: \"1.5em\" }} />\r\n        Add\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onHide={() => {\r\n          setShowAddModal(false);\r\n          setSelectedMedicine({});\r\n        }}\r\n        show={showAddModal}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Add new allergy\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            size=\"md\"\r\n            style={{ display: medicines != null ? \"block\" : \"none\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Code</th>\r\n                <th>Name</th>\r\n                <th>Content</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"my__table__body\">\r\n              {medicines &&\r\n                medicines.map((m) => (\r\n                  <tr\r\n                    onClick={() => updateSelectedMedicine(m)}\r\n                    key={m.id}\r\n                    className={\r\n                      selectedMedicine.id === m.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{m.name}</td>\r\n                    <td>{m.code}</td>\r\n                    <td>{m.content}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={addAllergy}\r\n            disabled={Object.keys(selectedMedicine).length === 0 ? true : false}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Allergies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nfunction PatientBenefits() {\r\n  const [points, setPoints] = useState();\r\n  const [category, setCategory] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await axios.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      );\r\n      setPoints(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, {});\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      const request = await axios.get(\"/api/ranking-category/points/\" + points);\r\n      setCategory(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Benefits</h3>\r\n      <p style={{ textAlign: \"center\" }}>Achieved points: {points} </p>\r\n      <div style={{ display: category == \"\" ? \"none\" : \"block\" }}>\r\n        <p style={{ textAlign: \"center\" }}>Category: {category.name} </p>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Requied points: {category.pointsRequired}{\" \"}\r\n        </p>\r\n        <p style={{ textAlign: \"center\" }}>Discount: {category.discount}%</p>\r\n      </div>\r\n      <h5\r\n        style={{\r\n          display: category == \"\" ? \"block\" : \"none\",\r\n          fontWeight: \"bold\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        No category achieved\r\n      </h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientBenefits;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nfunction PatientPenalties() {\r\n  const [penalties, setPenalties] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchPenalties() {\r\n      const request = await axios.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/penalties\"\r\n      );\r\n      setPenalties(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchPenalties();\r\n  }, {});\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Penalties</h3>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Achieved points: {penalties} out of 3\r\n      </p>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Reservation functionality is disabled once you reach 3 penalties.\r\n      </p>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Every first day of the month the penalties are set to 0.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientPenalties;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row, Modal } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { Eye } from \"react-bootstrap-icons\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst BasicProfileInfo = (props) => {\r\n  const [user, setUser] = useState({});\r\n  const [showUser, setShowUser] = useState({});\r\n  const [passwordDTO, setPasswordDTO] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    repeatPassword: \"\",\r\n  });\r\n  const [isEdit, setEdit] = useState(false);\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  const [inputType, setInputType] = useState(\"password\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchUser() {\r\n      const request = await api.get(\"/api/users/\" + getIdFromToken());\r\n      setUser(request.data);\r\n      setShowUser({\r\n        email: request.data?.email,\r\n        firstName: request.data?.firstName,\r\n        lastName: request.data?.lastName,\r\n        telephone: request.data?.telephone,\r\n        street: request.data?.address?.street,\r\n        city: request.data?.address?.city,\r\n        country: request.data?.address?.country,\r\n      });\r\n      return request;\r\n    }\r\n    fetchUser();\r\n  }, {});\r\n\r\n  const enableEdit = () => {\r\n    setEdit(!isEdit);\r\n  };\r\n\r\n  const cancelData = () => {\r\n    setEdit(!isEdit);\r\n    setShowUser({\r\n      email: user?.email,\r\n      firstName: user?.firstName,\r\n      lastName: user?.lastName,\r\n      telephone: user?.telephone,\r\n      street: user?.address?.street,\r\n      city: user?.address?.city,\r\n      country: user?.address?.country,\r\n    });\r\n  };\r\n\r\n  let handleClick = (event) => {\r\n    let key = event.target.name;\r\n    let value = event.target.value;\r\n    setShowUser({ ...showUser, [key]: value });\r\n  };\r\n\r\n  let handleClick2 = (event) => {\r\n    let key = event.target.name;\r\n    let value = event.target.value;\r\n    setPasswordDTO({ ...passwordDTO, [key]: value });\r\n  };\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setEdit(!isEdit);\r\n\r\n    if (\r\n      user.firstName === showUser.firstName &&\r\n      user.lastName === showUser.lastName &&\r\n      user.telephone === showUser.telephone &&\r\n      user.address.street === showUser.street &&\r\n      user.address.city === showUser.city &&\r\n      user.address.country === showUser.country\r\n    )\r\n      return;\r\n\r\n    user.firstName = showUser.firstName;\r\n    user.lastName = showUser.lastName;\r\n    user.telephone = showUser.telephone;\r\n    user.address.street = showUser.street;\r\n    user.address.city = showUser.city;\r\n    user.address.country = showUser.country;\r\n\r\n    api\r\n      .put(\"/api/users/\" + getIdFromToken(), user)\r\n      .then((res) => {\r\n        addToast(\"User changed successfully!\", { appearance: \"success\" });\r\n        setUser(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const changePassword = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (passwordDTO.newPassword !== passwordDTO.repeatPassword) {\r\n      addToast(\"Passwords not matches!\", { appearance: \"warning\" });\r\n      return;\r\n    }\r\n\r\n    let forSend = { ...passwordDTO };\r\n    delete forSend.repeatPassword;\r\n    api\r\n      .put(\"/api/users/change-password/\" + getIdFromToken(), forSend)\r\n      .then(() => {\r\n        addToast(\"Successfully changed password!\", { appearance: \"success\" });\r\n        passwordDTO.oldPassword = \"\";\r\n        passwordDTO.newPassword = \"\";\r\n        passwordDTO.repeatPassword = \"\";\r\n        setShowPasswordModal(false);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Modal\r\n          show={showPasswordModal}\r\n          onHide={() => setShowPasswordModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Change password</Modal.Title>\r\n          </Modal.Header>\r\n          <Form onSubmit={changePassword}>\r\n            <Modal.Body>\r\n              <Form.Label>Old password</Form.Label>\r\n              <Form.Control\r\n                type={inputType}\r\n                name=\"oldPassword\"\r\n                required\r\n                value={passwordDTO.oldPassword}\r\n                onChange={handleClick2}\r\n                maxLength={30}\r\n              />\r\n\r\n              <Form.Label>New password</Form.Label>\r\n              <Form.Control\r\n                type={inputType}\r\n                name=\"newPassword\"\r\n                required\r\n                value={passwordDTO.newPassword}\r\n                onChange={handleClick2}\r\n                maxLength={30}\r\n              />\r\n\r\n              <Form.Label>Repeat password</Form.Label>\r\n              <Form.Control\r\n                type={inputType}\r\n                name=\"repeatPassword\"\r\n                required\r\n                value={passwordDTO.repeatPassword}\r\n                onChange={handleClick2}\r\n                maxLength={30}\r\n              />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  position: \"absolute\",\r\n                  left: \"30px\",\r\n                }}\r\n                onClick={() =>\r\n                  setInputType(inputType === \"text\" ? \"password\" : \"text\")\r\n                }\r\n              >\r\n                <Eye />\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => setShowPasswordModal(false)}\r\n              >\r\n                Close\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal>\r\n      </Row>\r\n      <Row className=\"justify-content-center m-3\">\r\n        <h4>{props.title}</h4>\r\n      </Row>\r\n      <Row className=\"justify-content-center m-3\">\r\n        <Col md={6}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control disabled type=\"email\" value={showUser.email} />\r\n\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              required\r\n              value={showUser.firstName}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              required\r\n              value={showUser.lastName}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Telephone</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"number\"\r\n              name=\"telephone\"\r\n              pattern=\"[0-9]{10}\"\r\n              required\r\n              value={showUser.telephone}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Street</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"street\"\r\n              required\r\n              value={showUser?.street}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"city\"\r\n              required\r\n              value={showUser?.city}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"country\"\r\n              required\r\n              value={showUser?.country}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Row style={{ marginTop: \"10px\", position: \"relative\" }}>\r\n              <Button\r\n                disabled={!isEdit}\r\n                variant=\"info\"\r\n                type=\"button\"\r\n                onClick={() => setShowPasswordModal(true)}\r\n                style={{ position: \"absolute\", right: \"0px\" }}\r\n              >\r\n                Change password\r\n              </Button>\r\n            </Row>\r\n\r\n            <Form.Group className=\"form__buttons mt-5\" controlId=\"buttons\">\r\n              <Button disabled={!isEdit} variant=\"secondary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                onClick={enableEdit}\r\n                disabled={isEdit}\r\n                variant=\"secondary\"\r\n                type=\"button\"\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                onClick={cancelData}\r\n                disabled={!isEdit}\r\n                variant=\"secondary\"\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BasicProfileInfo;\r\n","import React from \"react\";\r\nimport \"../../styling/profile.css\";\r\nimport Allergies from \"./Allergies\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport PatientBenefits from \"./PatientBenefits\";\r\nimport PatientPenalties from \"./PatientPenalties\";\r\nimport BasicProfileInfo from \"./BasicProfileInfo\";\r\n\r\nfunction UserInfo(props) {\r\n  return (\r\n    <Container>\r\n      <BasicProfileInfo title={props.title}></BasicProfileInfo>\r\n      <hr />\r\n      <Row className=\"justify-content-center m-3\">\r\n        <Allergies />\r\n      </Row>\r\n      <hr />\r\n      <PatientBenefits />\r\n      <hr />\r\n      <PatientPenalties />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport UserInfo from \"./UserInfoComponent\";\r\n\r\nimport \"../../styling/profile.css\";\r\n\r\nfunction UserProfile() {\r\n  return (\r\n    <main>\r\n      <UserInfo title=\"Patient's information\" col_width={6}></UserInfo>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport \"../styling/footer.css\";\r\nimport { Facebook, Instagram, Twitter } from \"react-bootstrap-icons\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"my__footer\">\r\n      <p>Copyright &#169; 2021</p>\r\n      <p>\r\n        Produced by: Dejan Todorovic, Aleksandar Buljevic, Darko Tica and Jovan\r\n        Simic\r\n        <Button className=\"my__footer__btn\">\r\n          <Facebook />\r\n        </Button>\r\n        <Button className=\"my__footer__btn\">\r\n          <Instagram />\r\n        </Button>\r\n        <Button className=\"my__footer__btn\">\r\n          <Twitter />\r\n        </Button>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken, getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport Map from \"ol/Map\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport { fromLonLat } from \"ol/proj\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\n\r\nfunction PharmacyBasic({ details }) {\r\n  const [isUserSubscribed, setIsUserSubscribed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIfUserIsSubscribed();\r\n    document.getElementById(\"mapCol\").innerHTML = \"\";\r\n    return new Map({\r\n      target: \"mapCol\",\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n\r\n      view: new View({\r\n        center: fromLonLat([\r\n          details?.address?.location?.longitude,\r\n          details?.address?.location?.latitude,\r\n        ]),\r\n        zoom: 10,\r\n        minZoom: 5,\r\n        maxZoom: 12,\r\n      }),\r\n    });\r\n  }, [details]);\r\n\r\n  // CHECK nije moje\r\n  const subscribe = () => {\r\n    if (isUserSubscribed) {\r\n      api\r\n        .post(`/api/pharmacy/${details.id}/unsubscribe/${getIdFromToken()}`)\r\n        .then(() => {\r\n          alert(\"Success\");\r\n          checkIfUserIsSubscribed();\r\n        })\r\n        .catch(() => {\r\n          alert(\"Error\");\r\n        });\r\n    } else {\r\n      api\r\n        .post(`/api/pharmacy/${details.id}/subscribe/${getIdFromToken()}`)\r\n        .then(() => {\r\n          alert(\"Success\");\r\n          checkIfUserIsSubscribed();\r\n        })\r\n        .catch(() => {\r\n          alert(\"Error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  // CHECK nije moje\r\n  const checkIfUserIsSubscribed = () => {\r\n    api\r\n      .get(`/api/pharmacy/${details.id}/subscribe/${getIdFromToken()}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setIsUserSubscribed(res.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"first\">\r\n      <Container fluid>\r\n        <Row className=\"row-content\">\r\n          <Col lg={6} md={6} sm={12} className=\"my-vertical-col center\">\r\n            <h1>{details?.name}</h1>\r\n            <div className=\"center\">\r\n              {details.avgGrade &&\r\n                [...Array(Math.ceil(details.avgGrade))].map(() => (\r\n                  <StarFill className=\"my__star\" />\r\n                ))}\r\n            </div>\r\n            <h5>- {details?.description} -</h5>\r\n            <h4>\r\n              {details?.address?.street}, {details?.address?.city},{\" \"}\r\n              {details?.address?.country}\r\n            </h4>\r\n            <Button\r\n              variant=\"primary\"\r\n              hidden={getUserTypeFromToken() !== \"PATIENT\"}\r\n              onClick={subscribe}\r\n            >\r\n              {isUserSubscribed ? \"Unsubscribe\" : \"Subscribe\"}\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={12} id=\"mapCol\" className=\"center\"></Col>\r\n        </Row>\r\n        <hr></hr>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default PharmacyBasic;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  Nav,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction MedicinesView({ priceListId, pharmacyId }) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedMedicines, setShowedMedicines] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (priceListId != undefined) {\r\n      async function fetchPriceList() {\r\n        const request = await axios\r\n          .get(`/api/pricelist/${priceListId}`)\r\n          .then((res) => {\r\n            setMedicines(res.data.medicineItems);\r\n          })\r\n          .catch((err) => {\r\n            addToast(err.response.data, {\r\n              appearance: \"error\",\r\n            });\r\n          });\r\n        return request;\r\n      }\r\n      fetchPriceList();\r\n    }\r\n  }, [priceListId]);\r\n\r\n  useEffect(() => {\r\n    if (medicines.length != 0) {\r\n      let maxNumber = Math.floor(medicines?.length / 12) - 1;\r\n      if (medicines?.length / 12 - 1 > maxNumber) {\r\n        maxNumber = maxNumber + 1;\r\n      }\r\n      setMaxPag(maxNumber);\r\n    }\r\n  }, [medicines]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = medicines?.length < first + 12 ? medicines?.length : first + 12;\r\n    setShowedMedicines(medicines?.slice(first, max));\r\n  }, [medicines, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"second\">\r\n      <Container fluid>\r\n        <Row>\r\n          {showedMedicines &&\r\n            showedMedicines.map((medicine, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Nav.Link\r\n                  as={Link}\r\n                  className=\"my__nav__link__card\"\r\n                  to={`/medicine/${medicine?.medicine?.id}/pharmacy/${pharmacyId}/price/${medicine?.price}`}\r\n                >\r\n                  <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                    <Card.Body>\r\n                      <Card.Title>{medicine?.medicine?.name}</Card.Title>\r\n                      <Card.Text>#{medicine?.medicine?.code}</Card.Text>\r\n                      <Card.Text>{medicine?.medicine?.content}</Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {medicine?.price}$\r\n                      </ListGroupItem>\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {medicines &&\r\n                          [\r\n                            ...Array(Math.ceil(medicine?.medicine?.avgGrade)),\r\n                          ].map(() => <StarFill className=\"my__star\" />)}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Nav.Link>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default MedicinesView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"./../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getIdFromToken, getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentView({ pharmacyId }) {\r\n  const [reload, setReload] = useState(false);\r\n  const [appointsments, setAppointsments] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedAppointsments, setShowedAppointsments] = useState([]);\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [points, setPoints] = useState({});\r\n  const [category, setCategory] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      if (getIdFromToken() == null) return;\r\n      const request = await axios.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      );\r\n      setPoints(request.data);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      if (getIdFromToken() == null) return;\r\n      const request = await axios.get(\"/api/ranking-category/points/\" + points);\r\n      setCategory(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    if (pharmacyId != undefined) {\r\n      async function fetchAppointsments() {\r\n        const request = await axios.get(\r\n          `/api/appointment/bypharmacyid/${pharmacyId}`\r\n        );\r\n        setAppointsments(request.data);\r\n\r\n        return request;\r\n      }\r\n      fetchAppointsments();\r\n    }\r\n  }, [pharmacyId, reload]);\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(appointsments?.length / 12) - 1;\r\n    if (appointsments?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [appointsments, reload]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max =\r\n      appointsments.length < first + 12 ? appointsments?.length : first + 12;\r\n    setShowedAppointsments(appointsments?.slice(first, max));\r\n  }, [appointsments, pagNumber, reload]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  const reserveAppointment = (a) => {\r\n    axios\r\n      .post(\"/api/appointment/reserve/\" + a.id + \"/patient/\" + getIdFromToken())\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(\r\n          err.response.data.message == undefined\r\n            ? err.response.data\r\n            : err.response.data.message,\r\n          {\r\n            appearance: \"error\",\r\n          }\r\n        );\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sorter === \"none\") return;\r\n\r\n    let search_params = new URLSearchParams();\r\n\r\n    if (sorter === \"ascPrice\") {\r\n      search_params.append(\"sort\", \"price,asc\");\r\n    }\r\n    if (sorter === \"descPrice\") {\r\n      search_params.append(\"sort\", \"price,desc\");\r\n    }\r\n    if (sorter === \"ascGrade\") {\r\n      search_params.append(\"sort\", \"worker.avgGrade,asc\");\r\n    }\r\n    if (sorter === \"descGrade\") {\r\n      search_params.append(\"sort\", \"worker.avgGrade,desc\");\r\n    }\r\n\r\n    axios\r\n      .get(`/api/appointment/bypharmacyid/${pharmacyId}/sort`, {\r\n        params: search_params,\r\n      })\r\n      .then((resp) => setAppointsments(resp.data))\r\n      .catch(setAppointsments([]));\r\n  };\r\n\r\n  const updateSorting = (event) => {\r\n    setSorter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"third\">\r\n      <Container fluid>\r\n        <Row\r\n          className=\"justify-content-center m-3\"\r\n          style={{ display: appointsments.length == 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <Form onSubmit={formSearch}>\r\n            <Form.Group as={Row} className=\"align-items-center\">\r\n              <Col>\r\n                <Form.Label>Choose sorter: </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sorter}\r\n                  onChange={updateSorting.bind(this)}\r\n                  name=\"sorter\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"ascPrice\">Price (ascending)</option>\r\n                  <option value=\"descPrice\">Price (descending)</option>\r\n                  <option value=\"ascGrade\">\r\n                    Dermatologist grade (ascending)\r\n                  </option>\r\n                  <option value=\"descGrade\">\r\n                    Dermatologist grade (descending)\r\n                  </option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col className=\"justify-content-center\">\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Sort{\" \"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setReload(!reload);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Reset{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          {showedAppointsments &&\r\n            showedAppointsments.map((appointsment, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                  <Card.Body>\r\n                    <Card.Title>{appointsment?.appointmentType}</Card.Title>\r\n                    <Card.Text>\r\n                      {moment(appointsment.startTime).format(\"DD MMM YYYY\")}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      {moment(appointsment.startTime).format(\"hh:mm a\")} -{\" \"}\r\n                      {moment(appointsment.endTime).format(\"hh:mm a\")}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem\r\n                      className=\"my__flex\"\r\n                      style={{\r\n                        display:\r\n                          category === \"\" || Object.keys(category).length === 0\r\n                            ? \"flex\"\r\n                            : \"none\",\r\n                      }}\r\n                    >\r\n                      {appointsment.price}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem\r\n                      className=\"my__flex\"\r\n                      style={{\r\n                        display:\r\n                          category !== \"\" && Object.keys(category).length !== 0\r\n                            ? \"flex\"\r\n                            : \"none\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textDecoration: \"line-through\" }}>\r\n                        {appointsment.price}\r\n                      </span>\r\n                      {\"   ->   \"}\r\n                      {(appointsment.price * (100 - category.discount)) / 100}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      {appointsment?.worker?.lastName}{\" \"}\r\n                      {appointsment?.worker?.firstName}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        onClick={() => reserveAppointment(appointsment)}\r\n                        style={{\r\n                          display:\r\n                            getUserTypeFromToken() === \"PATIENT\"\r\n                              ? \"block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        Reserve\r\n                      </Button>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row\r\n          className=\"my__row__pagination\"\r\n          style={{ display: appointsments.length == 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n        <h3\r\n          style={{\r\n            display: appointsments.length == 0 ? \"block\" : \"none\",\r\n            textAlign: \"center\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          There's no empty checkups!\r\n        </h3>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default AppointmentView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\n\r\nfunction WorkersView({ pharmacyId }) {\r\n  const [workers, setWorkers] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedWorkers, setShowedWorkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (pharmacyId != undefined) {\r\n      async function fetchWorkers() {\r\n        const request = await axios.get(\r\n          `/api/workplace/bypharmacyid/${pharmacyId}`\r\n        );\r\n        setWorkers(request.data);\r\n\r\n        return request;\r\n      }\r\n      fetchWorkers();\r\n    }\r\n  }, [pharmacyId]);\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(workers?.length / 12) - 1;\r\n    if (workers?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [workers]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = workers.length < first + 12 ? workers?.length : first + 12;\r\n    setShowedWorkers(workers?.slice(first, max));\r\n  }, [workers, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"forth\">\r\n      <Container fluid>\r\n        <Row>\r\n          {showedWorkers &&\r\n            showedWorkers.map((worker, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      {worker?.worker?.lastName} {worker?.worker?.firstName}\r\n                    </Card.Title>\r\n                    <Card.Text>{worker?.worker?.email}</Card.Text>\r\n                    <Card.Text>{worker?.worker?.telephone}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      {worker?.worker?.roleName}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      {worker &&\r\n                        [...Array(Math.ceil(worker?.worker?.avgGrade))].map(\r\n                          () => <StarFill className=\"my__star\" />\r\n                        )}\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default WorkersView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst ERecipeSearchInPharmacy = ({ pharmacyId }) => {\r\n  const { addToast } = useToasts();\r\n  const [QRImage, setQRImage] = useState({});\r\n  const [parsedData, setParsedData] = useState({});\r\n\r\n  const handleFileChange = (e) => {\r\n    setQRImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"file\", QRImage);\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/e-recipes/upload-qr/${getIdFromToken()}`,\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        setParsedData(res.data);\r\n      })\r\n      .catch(() => {\r\n        addToast(\"Invalid QR code\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data = parsedData;\r\n    if (Object.keys(data) == 0) return;\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/pharmacy/e-recipe/${pharmacyId}`,\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        addToast(\"E-Recipe is not in the pharmacy!\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  }, [parsedData]);\r\n\r\n  return (\r\n    <div className=\"consultation__insight__content\">\r\n      <Container>\r\n        <Form\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <Container style={{ marginBottom: \"15px\" }}>\r\n            <Row>\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Form.File>\r\n                  <Form.File.Label>Upload QR Code</Form.File.Label>\r\n                  <Form.File.Input onChange={(e) => handleFileChange(e)} />\r\n                </Form.File>\r\n              </Col>\r\n\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERecipeSearchInPharmacy;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nimport PharmacyBasic from \"./PharmacyBasic\";\r\nimport MedicinesAdminView from \"./MedicineAdminView\";\r\nimport AppointmentView from \"./AppointmentView\";\r\nimport WorkersView from \"./WorkersView\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport TabPane from \"react-bootstrap/TabPane\";\r\n\r\nimport \"../../styling/pharmacy.css\";\r\nimport \"../../styling/home_page.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport ERecipeSearchInPharmacy from \"./ERecipeSearchInPharmacy\";\r\n\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils.js\";\r\n\r\nfunction PharmacyProfile() {\r\n  const { addToast } = useToasts();\r\n\r\n  const [details, setPharmacyDetails] = useState({});\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacy() {\r\n      const request = await axios\r\n        .get(`/api/pharmacy/${id}`)\r\n        .then((res) => {\r\n          setPharmacyDetails(res.data);\r\n        })\r\n        .catch((err) => {\r\n          addToast(err.response.data, {\r\n            appearance: \"error\",\r\n          });\r\n        });\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacy();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Basic informations\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                  Medicines\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                  Appointsments\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"forth\">\r\n                  Pharmacists and dermatologists\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              {getUserTypeFromToken() === \"PATIENT\" && (\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"fifth\">\r\n                    Check availability\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <PharmacyBasic details={details} />\r\n              <MedicinesAdminView\r\n                priceListId={details?.priceListId}\r\n                pharmacyId={details?.id} // isAdmin={true}\r\n              />\r\n              <AppointmentView pharmacyId={id} />\r\n              <WorkersView pharmacyId={id} />\r\n              <TabPane eventKey=\"fifth\">\r\n                <ERecipeSearchInPharmacy pharmacyId={id} />\r\n              </TabPane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacyProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport {\r\n  getIdFromToken,\r\n  getUserTypeFromToken,\r\n} from \"./../../app/jwtTokenUtils\";\r\n\r\nimport axios from \"./../../app/api\";\r\n\r\nimport \"../../styling/medicineProfile.css\";\r\nimport \"../../styling/allergies.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction MedicineProfile() {\r\n  const [medicine, setMedicine] = useState({});\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [pickupDate, setPickupDate] = useState(null);\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  let { id, pid, priceid } = useParams();\r\n\r\n  const [points, setPoints] = useState({});\r\n  const [category, setCategory] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await axios.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      );\r\n      setPoints(request.data);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      const request = await axios.get(\"/api/ranking-category/points/\" + points);\r\n      setCategory(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicine() {\r\n      const request = await axios.get(`/api/medicine/${id}`);\r\n      setMedicine(request.data);\r\n      return request;\r\n    }\r\n    fetchMedicine();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacies() {\r\n      const request = await axios.get(`/api/pharmacy/medicine/${id}`);\r\n      setPharmacies(request.data);\r\n      return request;\r\n    }\r\n    if (pid == -1) {\r\n      fetchPharmacies();\r\n    }\r\n  }, [id, pid]);\r\n\r\n  const updateSelectedPharmacy = (selectedPharmacy) => {\r\n    setSelectedPharmacy(selectedPharmacy);\r\n  };\r\n\r\n  const createReservation = () => {\r\n    if (pickupDate) {\r\n      if (pickupDate < new Date()) {\r\n        addToast(\"Choose date from the future!\", { appearance: \"warning\" });\r\n        return;\r\n      }\r\n    }\r\n\r\n    let forSend = {\r\n      pickupDate: pickupDate.getTime(),\r\n      medicineId: id,\r\n      pharmacyId: pid == -1 ? selectedPharmacy.id : pid,\r\n      userId: getIdFromToken(),\r\n      price: priceid == -1 ? selectedPharmacy.price : priceid,\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/medicine-reservation/\", forSend)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n      });\r\n\r\n    setSelectedPharmacy({});\r\n    setPickupDate(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"medicine__profile__container\">\r\n      <div className=\"medicine__content\">\r\n        <p className=\"my__medicine__header\">{medicine.name}</p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Code: </span>\r\n          {medicine.code}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Content:</span>{\" \"}\r\n          {medicine.content}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Side effects:</span>{\" \"}\r\n          {medicine.sideEffects}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Daily intake: </span>\r\n          {medicine.dailyIntake}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Recipe:</span>{\" \"}\r\n          {medicine.recipeRequired === \"REQUIRED\" ? \"Required\" : \"Not required\"}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Additional notes: </span>\r\n          {medicine.additionalNotes}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Average grade: </span>{\" \"}\r\n          {medicine.avgGrade}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Points: </span>\r\n          {medicine.points}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Type: </span>\r\n          {medicine.medicineType}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Form: </span>\r\n          {medicine.medicineForm}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Manufacturer: </span>\r\n          {medicine.manufacturer}\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: getUserTypeFromToken() === \"PATIENT\" ? \"block\" : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            style={{\r\n              display: pharmacies.length !== 0 || pid == -1 ? \"table\" : \"none\",\r\n            }}\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pharmacies &&\r\n                pharmacies.map((p) => (\r\n                  <tr\r\n                    key={p.id}\r\n                    onClick={() => updateSelectedPharmacy(p)}\r\n                    className={\r\n                      selectedPharmacy.id === p.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{p.name}</td>\r\n                    <td>{p.address}</td>\r\n                    <td>{p.price}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <p className=\"my__medicine__paragraph\">\r\n            <span className=\"my__start_paragraph\">Pickup deadline: </span>\r\n            <DatePicker\r\n              closeOnScroll={true}\r\n              selected={pickupDate}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              onChange={(date) => setPickupDate(date)}\r\n              isClearable\r\n            />\r\n          </p>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              display: category == \"\" ? \"none\" : \"block\",\r\n            }}\r\n          >\r\n            You have a discount of {category.discount}%\r\n          </p>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: \"1.3rem\",\r\n              display:\r\n                pid == -1 && Object.keys(selectedPharmacy).length != 0\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            Total price:{\" \"}\r\n            <span style={{ textDecoration: \"line-through\" }}>\r\n              {selectedPharmacy.price}\r\n            </span>\r\n            {\"   ->   \"}\r\n            {(selectedPharmacy.price * (100 - category.discount)) / 100}\r\n          </p>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: \"1.3rem\",\r\n              display: pid != -1 ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            Total price:{\" \"}\r\n            <span style={{ textDecoration: \"line-through\" }}>{priceid}</span>\r\n            {\"   ->   \"}\r\n            {(priceid * (100 - category.discount)) / 100}\r\n          </p>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={createReservation}\r\n            disabled={\r\n              pickupDate == null ||\r\n              (Object.keys(selectedPharmacy).length === 0 && pid == -1)\r\n            }\r\n            style={{\r\n              marginBottom: \"25px\",\r\n            }}\r\n          >\r\n            Reserve\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicineProfile;\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nfunction DeleteModal(props) {\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <p class=\"text-danger\">{props.bodyText ? props.bodyText : 'Delete this item?'}</p>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={props.onDelete}>Confirm</Button>\r\n                <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport OSM from 'ol/source/OSM'\r\nimport { Feature, Map, View } from 'ol'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport Vector from 'ol/source/Vector'\r\nimport Style from 'ol/style/Style'\r\nimport Circle from 'ol/style/Circle'\r\nimport Icon from 'ol/style/Icon'\r\nimport { fromLonLat, transform } from 'ol/proj'\r\nimport Point from 'ol/geom/Point'\r\nimport axios from 'axios'\r\nimport Fill from 'ol/style/Fill'\r\nimport Stroke from 'ol/style/Stroke'\r\nimport Projection from 'ol/proj/Projection'\r\nimport VectorLayer from 'ol/layer/Vector'\r\n\r\nconst Location = ({ onChange, defAddress }) => {\r\n    const [address, setAddress] = useState({})\r\n    const [location, setLocation] = useState({})\r\n    const [locationPoint, setLocationPoint] = useState()\r\n    const [coordinates, setCoordinates] = useState([20.4820788, 44.7901252])\r\n    const [map, setMap] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!!defAddress) {\r\n            setAddress(defAddress)\r\n            setCoordinates([defAddress.location.longitude, defAddress.location.latitude])\r\n        }\r\n\r\n        let lp = new Feature({\r\n            type: 'icon',\r\n            geometry: new Point(fromLonLat(coordinates))\r\n        });\r\n        setLocationPoint(lp)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (locationPoint && !map)\r\n            initMap()\r\n    }, [locationPoint])\r\n\r\n    const initMap = () => {\r\n\r\n        let iconStyle = new Style({\r\n            image: new Icon(({\r\n                anchor: [0.5, 1],\r\n                src: \"http://cdn.mapmarker.io/api/v1/pin?text=P&size=30&hoffset=1\"\r\n            }))\r\n        });\r\n\r\n        locationPoint.setStyle(iconStyle)\r\n\r\n        let vectorSource = new Vector({\r\n            features: [locationPoint]\r\n        });\r\n\r\n        let vectorLayer = new VectorLayer({\r\n            source: vectorSource\r\n        })\r\n\r\n        let m = new Map({\r\n            target: document.getElementById('pharmacyMap'),\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new OSM()\r\n                }),\r\n                vectorLayer\r\n            ],\r\n            view: new View({\r\n                center: fromLonLat(coordinates),\r\n                zoom: 16,\r\n                min: 4,\r\n                max: 20\r\n            }),\r\n        })\r\n\r\n        m.on('singleclick', (event) => {\r\n            let newCoordinates = event.coordinate;\r\n            let transformed = transform(newCoordinates, \"EPSG:3857\", \"EPSG:4326\");\r\n            locationPoint.getGeometry().setCoordinates(transformed)\r\n            let callString = \"https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=\"\r\n                + transformed[1] + \"&lon=\" + transformed[0];\r\n            setCoordinates(transformed)\r\n            setNewLocation(callString);\r\n        });\r\n\r\n        setMap(m)\r\n    }\r\n\r\n    const setNewLocation = (callString) => {\r\n        axios\r\n            .get(callString)\r\n            .then((response) => {\r\n                let jsonData = response.data;\r\n\r\n                parseJsonData(jsonData);\r\n            });\r\n    }\r\n\r\n    const parseJsonData = (data) => {\r\n        let addressData = data[\"address\"]\r\n\r\n        let l = {\r\n            \"longitude\": data ? data[\"lon\"] : \"\",\r\n            \"latitude\": data ? data[\"lat\"] : \"\",\r\n        };\r\n\r\n        let a = {\r\n            \"city\": addressData ? addressData[\"city\"] : \"\",\r\n            \"street\": addressData ? `${addressData[\"road\"]} ${addressData[\"house_number\"]}` : \"\",\r\n            \"country\": addressData ? addressData[\"country\"] : \"\",\r\n            \"location\": l\r\n        };\r\n\r\n        onChange(a)\r\n\r\n        setLocation(l)\r\n        setAddress(a)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row h-100 w-100 mt-4\">\r\n                <div className=\"col-lg-12\" style={{ height: '300px', width: '500px' }}>\r\n                    <div className=\"h-100 w-100\" id=\"pharmacyMap\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row w-100 mt-4\">\r\n                <div className=\"col-lg-6\">\r\n                    <label for=\"longPharmacy\">Longitude</label>\r\n                    <input className=\"form-control\" id=\"longPharmacy\" value={location.longitude} defaultValue={defAddress ? defAddress.location.longitude : \"\"} disabled />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <label for=\"latPharmacy\">Latitude</label>\r\n                    <input className=\"form-control\" id=\"latPharmacy\" value={location.latitude} defaultValue={defAddress ? defAddress.location.latitude : \"\"} disabled />\r\n                </div>\r\n            </div>\r\n            <div className=\"row w-100 mt-4\">\r\n                <div className=\"col-lg-4\">\r\n                    <label for=\"streetPharmacy\">Street</label>\r\n                    <input className=\"form-control\" id=\"streetPharmacy\" value={address.street} defaultValue={defAddress ? defAddress.street : \"\"} disabled />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <label for=\"cityPharmacy\">City</label>\r\n                    <input className=\"form-control\" id=\"cityPharmacy\" value={address.city} defaultValue={defAddress ? defAddress.city : \"\"} disabled />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <label for=\"countryPharmacy\">Country</label>\r\n                    <input className=\"form-control\" id=\"countryPharmacy\" value={address.country} defaultValue={defAddress ? defAddress.country : \"\"} disabled />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\nimport Location from \"../utilComponents/Location\";\r\n\r\nfunction AddPharmacyModal(props) {\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [address, setAddress] = useState({});\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { name, description } = form;\r\n    const { city, street, country } = address;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!name || name === \"\") newErrors.name = \"Name cannot be blank!\";\r\n    else if (name.length > 40) newErrors.name = \"Name is too long!\";\r\n    // Description errors\r\n    if (!description || description === \"\")\r\n      newErrors.description = \"Description cannot be blank!\";\r\n    else if (description.length > 60)\r\n      newErrors.description = \"Description is too long!\";\r\n    // City errors\r\n    if (!city || city === \"\") newErrors.city = \"City cannot be blank!\";\r\n    else if (city.length > 40) newErrors.city = \"City name is too long!\";\r\n    // Street errors\r\n    if (!street || street === \"\") newErrors.street = \"Street cannot be blank!\";\r\n    else if (street.length > 60) newErrors.street = \"Street name is too long!\";\r\n    // Country errors\r\n    if (!country || country === \"\")\r\n      newErrors.country = \"Country cannot be blank!\";\r\n    else if (country.length > 40)\r\n      newErrors.country = \"Country name is too long!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n    } else {\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    let data = convertForm();\r\n    axios\r\n      .post(\"/api/pharmacy/\", data)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let data = {};\r\n    data.name = form.name;\r\n    data.description = form.description;\r\n    data.address = address;\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add new pharmacy\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              isInvalid={!!errors.name}\r\n              onChange={(e) => setField(\"name\", e.target.value)}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"pharmacyDescription\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              isInvalid={!!errors.description}\r\n              onChange={(e) => setField(\"description\", e.target.value)}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.description}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Points for appointment</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) =>\r\n                setField(\"pointsForAppointment\", event.target.value)\r\n              }\r\n              defaultValue={0}\r\n              min={0}\r\n              max={100.0}\r\n              step={0.01}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Location onChange={(address) => setAddress(address)}></Location>\r\n\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Pharmacy added successfully.\"\r\n      >\r\n        {\" \"}\r\n      </SuccessModal>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddPharmacyModal;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\nimport Location from \"../utilComponents/Location\";\r\n\r\nfunction EditPharmacyModal(props) {\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [address, setAddress] = useState({});\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const showHandler = () => {\r\n    let defaultForm = {\r\n      name: props.pharmacy.name,\r\n      description: props.pharmacy.description,\r\n    };\r\n    setAddress(props.pharmacy.address);\r\n    setForm(defaultForm);\r\n    findFormErrors();\r\n  };\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { name, description, location } = form;\r\n    const { city, street, country } = address;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!name || name === \"\") newErrors.name = \"Name cannot be blank!\";\r\n    else if (name.length > 40) newErrors.name = \"Name is too long!\";\r\n    // Description errors\r\n    if (!description || description === \"\")\r\n      newErrors.description = \"Description cannot be blank!\";\r\n    else if (description.length > 180)\r\n      newErrors.description = \"Description is too long!\";\r\n    // City errors\r\n    if (!city || city === \"\") newErrors.city = \"City cannot be blank!\";\r\n    else if (city.length > 40) newErrors.city = \"City name is too long!\";\r\n    // Street errors\r\n    if (!street || street === \"\") newErrors.street = \"Street cannot be blank!\";\r\n    else if (street.length > 60) newErrors.street = \"Street name is too long!\";\r\n    // Country errors\r\n    if (!country || country === \"\")\r\n      newErrors.country = \"Country cannot be blank!\";\r\n    else if (country.length > 40)\r\n      newErrors.country = \"Country name is too long!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n    } else {\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    let data = convertForm();\r\n    console.log(data);\r\n    axios\r\n      .put(\"/api/pharmacy/\" + props.pharmacy.id, data)\r\n      .then(() => {\r\n        setForm({});\r\n        setShowSuccessModal(true);\r\n        props.onSuccess();\r\n        props.onHide();\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let data = {};\r\n    data.id = props.pharmacy.id;\r\n    data.name = form.name;\r\n    data.description = form.description;\r\n    data.pointsForAppointment = form.pointsForAppointment;\r\n    data.address = address;\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit pharmacy\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              defaultValue={props.pharmacy.name}\r\n              isInvalid={!!errors.name}\r\n              onChange={(e) => setField(\"name\", e.target.value)}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"pharmacyDescription\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              defaultValue={props.pharmacy.description}\r\n              isInvalid={!!errors.description}\r\n              onChange={(e) => setField(\"description\", e.target.value)}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.description}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Points for appointment</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) =>\r\n                setField(\"pointsForAppointment\", event.target.value)\r\n              }\r\n              defaultValue={props.pharmacy.pointsForAppointment}\r\n              min={0}\r\n              max={100.0}\r\n              step={0.01}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Location\r\n            onChange={(address) => setAddress(address)}\r\n            defAddress={props.pharmacy.address}\r\n          ></Location>\r\n\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Pharmacy updated successfully.\"\r\n      >\r\n        {\" \"}\r\n      </SuccessModal>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditPharmacyModal;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Row, Table } from \"react-bootstrap\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\nimport AddPharmacyModal from \"./AddPharmacyModal\";\r\nimport EditPharmacyModal from \"./EditPharmacyModal\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nfunction PharmacyTable(props) {\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\"/api/pharmacy/crud\");\r\n      setPharmacies(response.data);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const deletePharmacy = () => {\r\n    axios\r\n      .delete(\"/api/pharmacy/\" + selected.id)\r\n      .then(() => {\r\n        reloadTable();\r\n        setShowDeleteModal(false);\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const updateSelected = (selectedPharmacy) => {\r\n    setSelected(selectedPharmacy);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\" }}>\r\n      <Row className=\"justify-content-md-between\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddModal(true)}\r\n        >\r\n          Add new pharmacy\r\n        </Button>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Descriptioin</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pharmacies.map((pharmacy) => (\r\n            <tr onClick={() => updateSelected(pharmacy)} key={pharmacy.id}>\r\n              <td>{pharmacy.name}</td>\r\n              <td>{pharmacy.description}</td>\r\n              <td>\r\n                <Button onClick={() => setShowEditModal(true)}>Edit</Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => setShowDeleteModal(true)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <AddPharmacyModal\r\n        show={showAddModal}\r\n        onHide={() => setShowAddModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n      <EditPharmacyModal\r\n        show={showEditModal}\r\n        pharmacy={selected}\r\n        onHide={() => setShowEditModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n      <DeleteModal\r\n        title={\"Remove \" + selected.name}\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        onDelete={deletePharmacy}\r\n      />\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Pharmacy deleted successfully.\"\r\n      ></SuccessModal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PharmacyTable;\r\n","import React from 'react'\r\n\r\nconst PharmacySearchPanel = props => {\r\n    return (\r\n        <div>\r\n            Pharmacy search panel\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PharmacySearchPanel\r\n","import React from 'react'\r\nimport PharmacyTable from './PharmacyTable'\r\nimport PharmacySearchPanel from './PharmacySearchPanel'\r\n\r\nconst PharmacyCrud = props => {\r\n    return (\r\n        <div>\r\n            <PharmacySearchPanel></PharmacySearchPanel>\r\n            <PharmacyTable> </PharmacyTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PharmacyCrud\r\n","import React from 'react'\r\n\r\nfunction MedicineSearchPanel() {\r\n    return (\r\n        <div>\r\n            Medicine search panel\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicineSearchPanel","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst MedicineRow = ({\r\n  medicine,\r\n  onClick,\r\n  editClick,\r\n  detailsClick,\r\n  deleteClick,\r\n}) => {\r\n  return (\r\n    <tr onClick={onClick} key={medicine.id}>\r\n      <td>{medicine.name}</td>\r\n      <td>{medicine.code}</td>\r\n      <td>{medicine.content}</td>\r\n      <td>\r\n        <Button onClick={editClick}>Edit</Button>\r\n        <Button\r\n          variant=\"info\"\r\n          onClick={() =>\r\n            window.open(`/api/medicine/${medicine.id}/get-pdf`, \"_blank\")\r\n          }\r\n        >\r\n          {\" \"}\r\n          Details\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={deleteClick}>\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default MedicineRow;\r\n","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction MedicineNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Medicine Name\"}\r\n            placeholder={\"Enter medicine name...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default MedicineNameFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction MedicineCodeFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Medicine Code\"}\r\n            placeholder={\"Enter medicine code...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default MedicineCodeFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction MedicineContentFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Medicine Content\"}\r\n            placeholder={\"Enter medicine content...\"}\r\n            minLength={1}\r\n            maxLength={100}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default MedicineContentFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction SideEffectsFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Side effects\"}\r\n            placeholder={\"Enter side effects...\"}\r\n            minLength={1}\r\n            maxLength={50}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default SideEffectsFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction AdditionalNotesFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Additional notes\"}\r\n            placeholder={\"Additional notes...\"}\r\n            minLength={1}\r\n            maxLength={150}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default AdditionalNotesFormGroup","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport MedicineNameFormGroup from \"../utilComponents/medicineFormGroups/MedicineNameFromGroup\";\r\nimport MedicineCodeFormGroup from \"../utilComponents/medicineFormGroups/MedicineCodeFormGroup\";\r\nimport MedicineContentFormGroup from \"../utilComponents/medicineFormGroups/MedicineContentFormGroup\";\r\nimport SideEffectsFormGroup from \"../utilComponents/medicineFormGroups/SideEffectsFormGroup\";\r\nimport AdditionalNotesFormGroup from \"../utilComponents/medicineFormGroups/AdditionalNotesFormGroup\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nfunction AddMedicineModal(props) {\r\n  // TODO add default value\r\n  const [form, setForm] = useState({});\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const f = event.currentTarget;\r\n\r\n    if (f.checkValidity() === true) {\r\n      setValidated(true);\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    axios\r\n      .post(\"/api/medicine/\", form)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add new medicine\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <MedicineNameFormGroup\r\n            onChange={(event) => setField(\"name\", event.target.value)}\r\n          />\r\n          <MedicineCodeFormGroup\r\n            onChange={(event) => setField(\"code\", event.target.value)}\r\n          />\r\n          <MedicineContentFormGroup\r\n            onChange={(event) => setField(\"content\", event.target.value)}\r\n          />\r\n          <SideEffectsFormGroup\r\n            onChange={(event) => setField(\"sideEffects\", event.target.value)}\r\n          />\r\n\r\n          <Form.Group controlId=\"userTypeSelect\">\r\n            <Form.Label>Recipe Required</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(event) =>\r\n                setField(\"recipeRequired\", event.target.value)\r\n              }\r\n            >\r\n              <option value=\"REQUIRED\">Required</option>\r\n              <option value=\"NOTREQUIRED\">Not required</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"userTypeSelect\">\r\n            <Form.Label>Daily Intake</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setField(\"dailyIntake\", event.target.value)}\r\n              step=\"0.1\"\r\n              min=\"0\"\r\n              max=\"10\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Points</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setField(\"points\", event.target.value)}\r\n              defaultValue={0}\r\n              min={0}\r\n              max={100.0}\r\n              step={0.01}\r\n            />\r\n          </Form.Group>\r\n\r\n          <AdditionalNotesFormGroup\r\n            onChange={(event) =>\r\n              setField(\"additionalNotes\", event.target.value)\r\n            }\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Medicine added successfully.\"\r\n      >\r\n        {\" \"}\r\n      </SuccessModal>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddMedicineModal;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport MedicineNameFormGroup from \"../utilComponents/medicineFormGroups/MedicineNameFromGroup\";\r\nimport MedicineCodeFormGroup from \"../utilComponents/medicineFormGroups/MedicineCodeFormGroup\";\r\nimport MedicineContentFormGroup from \"../utilComponents/medicineFormGroups/MedicineContentFormGroup\";\r\nimport SideEffectsFormGroup from \"../utilComponents/medicineFormGroups/SideEffectsFormGroup\";\r\nimport AdditionalNotesFormGroup from \"../utilComponents/medicineFormGroups/AdditionalNotesFormGroup\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nfunction EditMedicineModal(props) {\r\n  const [form, setForm] = useState({});\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const f = event.currentTarget;\r\n\r\n    if (f.checkValidity() === true) {\r\n      setValidated(true);\r\n      sendPutRequest();\r\n    }\r\n  };\r\n\r\n  const sendPutRequest = () => {\r\n    axios\r\n      .put(\"/api/medicine/\" + props.medicine.id, form)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit {props.medicine.name}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <MedicineNameFormGroup\r\n            onChange={(event) => setField(\"name\", event.target.value)}\r\n            defaultValue={!!props.medicine.code ? props.medicine.code : \"\"}\r\n          />\r\n          <MedicineCodeFormGroup\r\n            onChange={(event) => setField(\"code\", event.target.value)}\r\n            defaultValue={!!props.medicine.name ? props.medicine.name : \"\"}\r\n          />\r\n          <MedicineContentFormGroup\r\n            onChange={(event) => setField(\"content\", event.target.value)}\r\n            defaultValue={\r\n              !!props.medicine.content ? props.medicine.content : \"\"\r\n            }\r\n          />\r\n          <SideEffectsFormGroup\r\n            onChange={(event) => setField(\"sideEffects\", event.target.value)}\r\n            defaultValue={\r\n              !!props.medicine.sideEffects ? props.medicine.sideEffects : \"\"\r\n            }\r\n          />\r\n          <Form.Group controlId=\"userTypeSelect\">\r\n            <Form.Label>Recipe Required</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(event) =>\r\n                setField(\"recipeRequired\", event.target.value)\r\n              }\r\n              defaultValue={props.medicine.recipeRequired}\r\n            >\r\n              <option value=\"REQUIRED\">Required</option>\r\n              <option value=\"NOTREQUIRED\">Not required</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"userTypeSelect\">\r\n            <Form.Label>Daily Intake</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setField(\"dailyIntake\", event.target.value)}\r\n              step=\"0.1\"\r\n              min=\"0\"\r\n              max=\"10\"\r\n              defaultValue={props.medicine.dailyIntake}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Points</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setField(\"points\", event.target.value)}\r\n              defaultValue={props.medicine.points}\r\n              min={0}\r\n              max={100.0}\r\n              step={0.01}\r\n              defaultValue={props.medicine.dailyIntake}\r\n            />\r\n          </Form.Group>\r\n\r\n          <AdditionalNotesFormGroup\r\n            onChange={(event) =>\r\n              setField(\"additionalNotes\", event.target.value)\r\n            }\r\n            defaultValue={props.medicine.additionalNotes}\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Medicine updated successfully.\"\r\n      >\r\n        {\" \"}\r\n      </SuccessModal>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditMedicineModal;\r\n","import axios from \"../../app/api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Row, Table } from \"react-bootstrap\";\r\nimport MedicineRow from \"./MedicineRow\";\r\nimport AddMedicineModal from \"./AddMedicineModal\";\r\nimport EditMedicineModal from \"./EditMedicineModal\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nfunction MedicineTable() {\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [medicine, setMedicine] = useState([]);\r\n\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\"/api/medicine/crud\");\r\n      setMedicine(response.data);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const updateSelected = (selectedMedicine) => {\r\n    setSelected(selectedMedicine);\r\n  };\r\n\r\n  const deleteMedicine = () => {\r\n    axios\r\n      .delete(\"/api/medicine/\" + selected.id)\r\n      .then(() => {\r\n        reloadTable();\r\n        setShowDeleteModal(false);\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\" }} className=\"justify-content-center\">\r\n      <Row className=\"justify-content-md-between\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddModal(true)}\r\n        >\r\n          Add new medicine\r\n        </Button>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Code</th>\r\n            <th>Ingredients</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {medicine.map((medi) => (\r\n            <MedicineRow\r\n              key={medi.id}\r\n              medicine={medi}\r\n              onClick={() => updateSelected(medi)}\r\n              editClick={() => setShowEditModal(true)}\r\n              deleteClick={() => setShowDeleteModal(true)}\r\n            ></MedicineRow>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <AddMedicineModal\r\n        show={showAddModal}\r\n        onHide={() => setShowAddModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n      <DeleteModal\r\n        title={\"Remove \" + selected.name}\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        onDelete={deleteMedicine}\r\n      />\r\n      <EditMedicineModal\r\n        show={showEditModal}\r\n        medicine={selected}\r\n        onHide={() => setShowEditModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"Medicine deleted successfully.\"\r\n      ></SuccessModal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MedicineTable;\r\n","import React from 'react'\r\nimport MedicineSearchPanel from \"./MedicineSearchPanel\"\r\nimport MedicineTable from \"./MedicineTable\"\r\n\r\nconst MedicineCrud = () => {\r\n    return (\r\n        <div>\r\n            <MedicineSearchPanel> </MedicineSearchPanel>\r\n            <MedicineTable> </MedicineTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicineCrud\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport api from \"../../app/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentsModal(props) {\r\n  // id usera, id workera, bool farmaceut, name\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const showHandler = () => {\r\n    async function fetchAppointments() {\r\n      let bodyFormData = new FormData();\r\n      bodyFormData.append(\"patient\", props?.info.patient);\r\n      bodyFormData.append(\"worker\", props?.info.worker);\r\n      const request = axios\r\n        .post(\"/api/appointment/byPatWorker\", bodyFormData)\r\n        .then((resp) => setAppointments(resp.data))\r\n        .catch(() => setAppointments([]));\r\n      return request;\r\n    }\r\n    fetchAppointments();\r\n  };\r\n\r\n  const onStart = (appt) => {\r\n    if (!(moment(Date.now()) > moment(appt.start).subtract(15, \"minutes\"))) {\r\n      // ne moze da se krene vise od 15 min ranije\r\n      addToast(\"You can't start this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", appt.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/start_appointment\", bodyFormData)\r\n      .then(() => {\r\n        history.push({\r\n          pathname: \"/worker/appointment_report\",\r\n          state: {\r\n            // location state\r\n            appointmentID: appt.id,\r\n          },\r\n        });\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't start this appointment yet!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  const onCancelAppointment = () => {\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"patient\", props?.info.patient);\r\n    bodyFormData.append(\"worker\", props?.info.worker);\r\n    axios\r\n      .post(\"/api/appointment/byPatWorker\", bodyFormData)\r\n      .then((resp) => setAppointments(resp.data))\r\n      .catch(() => setAppointments([]));\r\n  };\r\n\r\n  const onCancel = (appt) => {\r\n    if (!(moment(Date.now()) > moment(appt.start).add(5, \"minutes\"))) {\r\n      // ne moze da se cancelluje pre 5 min od pocetka\r\n      addToast(\"You can't cancel this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", appt.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/cancel_appointment\", bodyFormData)\r\n      .then(() => {\r\n        addToast(\"Appointment cancelled! Patient didn't show up!\", {\r\n          appearance: \"info\",\r\n        });\r\n        onCancelAppointment();\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't cancel this appointment yet!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n      onHide={() => {\r\n        props.onCloseModal();\r\n        setAppointments([]);\r\n      }}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Your upcomming appointments for {props.info.patientName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          {appointments.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>No result!</h3>\r\n            </Row>\r\n          )}\r\n\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center m-5 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid>\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        Date:{\" \"}\r\n                        <Moment format=\"DD/MM/yyyy HH:mm\">{value.start}</Moment>\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        {getUserTypeFromToken().trim() === \"DERMATOLOGIST\" && (\r\n                          <div>Pharmacy: {value.pharmacy} </div>\r\n                        )}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                      <ButtonGroup>\r\n                        <Button onClick={() => onStart(value)}>\r\n                          Start appointment\r\n                        </Button>\r\n                        <Button onClick={() => onCancel(value)}>\r\n                          Patient didn't show up\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Card.Footer>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppointmentsModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport AppointmentsModal from \"./appointments_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction SearchPatPage() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [patient, setPatient] = useState({}); //appointments of currently picked patient\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currFetchState, setCurrFetchState] = useState(\"Loading...\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPatients() {\r\n      await api\r\n        .get(\"/api/patients/all\")\r\n        .then((resp) => setPatients(resp.data))\r\n        .catch(() => setPatients([]));\r\n    }\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n    setCurrFetchState(\"Loading...\");\r\n    if (fName.length === 0 && lName.length === 0) {\r\n      api\r\n        .get(\"/api/patients/all\")\r\n        .then((resp) => {\r\n          setPatients(resp.data);\r\n          if (resp.data.length === 0) {\r\n            setCurrFetchState(\"No result!\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setPatients([]);\r\n          setCurrFetchState(\"No result!\");\r\n        });\r\n    } else {\r\n      api\r\n        .get(\"/api/patients/search\", {\r\n          params: { firstName: fName, lastName: lName },\r\n        })\r\n        .then((resp) => {\r\n          setPatients(resp.data);\r\n          if (resp.data.length === 0) {\r\n            setCurrFetchState(\"No result!\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setPatients([]);\r\n          setCurrFetchState(\"No result!\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    setCurrFetchState(\"Loading...\");\r\n    api\r\n      .get(\"/api/patients/all\")\r\n      .then((resp) => {\r\n        setPatients(resp.data);\r\n        if (resp.data.length === 0) {\r\n          setCurrFetchState(\"No result!\");\r\n        }\r\n      })\r\n      .catch(() => setPatients([]));\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n  };\r\n\r\n  const onShowAppointmentsButton = function (pat_to_show) {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      setPatients([]);\r\n      return;\r\n    }\r\n    setPatient({\r\n      patient: pat_to_show?.email,\r\n      worker: id,\r\n      patientName: pat_to_show?.firstName + \" \" + pat_to_show?.lastName,\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setPatient({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 pb-3 pl-3 pr-3 align-items-center\">\r\n        <h4 className=\"my_content_header\">Search for registered patients</h4>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center m-3\">\r\n        <Form onSubmit={formSearch}>\r\n          <Form.Group as={Row} className=\"align-items-center search_field\">\r\n            <Form.Label> First name: </Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={fName}\r\n                onChange={(e) => setFName(e.target.value)}\r\n                placeholder=\"Enter first name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Form.Label> Last name: </Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lName}\r\n                onChange={(e) => setLName(e.target.value)}\r\n                placeholder=\"Enter last name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <ButtonGroup size=\"sm\">\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Search{\" \"}\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={resetSearch}>\r\n                  {\" \"}\r\n                  Reset search{\" \"}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Row>\r\n      <Row className=\"justify-content-center mt-3 ml-3 mr-3 pb-3\">\r\n        <Col md={6}>\r\n          {patients.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>{currFetchState}</h3>\r\n            </Row>\r\n          )}\r\n\r\n          {patients.map((value, index) => {\r\n            console.log(value);\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center m-5 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {value.firstName + \" \" + value.lastName}{\" \"}\r\n                      </Card.Title>\r\n                      <Card.Footer className=\"justify-content-right\">\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                          <Button\r\n                            variant=\"secondary\"\r\n                            onClick={() => onShowAppointmentsButton(value)}\r\n                          >\r\n                            Upcomming appointments with{\" \"}\r\n                            {value.firstName + \" \" + value.lastName}\r\n                          </Button>\r\n                        </Row>\r\n                      </Card.Footer>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <AppointmentsModal\r\n        show={showModal}\r\n        info={patient}\r\n        onCloseModal={closeModal}\r\n      ></AppointmentsModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPatPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Modal,\r\n  ButtonGroup,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport AppointmentsModal from \"./appointments_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/worker.css\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction SearchExaminedPatPage() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [patient, setPatient] = useState({}); //appointments of currently picked patient\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const [sort1, setSort1] = useState(\"none\");\r\n  const [sort2, setSort2] = useState(\"none\");\r\n  const [sort3, setSort3] = useState(\"none\");\r\n  const [sortWay1, setSortWay1] = useState(\"asc\");\r\n  const [sortWay2, setSortWay2] = useState(\"asc\");\r\n  const [sortWay3, setSortWay3] = useState(\"asc\");\r\n\r\n  const [currUserType, setCurrUserType] = useState(\"PHARMACIST\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPatients() {\r\n      let id = getIdFromToken();\r\n      if (!id) {\r\n        addToast(\"Token error!\", { appearance: \"error\" });\r\n        setPatients([]);\r\n        return;\r\n      }\r\n      let user_type = getUserTypeFromToken().trim();\r\n      if (user_type !== \"DERMATOLOGIST\" && user_type !== \"PHARMACIST\") {\r\n        addToast(\"Invalid user type!\", { appearance: \"error\" });\r\n        return;\r\n      }\r\n      setCurrUserType(user_type);\r\n      const request = await api\r\n        .get(\"/api/patients/getAllExaminedPatients?workerID=\" + id)\r\n        .then((resp) => setPatients(resp.data))\r\n        .catch(setPatients([]));\r\n      return request;\r\n    }\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      setPatients([]);\r\n      return;\r\n    }\r\n    let search_params = new URLSearchParams();\r\n    if (fName.length != 0) {\r\n      search_params.append(\"firstName\", fName);\r\n    }\r\n    if (lName.length != 0) {\r\n      search_params.append(\"firstName\", lName);\r\n    }\r\n    if (startDate) {\r\n      search_params.append(\"lowerTime\", Math.floor(startDate.getTime()));\r\n    }\r\n    if (endDate) {\r\n      if (startDate) {\r\n        if (startDate.getTime() >= endDate.getTime()) {\r\n          addToast(\"Invalid date params!\", { appearance: \"error\" });\r\n          return;\r\n        }\r\n      }\r\n      search_params.append(\"upperTime\", Math.floor(endDate.getTime()));\r\n    }\r\n\r\n    if (sort1 !== \"none\" && (sort1 === sort2 || sort1 === sort3)) {\r\n      addToast(\"Invalid sort params!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (sort2 !== \"none\" && (sort2 === sort1 || sort2 == sort3)) {\r\n      addToast(\"Invalid sort params!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    console.log(sort1 + \" \" + sortWay1);\r\n\r\n    if (sort1 !== \"none\") {\r\n      search_params.append(\"sort\", sort1 + \",\" + sortWay1);\r\n    }\r\n\r\n    if (sort2 !== \"none\") {\r\n      search_params.append(\"sort\", sort2 + \",\" + sortWay2);\r\n    }\r\n\r\n    if (sort3 !== \"none\") {\r\n      search_params.append(\"sort\", sort3 + \",\" + sortWay3);\r\n    }\r\n    search_params.append(\"workerID\", id);\r\n\r\n    api\r\n      .get(\"/api/patients/getExaminedPatients\", { params: search_params })\r\n      .then((resp) => setPatients(resp.data))\r\n      .catch(setPatients([]));\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      setPatients([]);\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/patients/getAllExaminedPatients?workerID=\" + id)\r\n      .then((resp) => setPatients(resp.data))\r\n      .catch(() => setPatients([]));\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setSort1(\"none\");\r\n    setSortWay1(\"asc\");\r\n    setSort2(\"none\");\r\n    setSortWay2(\"asc\");\r\n    setSort3(\"none\");\r\n    setSortWay3(\"asc\");\r\n  };\r\n\r\n  return (\r\n    //todo mozda hide dugme\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"pt-5 justify-content-center\">\r\n        <h4 className=\"my_content_header\">Search examined patients</h4>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center align-items-center\">\r\n        <Form onSubmit={formSearch} className=\"search_field\">\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"justify-content-center mt-3 pl-3 pr-3 mb-3 align-items-center\"\r\n          >\r\n            <Col>\r\n              <Form.Label>First name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={fName}\r\n                onChange={(e) => setFName(e.target.value)}\r\n                placeholder=\"Enter first name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Label>Last name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lName}\r\n                onChange={(e) => setLName(e.target.value)}\r\n                placeholder=\"Enter last name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Label>Date from:</Form.Label>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={startDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setStartDate(date)}\r\n                isClearable\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Label>Date to:</Form.Label>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={endDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setEndDate(date)}\r\n                isClearable\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"justify-content-center mt-3 pl-3 pr-3 mb-3\"\r\n          >\r\n            <Col>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Sort by:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sort1}\r\n                  onChange={(event) => setSort1(event.target.value)}\r\n                  name=\"sort1\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"firstName\">first name</option>\r\n                  <option value=\"lastName\">last name</option>\r\n                  <option value=\"startTime\">date</option>\r\n                </Form.Control>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sortWay1}\r\n                  onChange={(event) => setSortWay1(event.target.value)}\r\n                  name=\"sortWay1\"\r\n                  selected=\"asc\"\r\n                >\r\n                  <option value=\"asc\">ascending</option>\r\n                  <option value=\"desc\">descending</option>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>then by:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sort2}\r\n                  onChange={(event) => setSort2(event.target.value)}\r\n                  name=\"sort1\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"firstName\">first name</option>\r\n                  <option value=\"lastName\">last name</option>\r\n                  <option value=\"startTime\">date</option>\r\n                </Form.Control>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sortWay2}\r\n                  onChange={(event) => setSortWay2(event.target.value)}\r\n                  name=\"sortWay2\"\r\n                  selected=\"asc\"\r\n                >\r\n                  <option value=\"asc\">ascending</option>\r\n                  <option value=\"desc\">descending</option>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>then by:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sort3}\r\n                  onChange={(event) => setSort3(event.target.value)}\r\n                  name=\"sort1\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"firstName\">first name</option>\r\n                  <option value=\"lastName\">last name</option>\r\n                  <option value=\"startTime\">date</option>\r\n                </Form.Control>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sortWay3}\r\n                  onChange={(event) => setSortWay3(event.target.value)}\r\n                  name=\"sortWay2\"\r\n                  selected=\"asc\"\r\n                >\r\n                  <option value=\"asc\">ascending</option>\r\n                  <option value=\"desc\">descending</option>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"justify-content-center mt-3 pl-3 pr-3 mb-3\"\r\n          >\r\n            <Col md=\"auto\">\r\n              <ButtonGroup>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Search{\" \"}\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={resetSearch}>\r\n                  {\" \"}\r\n                  Reset search{\" \"}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center mt-3 ml-3 mr-3 pb-3\">\r\n        <Col md={8}>\r\n          {patients.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>No result!</h3>\r\n            </Row>\r\n          )}\r\n\r\n          {patients.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center m-5 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {value.firstName + \" \" + value.lastName}{\" \"}\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        {\"Last appointment: \" +\r\n                          moment(value.appointmentStart).format(\r\n                            \"DD MMM YYYY hh:mm a\"\r\n                          )}{\" \"}\r\n                      </Card.Text>\r\n                      {currUserType === \"DERMATOLOGIST\" && (\r\n                        <Card.Text>At pharmacy: {value.pharmacy} </Card.Text>\r\n                      )}\r\n                      {/*izmeni ovaj deo da kasnije bude da se prikazu svi sastanci*/}\r\n                      {/* <Button variant=\"secondary\" onClick={() => onShowAppointmentsButton(value)}> Upcomming appointments </Button> */}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <AppointmentsModal\r\n        show={showModal}\r\n        info={patient}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setPatient({});\r\n        }}\r\n      ></AppointmentsModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchExaminedPatPage;\r\n","import React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AdminHeader = ({ userChanged }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/users\">\r\n            Users\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/pharmacies\">\r\n            Pharmacies\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/medicine\">\r\n            Medicine\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/admin/complaint-responses\"\r\n          >\r\n            Complaints\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/loyalty\">\r\n            Loyalty Program\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/profile\">\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst UnregistredHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"my__navbar justify-content-between\"\r\n      sticky=\"top\"\r\n      expand=\"lg\"\r\n    >\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n      <Nav className=\"justify-content-end\">\r\n        <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/registration\">\r\n          Register\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/login\">\r\n          Log In\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default UnregistredHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\n\r\nconst PatientHeader = () => {\r\n  const [penalties, setPenalties] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchPenalties() {\r\n      const request = await axios.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/penalties\"\r\n      );\r\n      setPenalties(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchPenalties();\r\n  }, {});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/reserve-consultation/pharmacies\"\r\n          >\r\n            Reserve consultation\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/consultations-insight\"\r\n          >\r\n            Consultations\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/checkups-insight\">\r\n            Checkups\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/user/complaints\">\r\n            Complaints\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/subscribed-pharmacies\"\r\n          >\r\n            Subscribed pharmacies\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/reserved-medicines\"\r\n          >\r\n            Reserved medicines\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/rating\">\r\n            Rating\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{\r\n              display: penalties === 3 ? \"none\" : \"block\",\r\n              color: \"white\",\r\n            }}\r\n            to=\"/e-prescription\"\r\n          >\r\n            E-Prescription\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/profile\">\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PatientHeader;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst SupplierHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"my__navbar justify-content-between\"\r\n      sticky=\"top\"\r\n      expand=\"lg\"\r\n    >\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n      <Nav>\r\n        <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/infoProfile\">\r\n          Profile\r\n        </Nav.Link>\r\n        <Nav.Link\r\n          as={Link}\r\n          style={{ color: \"white\" }}\r\n          to=\"/\"\r\n          onClick={() => handleLogout()}\r\n        >\r\n          Log out\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default SupplierHeader;\r\n","import React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst PharmacyAdminHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/infoProfile\">\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PharmacyAdminHeader;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DermatologistHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/search-patients\"\r\n          >\r\n            Search patients\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/calendar\">\r\n            Work Calendar\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/examined\">\r\n            Examined patients\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/vacation\">\r\n            Vacation\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/dermatologist_profile\"\r\n          >\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default DermatologistHeader;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst PharmacistHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/search-patients\"\r\n          >\r\n            Search patients\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/issue_medicine\"\r\n          >\r\n            Issue medicine\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/calendar\">\r\n            Work Calendar\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/examined\">\r\n            Examined patients\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/vacation\">\r\n            Vacation\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/pharmacist_profile\"\r\n          >\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PharmacistHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminHeader from \"./AdminHeader\";\r\nimport UnregistredHeader from \"./UnregistredHeader\";\r\nimport PatientHeader from \"./PatientHeader\";\r\nimport SupplierHeader from \"./SupplierHeader\";\r\nimport PharmacyAdminHeader from \"./PharmacyAdminHeader\";\r\nimport DermatologistHeader from \"./DermatologistHeader\";\r\nimport PharmacistHeader from \"./PharmacistHeader\";\r\nimport { getUserTypeFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CommonHeader = () => {\r\n  const user = useSelector((state) => state.user);\r\n  let userType = getUserTypeFromToken();\r\n  useEffect(() => {\r\n    userType = getUserTypeFromToken();\r\n  }, [user]);\r\n\r\n  let header;\r\n  switch (userType) {\r\n    case \"ADMIN\":\r\n      header = <AdminHeader></AdminHeader>;\r\n      break;\r\n    case \"PHARMACIST\":\r\n      header = <PharmacistHeader></PharmacistHeader>;\r\n      break;\r\n    case \"DERMATOLOGIST\":\r\n      header = <DermatologistHeader></DermatologistHeader>;\r\n      break;\r\n    case \"SUPPLIER\":\r\n      header = <SupplierHeader></SupplierHeader>;\r\n      break;\r\n    case \"PATIENT\":\r\n      header = <PatientHeader></PatientHeader>;\r\n      break;\r\n    case \"PHARMACY_ADMIN\":\r\n      header = <PharmacyAdminHeader></PharmacyAdminHeader>;\r\n      break;\r\n    default:\r\n      header = <UnregistredHeader></UnregistredHeader>;\r\n      break;\r\n  }\r\n\r\n  return <div>{header}</div>;\r\n};\r\n\r\nexport default CommonHeader;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Container, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport moment from \"moment\";\r\n\r\nfunction AppointmentInfoModal(props) {\r\n  // prosledis appointment\r\n  const { addToast } = useToasts();\r\n  const [apptInfo, setApptInfo] = useState(null);\r\n\r\n  const showHandler = () => {\r\n    if (!props.appointment.id) return;\r\n\r\n    api\r\n      .get(\"/api/appointment/get_info/\" + props.appointment.id)\r\n      .then((resp) => {\r\n        setApptInfo(resp.data);\r\n      })\r\n      .catch(() =>\r\n        addToast(\"Error while fetching appointment info!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  const hideHandler = () => {\r\n    setApptInfo(null);\r\n    props.onHideFun();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n      onHide={hideHandler}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Appointment information\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      {apptInfo && (\r\n        <Modal.Body>\r\n          <Container>\r\n            <Col style={{ backgroundColor: \"#83CEC2\" }} className=\"p-2\">\r\n              <Row className=\"m-2\">-Patient: {apptInfo.patient}</Row>\r\n              <Row className=\"m-2\">-Pharmacy: {apptInfo.pharmacy}</Row>\r\n              <Row className=\"m-2\">-Price: {apptInfo.price}</Row>\r\n              <Row className=\"m-2\">\r\n                -Start time:{\" \"}\r\n                {moment(apptInfo.start).format(\"DD. MMM YYYY. HH:mm\")}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -End time: {moment(apptInfo.end).format(\"DD. MMM YYYY. HH:mm\")}\r\n              </Row>\r\n              <Row className=\"m-2\">-Info: {apptInfo.info}</Row>\r\n              {apptInfo.therapyDTOList.length > 0 && (\r\n                <div>\r\n                  <Row className=\"m-2\">-Therapy:</Row>\r\n                  {apptInfo.therapyDTOList.map((value, index) => {\r\n                    return (\r\n                      <Row className=\"ml-5 mt-1 mb-1\" key={index}>\r\n                        {value.code} - {value.medicineName} :{\" \"}\r\n                        {value.therapyLength} days\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Container>\r\n        </Modal.Body>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppointmentInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\r\nimport AppointmentStartModal from \"./appointment_start_modal\";\r\nimport AppointmentInfoModal from \"./appointment_info_modal\";\r\nimport moment from \"moment\";\r\nimport api from \"../../app/api\";\r\nimport \"../../styling/calendar.css\";\r\nimport tippy from \"tippy.js\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction WorkCalendar() {\r\n  const [eventi, setEventi] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalInfo, setShowModalInfo] = useState(false);\r\n  const [startAppt, setStartAppt] = useState({});\r\n  const [currUser, setCurrUser] = useState({});\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      let user_id = getIdFromToken();\r\n      let user_type = getUserTypeFromToken().trim();\r\n      console.log(user_type);\r\n      if (!user_id) {\r\n        addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n        setEventi([]);\r\n        return;\r\n      } else if (user_type !== \"DERMATOLOGIST\" && user_type !== \"PHARMACIST\") {\r\n        addToast(\"Invalid user type\", { appearance: \"error\" });\r\n        setEventi([]);\r\n        return;\r\n      }\r\n      setCurrUser({ id: user_id, type: user_type });\r\n      await api\r\n        .get(\"/api/workers/calendarAppointments/\" + user_id)\r\n        .then((resp) => {\r\n          let appts = resp.data;\r\n          api\r\n            .get(\"/api/vacation/getAcceptedVacationsFromWorker?id=\" + user_id)\r\n            .then((resp) => {\r\n              let reqVac = resp.data;\r\n              setEventi(appts.concat(reqVac));\r\n            })\r\n            .catch(() => {\r\n              setEventi(appts);\r\n              addToast(\"Error while getting vacations from server!\", {\r\n                appearance: \"error\",\r\n              });\r\n            });\r\n        })\r\n        .catch(() => {\r\n          setEventi([]);\r\n          addToast(\"Error while getting events!\", { appearance: \"error\" });\r\n        });\r\n    }\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const initiateAppt = (info) => {\r\n    if (info.event.extendedProps.calendarType !== \"appointment\") {\r\n      return;\r\n    }\r\n    if (info.event.extendedProps.appointmentState === \"FINISHED\") {\r\n      let appt = {}; //uga buga zbog id-a\r\n      for (var k in info.event.extendedProps) {\r\n        appt[k] = info.event.extendedProps[k];\r\n      }\r\n      appt.id = info.event.id;\r\n      setStartAppt(appt);\r\n      setShowModalInfo(true);\r\n      return;\r\n    }\r\n\r\n    if (info.event.extendedProps.appointmentState !== \"RESERVED\") {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !(\r\n        moment(Date.now()) >\r\n        moment(info.event.extendedProps.start).subtract(15, \"minutes\")\r\n      )\r\n    ) {\r\n      // nikako ga ne mozemo zapoceti vise od 15 minuta ranije\r\n      addToast(\"You can't initiate this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    let appt = {}; //uga buga zbog id-a\r\n    for (var k in info.event.extendedProps) {\r\n      appt[k] = info.event.extendedProps[k];\r\n    }\r\n    appt.id = info.event.id;\r\n    setStartAppt(appt);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCancelMethod = () => {\r\n    setShowModal(false);\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Invalid user!\", { appearance: \"error\" });\r\n      setEventi([]);\r\n      return;\r\n    }\r\n    //todo ovde probaj samo da promenis atribut bez opet gettovanja\r\n    api\r\n      .get(\"/api/workers/calendarAppointments/\" + id)\r\n      .then((resp) => {\r\n        let appts = resp.data;\r\n        api\r\n          .get(\"/api/vacation/getAcceptedVacationsFromWorker?id=\" + id)\r\n          .then((resp) => {\r\n            let reqVac = resp.data;\r\n            setEventi(appts.concat(reqVac));\r\n          })\r\n          .catch(() => setEventi(appts));\r\n      })\r\n      .catch(() => setEventi([]));\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container p-5\" style={{ minHeight: \"100vh\" }}>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, resourceTimelinePlugin]}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"WeekView,MonthView,YearView\",\r\n        }}\r\n        allDaySlot={false}\r\n        events={eventi}\r\n        initialView=\"MonthView\"\r\n        eventClick={initiateAppt}\r\n        views={{\r\n          WeekView: {\r\n            type: \"timeGrid\",\r\n            buttonText: \"Week View\",\r\n            duration: { weeks: 1 },\r\n            eventContent: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                return { html: \"<div>\" + propi.patient + \"</div>\" };\r\n              } else {\r\n                return { html: \"<div>\" + propi.absenceType + \"</div>\" };\r\n              }\r\n            },\r\n            eventDidMount: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                tippy(info.el, {\r\n                  allowHTML: true,\r\n                  content:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"HH:mm\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"HH:mm\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.patient +\r\n                    \"<br/>\" +\r\n                    (currUser.type === \"DERMATOLOGIST\"\r\n                      ? propi.pharmacy + \"<br/><i>\"\r\n                      : \"<i>\") +\r\n                    propi.appointmentState +\r\n                    \"</i></p></div>\",\r\n                });\r\n              } else {\r\n                info.event.setProp(\r\n                  \"backgroundColor\",\r\n                  \"rgba(20, 87, 97, 0.897)\"\r\n                );\r\n                tippy(info.el, {\r\n                  allowHTML: true,\r\n                  content:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"DD MMM\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"DD MMM\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.absenceType +\r\n                    \"</p></div>\",\r\n                });\r\n              }\r\n            },\r\n          },\r\n          MonthView: {\r\n            type: \"dayGrid\",\r\n            buttonText: \"Month View\",\r\n            duration: { months: 1 },\r\n            slotDuration: { days: 1 },\r\n            dayMaxEvents: 2,\r\n            eventContent: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                return {\r\n                  html:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"HH:mm\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"HH:mm\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.patient +\r\n                    \"<br/>\" +\r\n                    (currUser.type === \"DERMATOLOGIST\"\r\n                      ? propi.pharmacy + \"<br/><i>\"\r\n                      : \"<i>\") +\r\n                    propi.appointmentState +\r\n                    \"</i></p></div>\",\r\n                };\r\n              } else {\r\n                return {\r\n                  html:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"DD MMM\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"DD MMM\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.absenceType +\r\n                    \"</p></div>\",\r\n                };\r\n              }\r\n            },\r\n            eventDidMount: function (info) {\r\n              if (info.event.extendedProps.calendarType !== \"appointment\") {\r\n                info.event.setProp(\r\n                  \"backgroundColor\",\r\n                  \"rgba(20, 87, 97, 0.897)\"\r\n                );\r\n              }\r\n            },\r\n          },\r\n          YearView: {\r\n            type: \"timeline\",\r\n            buttonText: \"Year view\",\r\n            duration: { years: 1 },\r\n            slotDuration: { months: 1 },\r\n            visibleRange: {\r\n              start: moment().startOf(\"year\").toDate(),\r\n              end: moment().endOf(\"year\").toDate(),\r\n            },\r\n            eventContent: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                return {\r\n                  html:\r\n                    moment(info.event.start).format(\"DD/MM | HH:mm\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"HH:mm\") +\r\n                    \"<br/>\" +\r\n                    propi.patient +\r\n                    \"<br/>\" +\r\n                    (currUser.type === \"DERMATOLOGIST\"\r\n                      ? propi.pharmacy + \"<br/><i>\"\r\n                      : \"<i>\") +\r\n                    propi.appointmentState +\r\n                    \"</i>\",\r\n                };\r\n              } else {\r\n                return {\r\n                  html:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"DD MMM\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"DD MMM\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.absenceType +\r\n                    \"</p></div>\",\r\n                };\r\n              }\r\n            },\r\n            eventDidMount: function (info) {\r\n              if (info.event.extendedProps.calendarType !== \"appointment\") {\r\n                info.event.setProp(\r\n                  \"backgroundColor\",\r\n                  \"rgba(20, 87, 97, 0.897)\"\r\n                );\r\n              }\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <AppointmentInfoModal\r\n        show={showModalInfo}\r\n        appointment={startAppt}\r\n        onHideFun={() => {\r\n          setShowModalInfo(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentInfoModal>\r\n      <AppointmentStartModal\r\n        show={showModal}\r\n        onCancelMethod={onCancelMethod}\r\n        appointment={startAppt}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentStartModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkCalendar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nconst TherapyMedicineModal = (props) => {\r\n  const [singleSelection, setSingleSelection] = useState([]);\r\n  const [primaryOptions, setPrimaryOptions] = useState([]);\r\n  const [showHidePrimary, setShowHidePrimary] = useState(false);\r\n\r\n  const [alternativeSelection, setAlternativeSelection] = useState([]);\r\n  const [alternativeOptions, setAlternativeOptions] = useState([]);\r\n  const [showHideSecondary, setShowHideSecondary] = useState(false);\r\n\r\n  const [selectedMedicine, setSelectedMedicine] = useState(null);\r\n\r\n  const [alternativeError, setAlternativeError] = useState(false); //todo\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  const reset = () => {\r\n    setSingleSelection([]);\r\n    setPrimaryOptions([]);\r\n    setShowHidePrimary(false);\r\n    setAlternativeSelection([]);\r\n    setAlternativeOptions([]);\r\n    setShowHideSecondary(false);\r\n    setSelectedMedicine(null);\r\n    setAlternativeError(false);\r\n    setAmount(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicine() {\r\n      if (!props.appt) {\r\n        return;\r\n      }\r\n      let pharm_id = props.appt.pharmacyID;\r\n      let pat_id = props.appt.patientID;\r\n      const response = await api\r\n        .get(\r\n          \"/api/pharmacy/getMedicineFromPharmWithoutAllergies?pharm_id=\" +\r\n            pharm_id +\r\n            \"&patient_id=\" +\r\n            pat_id\r\n        )\r\n        .catch(() => {\r\n          addToast(\"No medicine to add to therapy!\", { appearance: \"error\" });\r\n          exitModal();\r\n        });\r\n      if (response.data.length === 0) {\r\n        addToast(\"No medicine to add to therapy!\", { appearance: \"error\" });\r\n        exitModal();\r\n      }\r\n      setPrimaryOptions(response.data);\r\n    }\r\n    fetchMedicine();\r\n  }, [props.clickedShow]);\r\n\r\n  const setAlternatives = (med_item_id, med_id) => {\r\n    if (!props.appt) {\r\n      return;\r\n    }\r\n    let worker_id = getIdFromToken();\r\n    if (!worker_id) {\r\n      return;\r\n    }\r\n    let pharm_id = props.appt.pharmacyID;\r\n    let pat_id = props.appt.patientID;\r\n    api\r\n      .get(\r\n        \"/api/pharmacy/getAlternativeFromPharmacy?worker_id=\" +\r\n          worker_id +\r\n          \"&pharm_id=\" +\r\n          pharm_id +\r\n          \"&patient_id=\" +\r\n          pat_id +\r\n          \"&medicine_item_id=\" +\r\n          med_item_id +\r\n          \"&medicine_id=\" +\r\n          med_id\r\n      )\r\n      .then((resp) => {\r\n        if (resp.data.length == 0) {\r\n          setAlternativeError(true);\r\n        } else {\r\n          setAlternativeOptions(resp.data);\r\n        }\r\n      })\r\n      .catch(() => setAlternativeError(true));\r\n  };\r\n\r\n  const exitModal = () => {\r\n    reset();\r\n    props.onHideModal();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (alternativeError) {\r\n      return;\r\n    }\r\n    if (!selectedMedicine) {\r\n      addToast(\"No medicine is selected!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (!amount) {\r\n      addToast(\"Therapy length not defined!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (isNaN(amount)) {\r\n      addToast(\"Invalid therapy duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    let th = \"\" + amount;\r\n    let therapyLen = parseInt(th);\r\n    if (therapyLen <= 0) {\r\n      addToast(\"Invalid therapy duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    selectedMedicine.duration = therapyLen;\r\n    props.onAddMedicine(selectedMedicine);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      scrollable\r\n      onHide={exitModal}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add medicine for therapy\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Medicine</Form.Label>\r\n            <Typeahead\r\n              id=\"1\"\r\n              labelKey={(option) => `${option.code} -- ${option.name}`}\r\n              onChange={(data) => {\r\n                setAlternativeError(false);\r\n                setSingleSelection(data);\r\n                setAlternativeOptions([]);\r\n                setAlternativeSelection([]);\r\n                if (data.length > 0) {\r\n                  if (data[0].amount <= 0) {\r\n                    setAlternatives(data[0].medicineItemID, data[0].medicineID);\r\n                  } else {\r\n                    setSelectedMedicine(data[0]);\r\n                  }\r\n                } else {\r\n                  setSelectedMedicine(null);\r\n                }\r\n              }}\r\n              options={primaryOptions}\r\n              placeholder=\"Select a medicine...\"\r\n              selected={singleSelection}\r\n            />\r\n          </Form.Group>\r\n          <Row className=\"justify-content-center mb-4\">\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => setShowHidePrimary(!showHidePrimary)}\r\n            >\r\n              Show/Hide info\r\n            </Button>\r\n          </Row>\r\n\r\n          {singleSelection.length > 0 && showHidePrimary && (\r\n            <Col style={{ backgroundColor: \"#83CEC2\" }}>\r\n              <Row className=\"justify-content-center mt-3\">\r\n                Medicine information\r\n              </Row>\r\n              <Row className=\"m-2\">-Code: {singleSelection[0].code}</Row>\r\n              <Row className=\"m-2\">-Name: {singleSelection[0].name}</Row>\r\n              <Row className=\"m-2\">-Price: {singleSelection[0].price}</Row>\r\n              <Row className=\"m-2\">-Content: {singleSelection[0].content}</Row>\r\n              <Row className=\"m-2\">\r\n                -Side effects: {singleSelection[0].sideEffects}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Daily intake: {singleSelection[0].dailyIntake}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Additional notes: {singleSelection[0].additionalNotes}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Type: {singleSelection[0].medicineType}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Form: {singleSelection[0].medicineForm}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Manufacturer: {singleSelection[0].manufacturer}\r\n              </Row>\r\n            </Col>\r\n          )}\r\n\r\n          {singleSelection.length > 0 && singleSelection[0].amount <= 0 && (\r\n            <div>\r\n              {alternativeError ? (\r\n                <div style={{ color: \"red\" }}>\r\n                  Selected medicine '{singleSelection[0].name}' is currently not\r\n                  in stock and has no alternative medicine available. Please\r\n                  chose another.\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      Selected medicine '{singleSelection[0].name}' is currently\r\n                      not in stock. Please select an alternative medicine:\r\n                    </Form.Label>\r\n                    <Typeahead\r\n                      id=\"2\"\r\n                      labelKey={(option) => `${option.code} -- ${option.name}`}\r\n                      onChange={(data) => {\r\n                        setAlternativeSelection(data);\r\n                        if (data.length > 0) {\r\n                          setSelectedMedicine(data[0]);\r\n                        } else {\r\n                          setSelectedMedicine(null);\r\n                        }\r\n                      }}\r\n                      options={alternativeOptions}\r\n                      placeholder=\"Select a medicine...\"\r\n                      selected={alternativeSelection}\r\n                    />\r\n                  </Form.Group>\r\n                  <Row className=\"justify-content-center mb-4\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => setShowHideSecondary(!showHideSecondary)}\r\n                    >\r\n                      Show/Hide alternative info\r\n                    </Button>\r\n                  </Row>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {alternativeSelection.length > 0 && showHideSecondary && (\r\n            <Col style={{ backgroundColor: \"#83CEC2\" }}>\r\n              <Row className=\"justify-content-center mt-3\">\r\n                Alternative medicine information\r\n              </Row>\r\n              <Row className=\"m-2\">-Code: {alternativeSelection[0].code}</Row>\r\n              <Row className=\"m-2\">-Name: {alternativeSelection[0].name}</Row>\r\n              <Row className=\"m-2\">-Price: {alternativeSelection[0].price}</Row>\r\n              <Row className=\"m-2\">\r\n                -Content: {alternativeSelection[0].content}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Side effects: {alternativeSelection[0].sideEffects}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Daily intake: {alternativeSelection[0].dailyIntake}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Additional notes: {alternativeSelection[0].additionalNotes}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Type: {alternativeSelection[0].medicineType}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Form: {alternativeSelection[0].medicineForm}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Manufacturer: {alternativeSelection[0].manufacturer}\r\n              </Row>\r\n            </Col>\r\n          )}\r\n          <Row className=\"mb-2 mt-5 ml-2\">\r\n            Selected medicine:{\" \"}\r\n            {selectedMedicine ? selectedMedicine.name : \"- none selected -\"}\r\n          </Row>\r\n\r\n          <Form.Group as={Row} className=\"mb-4 ml-2\">\r\n            <Form.Label>Prescribed days of therapy: </Form.Label>\r\n            <Col md={3}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                value={amount}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Confirm\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={exitModal}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TherapyMedicineModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst ScheduleAnotherApp = (props) => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [workersWorktime, setWorkersWorktime] = useState(null);\r\n  const [showWorkTime, setShowWorkTime] = useState(false);\r\n  const [apptsOnSelectedDate, setApptsOnSelectedDate] = useState([]);\r\n\r\n  const [startHours, setStartHours] = useState(\"\");\r\n  const [startMinutes, setStartMinutes] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n\r\n    if (getUserTypeFromToken().trim() === \"PHARMACIST\") {\r\n      api\r\n        .post(\"/api/workers/getWorkTimeForReport\", bodyFormData)\r\n        .then((resp) => {\r\n          setWorkersWorktime(resp.data);\r\n        })\r\n        .catch(() =>\r\n          addToast(\"Couldn't get worktime!\", { appearance: \"error\" })\r\n        );\r\n    } else {\r\n      if (props.appt) {\r\n        bodyFormData.append(\"pharmacyID\", props.appt.pharmacyID);\r\n        api\r\n          .post(\"/api/workers/getWorkTimeForReportDerm\", bodyFormData)\r\n          .then((resp) => {\r\n            setWorkersWorktime(resp.data);\r\n          })\r\n          .catch(() =>\r\n            addToast(\"Couldn't get worktime!\", { appearance: \"error\" })\r\n          );\r\n      }\r\n    }\r\n  }, [props.appt]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedDate) {\r\n      setApptsOnSelectedDate([]);\r\n      return;\r\n    }\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"patientID\", props.appt.patientID);\r\n    bodyFormData.append(\"date\", moment(selectedDate).valueOf());\r\n\r\n    api\r\n      .post(\"/api/appointment/appointmentsOnThatDate\", bodyFormData)\r\n      .then((resp) => {\r\n        setApptsOnSelectedDate(resp.data);\r\n      })\r\n      .catch(() =>\r\n        addToast(\"Couldn't get appts on selected date!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  }, [selectedDate]);\r\n\r\n  const scheduleAndFinish = () => {\r\n    if (!selectedDate) {\r\n      addToast(\"Invalid date\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (isNaN(startHours)) {\r\n      addToast(\"Invalid start time!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (isNaN(startMinutes)) {\r\n      addToast(\"Invalid start time!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (isNaN(duration)) {\r\n      addToast(\"Invalid duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    let hours = parseInt(startHours);\r\n    let minutes = parseInt(startMinutes);\r\n    let durationI = parseInt(duration);\r\n    if (hours < 0 || hours > 24 || minutes < 0 || minutes > 60) {\r\n      addToast(\"Invalid start time!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (durationI < 0 || durationI > 180) {\r\n      addToast(\"Invalid duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    let totalMillisHourMin = hours * 60 * 60 * 1000 + minutes * 60 * 1000;\r\n\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"patientID\", props.appt.patientID);\r\n    bodyFormData.append(\"pharmacyID\", props.appt.pharmacyID);\r\n    bodyFormData.append(\r\n      \"date\",\r\n      moment(selectedDate).valueOf() + totalMillisHourMin\r\n    );\r\n    bodyFormData.append(\"duration\", durationI);\r\n    api\r\n      .post(\"/api/appointment/scheduleAppointment\", bodyFormData)\r\n      .then(() => {\r\n        addToast(\"Appointment scheduled!\", { appearance: \"success\" });\r\n        props.onSchedule();\r\n      })\r\n      .catch((resp) => {\r\n        addToast(resp.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      scrollable\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Schedule another appointment\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Row className=\"ml-3 mb-2\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Worker's schedule</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Button onClick={() => setShowWorkTime(!showWorkTime)}>\r\n              Show/hide\r\n            </Button>\r\n          </InputGroup>\r\n        </Row>\r\n        {showWorkTime && (\r\n          <div>\r\n            <Row className=\"ml-5 mb-2\">Holidays:</Row>\r\n            {(workersWorktime ? workersWorktime.holidays : []).map(\r\n              (value, index) => {\r\n                return (\r\n                  <Row className=\"ml-5 mb-2\" key={index + 100}>\r\n                    {index + 1}) On holiday from{\" \"}\r\n                    {moment(value.startTime).format(\"DD MMM YYYY\")} to{\" \"}\r\n                    {moment(value.endTime).format(\"DD MMM YYYY\")}\r\n                  </Row>\r\n                );\r\n              }\r\n            )}\r\n            <Row className=\"ml-5 mb-2\">Worktime:</Row>\r\n            {(workersWorktime ? workersWorktime.workDayList : []).map(\r\n              (value, index) => {\r\n                return (\r\n                  <Row className=\"ml-5 mb-2\" key={index}>\r\n                    {value.weekday}: {value.startTime} - {value.endTime}\r\n                  </Row>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n        )}\r\n        <Form>\r\n          <Form.Group as={Row} className=\"ml-3 mb-2 mt-4\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Date for appointment:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={selectedDate}\r\n                minDate={Date.now()}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setSelectedDate(date)}\r\n                isClearable\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        {apptsOnSelectedDate.length > 0 && (\r\n          <div>\r\n            <Row className=\"ml-5 mb-2\">Appointments on selected date:</Row>\r\n            {apptsOnSelectedDate.map((value, index) => {\r\n              return (\r\n                <Row className=\"ml-5 mb-2\" key={index + 100}>\r\n                  {index + 1}) From {moment(value.startTime).format(\"HH:mm\")} to{\" \"}\r\n                  {moment(value.endTime).format(\"HH:mm\")}\r\n                </Row>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        <Row className=\"ml-1 mt-4 mb-2\">\r\n          <Col md={8}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Start time:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"hours\"\r\n                value={startHours}\r\n                onChange={(e) => setStartHours(e.target.value)}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"minutes\"\r\n                value={startMinutes}\r\n                onChange={(e) => setStartMinutes(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"ml-1 mt-4 mb-2\">\r\n          <Col md={8}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Duration(min):</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={duration}\r\n                onChange={(e) => setDuration(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center m-3 align-items-center\">\r\n          <Button onClick={() => scheduleAndFinish()}>Schedule</Button>\r\n        </Row>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ScheduleAnotherApp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TherapyMedicineModal from \"./appointment_report_therapy_modal\";\r\nimport ScheduleAnotherApp from \"./appointment_report_schedule_modal\";\r\nimport api from \"../../app/api\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentReport() {\r\n  const [selectedMedicine, setSelectedMedicine] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showScheduleAnother, setShowScheduleAnother] = useState(false);\r\n  const [showClicked, setShowClicked] = useState(false);\r\n  const [currAppt, setCurrAppt] = useState(null);\r\n  const [apptInfo, setApptInfo] = useState(\"\");\r\n  const [apptType, setApptType] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    if (getUserTypeFromToken().trim() === \"DERMATOLOGIST\") {\r\n      setApptType(\"checkup\");\r\n    } else if (getUserTypeFromToken().trim() === \"PHARMACIST\") {\r\n      setApptType(\"consultation\");\r\n    } else {\r\n      setApptType(\"appointment\");\r\n    }\r\n    let bodyFormData = new FormData();\r\n    if (!location.state.appointmentID) {\r\n      addToast(\"No appointment id! Couldn't start appointment!\", {\r\n        appearance: \"error\",\r\n      });\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    let appt_id = location.state.appointmentID;\r\n    bodyFormData.append(\"id\", appt_id);\r\n\r\n    api\r\n      .post(\"/api/appointment/getApptForReport\", bodyFormData)\r\n      .then((resp) => {\r\n        setCurrAppt(resp.data);\r\n      })\r\n      .catch(() => {\r\n        addToast(\"Couldn't get ids!\", { appearance: \"error\" });\r\n        history.push(\"/\");\r\n      }); //todo sta koji djavo ovo znaci\r\n  }, []);\r\n\r\n  const onAdd = (medItem) => {\r\n    for (let i = 0; i < selectedMedicine.length; i++) {\r\n      if (selectedMedicine[i].medicineID === medItem.medicineID) {\r\n        addToast(\"That medicine is already added to therapy!\", {\r\n          appearance: \"error\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    selectedMedicine.push(medItem);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const finishAppt = () => {\r\n    let appointment_id = currAppt.id;\r\n    api\r\n      .post(\"/api/appointment/finalizeAppointment\", {\r\n        apptId: appointment_id,\r\n        medicineList: selectedMedicine,\r\n        info: apptInfo,\r\n      })\r\n      .then(() => {\r\n        addToast(\"Appointment finished!\", { appearance: \"success\" });\r\n        setShowScheduleAnother(false);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((resp) => {\r\n        setSelectedMedicine([]);\r\n        addToast(resp.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ backgroundColor: \"#395E82\" }}>\r\n        <Row className=\"justify-content-center pt-5 mb-2 align-items-center\">\r\n          <h2 style={{ color: \"#83CEC2\" }}>\r\n            Appointment report for: {currAppt?.patient}\r\n          </h2>\r\n        </Row>\r\n        <Row className=\"justify-content-center mb-5 align-items-center\">\r\n          <h3 style={{ color: \"#83CEC2\" }}>{currAppt?.pharmacy}</h3>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center pb-3  align-items-center\">\r\n          <Col md={8}>\r\n            <Row\r\n              className=\"justify-content-center align-items-center pt-3 rounded\"\r\n              style={{ backgroundColor: \"#83CEC2\" }}\r\n            >\r\n              <Col>\r\n                <p className=\"text-center\">\r\n                  Date: {moment(currAppt?.start).format(\"DD MMM YYYY\")}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p className=\"text-center\">\r\n                  Time:\r\n                  {moment(currAppt?.start).format(\"HH:mm a\")}-\r\n                  {moment(currAppt?.end).format(\"HH:mm a\")}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p className=\"text-center\">Price: {currAppt?.price}</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center mb-5 align-items-center\">\r\n          <Col md={8}>\r\n            <Form>\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"justify-content-center align-items-center  mt-3\"\r\n              >\r\n                <Form.Label>\r\n                  <h4 style={{ color: \"#83CEC2\" }}>\r\n                    Input information about the {apptType}\r\n                  </h4>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"8\"\r\n                  name=\"address\"\r\n                  value={apptInfo}\r\n                  onChange={(e) => setApptInfo(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center pb-5 align-items-center\">\r\n          <Col md={8}>\r\n            <Row className=\"justify-content-center align-items-center\">\r\n              <div style={{ color: \"white\" }}>Therapy medicine</div>\r\n              <Button\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  setShowModal(true);\r\n                  setShowClicked(!showClicked);\r\n                }}\r\n              >\r\n                Add new\r\n              </Button>\r\n            </Row>\r\n            {(selectedMedicine ? selectedMedicine : []).map((value, index) => {\r\n              return (\r\n                <Row\r\n                  className=\"justify-content-center align-items-center mt-3 ml=5\"\r\n                  key={value.code}\r\n                >\r\n                  <div style={{ color: \"white\" }}>\r\n                    Medicine: {value.code} - {value.name}. Duration of\r\n                    therapy(in days): {value.duration}\r\n                  </div>\r\n                  <Button\r\n                    onClick={() => {\r\n                      let newArray = [];\r\n                      for (let i = 0; i < selectedMedicine.length; i++) {\r\n                        if (i != index) newArray.push(selectedMedicine[i]);\r\n                      }\r\n                      setSelectedMedicine(newArray);\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Row>\r\n              );\r\n            })}\r\n\r\n            <Row className=\"justify-content-center mt-5 align-items-center\">\r\n              <div style={{ color: \"#83CEC2\" }}>Finalize appointment</div>\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 mb-5 align-items-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setShowScheduleAnother(true);\r\n                }}\r\n              >\r\n                Schedule another and finish appointment\r\n              </Button>\r\n              <Button onClick={() => finishAppt()}>\r\n                {\" \"}\r\n                Finish appointment without scheduling\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <TherapyMedicineModal\r\n        show={showModal}\r\n        appt={currAppt}\r\n        onHideModal={hideModal}\r\n        onAddMedicine={onAdd}\r\n        clickedShow={showClicked}\r\n      ></TherapyMedicineModal>\r\n      <ScheduleAnotherApp\r\n        show={showScheduleAnother}\r\n        appt={currAppt}\r\n        onHide={() => setShowScheduleAnother(false)}\r\n        onSchedule={() => {\r\n          setShowScheduleAnother(false);\r\n          finishAppt();\r\n        }}\r\n      ></ScheduleAnotherApp>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Modal, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction VacationModal(props) {\r\n  const [fromDate, setFromDate] = useState(null);\r\n  const [toDate, setToDate] = useState(null);\r\n  const [typeVac, setTypeVac] = useState(\"none\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    setToDate(null);\r\n    setFromDate(null);\r\n    setTypeVac(\"none\");\r\n  }, [props.show]);\r\n\r\n  const onStart = () => {\r\n    if (!fromDate) {\r\n      addToast(\"Starting date is empty!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (!toDate) {\r\n      addToast(\"Ending date is empty!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (typeVac === \"none\") {\r\n      addToast(\"Vacation type is none!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    if (fromDate.getTime() >= toDate.getTime()) {\r\n      addToast(\"Invalid start/end date!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    let userID = getIdFromToken();\r\n    if (!userID) {\r\n      addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    let startDate = Math.floor(fromDate.getTime());\r\n    let endDate = Math.floor(toDate.getTime());\r\n\r\n    if (moment(Date.now()) > moment(startDate)) {\r\n      addToast(\"Start date of vacation has to be in future!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let search_params = new URLSearchParams();\r\n    search_params.append(\"id\", userID);\r\n    search_params.append(\"start\", startDate);\r\n    search_params.append(\"end\", endDate);\r\n    search_params.append(\"type\", typeVac);\r\n\r\n    api\r\n      .get(\"/api/vacation/request_vacation\", { params: search_params })\r\n      .then(() => props.onCreateMethod())\r\n      .catch((error) => addToast(error.response.data, { appearance: \"error\" }));\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Create a request for a vacation\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body as={Row} className=\"justify-content-center m-3\">\r\n        <Col>\r\n          <Row className=\"justify-content-center m-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Start date:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={fromDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setFromDate(date)}\r\n                isClearable\r\n              />\r\n            </InputGroup>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center m-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>End date:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={toDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setToDate(date)}\r\n                isClearable\r\n              />\r\n            </InputGroup>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center m-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Type:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={typeVac}\r\n                onChange={(event) => setTypeVac(event.target.value)}\r\n                name=\"typeVac\"\r\n              >\r\n                <option value=\"none\">none</option>\r\n                <option value=\"vacation\">vacation</option>\r\n                <option value=\"leave\">leave</option>\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Row>\r\n        </Col>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={onStart}>Create request</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default VacationModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Button, Col, Card } from \"react-bootstrap\";\r\nimport VacationModal from \"./vacation_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction VacationRequest() {\r\n  const [requests, setRequests] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let userID = getIdFromToken();\r\n    if (!userID) {\r\n      addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/vacation/getVacationsFromWorker?id=\" + userID)\r\n      .then((resp) => setRequests(resp.data))\r\n      .catch(() => setRequests([]));\r\n  }, []);\r\n\r\n  const onBtnClick = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCreateRequest = () => {\r\n    let userID = getIdFromToken();\r\n    if (!userID) {\r\n      addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/vacation/getVacationsFromWorker?id=\" + userID)\r\n      .then((resp) => setRequests(resp.data))\r\n      .catch(() => setRequests([])); //todo da se stavi da se dodaje u listu, a ne novi zahtev\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center ml-5 pb-4 pt-5 align-items-center\">\r\n        <Col md={6}>\r\n          <Row className=\"justify-content-center ml-5 mb-2 align-items-center\">\r\n            <h2 className=\"my_content_header\">Requests for vacations</h2>\r\n          </Row>\r\n          <Row className=\"justify-content-center ml-5 mb-4 align-items-center\">\r\n            <Button onClick={onBtnClick} size=\"lg\">\r\n              Create new\r\n            </Button>\r\n          </Row>\r\n\r\n          {requests.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center ml-5 mb-4 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {\"From: \" +\r\n                          moment(value.start).format(\"DD MMM YYYY\") +\r\n                          \" | To: \" +\r\n                          moment(value.end).format(\"DD MMM YYYY\")}\r\n                      </Card.Title>\r\n                      <Card.Text>{\"Type: \" + value.absenceType}</Card.Text>\r\n                      <Card.Text>{\"Status: \" + value.requestState}</Card.Text>\r\n                      {value.requestState.trim() === \"CANCELLED\" && (\r\n                        <Card.Text>\r\n                          Reason for decline: {value.declineText}\r\n                        </Card.Text>\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n\r\n        <VacationModal\r\n          show={showModal}\r\n          onCreateMethod={onCreateRequest}\r\n          onHide={() => {\r\n            setShowModal(false);\r\n          }}\r\n        ></VacationModal>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VacationRequest;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styling/profile.css\";\r\nimport { Form, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport BasicProfileInfo from \"../profile/BasicProfileInfo\";\r\nimport api from \"../../app/api\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction DermatologistProfile() {\r\n  const [workplaces, setWorkplaces] = useState([]);\r\n  const [currSelect, setCurrSelect] = useState(0);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"No token, error!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/workplace/dermatologist/get_workplaces/\" + id)\r\n      .then((resp) => {\r\n        setWorkplaces(resp.data);\r\n        console.log(workplaces);\r\n        if (workplaces.length > 0) {\r\n          setCurrSelect(0); //selectujemo ih po indeksu\r\n        }\r\n      })\r\n      .catch(() => setWorkplaces([]));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 align-items-center\">\r\n        <BasicProfileInfo title={\"Dermatologist profile\"}></BasicProfileInfo>\r\n      </Row>\r\n      <Row className=\"justify-content-center mt-5 ml-5 mr-5 pb-5 align-items-center\">\r\n        <Col\r\n          md={4}\r\n          className=\"card_appt_home\"\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <Row className=\"justify-content-center m-5 align-items-center\">\r\n            <h3 className=\"my_content_header\" style={{ textAlign: \"center\" }}>\r\n              Working hours\r\n            </h3>\r\n          </Row>\r\n          <Row className=\"justify-content-center m-5 align-items-center\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Select pharmacy:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as=\"select\"\r\n                defaultValue={0}\r\n                value={currSelect}\r\n                onChange={(event) => setCurrSelect(event.target.value)}\r\n              >\r\n                {workplaces.map((value, index) => {\r\n                  return <option value={index}>{value.pharmacy}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Row>\r\n          {(workplaces[currSelect]?.workDayList\r\n            ? workplaces[currSelect].workDayList\r\n            : []\r\n          ).map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center p-2 m-2 align-items-center\"\r\n                style={{ backgroundColor: \"#83CEC2\" }}\r\n              >\r\n                <div>\r\n                  {value.weekday}: {value.startTime} - {value.endTime}h\r\n                </div>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DermatologistProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styling/profile.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport BasicProfileInfo from \"../profile/BasicProfileInfo\";\r\nimport api from \"../../app/api\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction PharmacistProfile() {\r\n  const [workplace, setWorkplace] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/workplace/pharmacist/get_workplace/\" + id)\r\n      .then((resp) => {\r\n        setWorkplace(resp.data);\r\n      })\r\n      .catch(() => setWorkplace({}));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 align-items-center\">\r\n        <BasicProfileInfo title={\"Pharmacist profile\"}></BasicProfileInfo>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center mt-5 ml-5 mr-5 pb-5 align-items-center\">\r\n        <Col\r\n          md={4}\r\n          className=\"card_appt_home\"\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <Row className=\"justify-content-center m-5 align-items-center\">\r\n            <h3 className=\"my_content_header\" style={{ textAlign: \"center\" }}>\r\n              Working hours: {workplace ? workplace.pharmacy : \"\"}\r\n            </h3>\r\n          </Row>\r\n          {(workplace?.workDayList ? workplace.workDayList : []).map(\r\n            (value, index) => {\r\n              return (\r\n                <Row\r\n                  className=\"justify-content-center m-2 align-items-center p-2\"\r\n                  style={{ backgroundColor: \"#83CEC2\" }}\r\n                >\r\n                  <div>\r\n                    {value.weekday}: {value.startTime} - {value.endTime}h\r\n                  </div>\r\n                </Row>\r\n              );\r\n            }\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacistProfile;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Form, Button, Col, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction IssueMedicine() {\r\n  const [reservedMedicine, setReservedMedicine] = useState(null);\r\n  const [resID, setResID] = useState(null);\r\n  const { addToast } = useToasts();\r\n\r\n  const searchRes = () => {\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"resID\", resID);\r\n\r\n    api\r\n      .post(\"/api/medicine-reservation/getReservedIssue\", bodyFormData)\r\n      .then((resp) => {\r\n        setReservedMedicine(resp.data);\r\n      })\r\n      .catch((resp) => {\r\n        addToast(resp.response.data.message, { appearance: \"error\" });\r\n        setReservedMedicine(null);\r\n      });\r\n  };\r\n\r\n  const issueMed = () => {\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"resID\", resID);\r\n\r\n    api\r\n      .post(\"/api/medicine-reservation/issueMedicine\", bodyFormData)\r\n      .then((resp) => {\r\n        addToast(resp.data, { appearance: \"success\" });\r\n        setReservedMedicine(null);\r\n        setResID(\"\");\r\n      })\r\n      .catch((resp) => {\r\n        addToast(resp.response.data.message, { appearance: \"error\" });\r\n        setReservedMedicine(null);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <div>\r\n        <Row className=\"justify-content-center pt-5\">\r\n          <h4 className=\"my_content_header\">Issue medicine</h4>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center align-items-center\">\r\n          <Form\r\n            onSubmit={(event) => event.preventDefault()}\r\n            className=\"search_field\"\r\n          >\r\n            <Form.Group\r\n              as={Row}\r\n              className=\"justify-content-center m-3 align-items-center\"\r\n            >\r\n              <Form.Label>Search reservation:</Form.Label>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Reservation ID\"\r\n                value={resID}\r\n                onChange={(event) => setResID(event.target.value)}\r\n              />\r\n              <Row className=\"mt-3\">\r\n                <Button onClick={() => searchRes()}>Search</Button>\r\n              </Row>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n\r\n      <Row className=\"justify-content-center p-3\">\r\n        {reservedMedicine && (\r\n          <Col md={6}>\r\n            <Card fluid className=\"card_appt_home\">\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  Reservation ID: {reservedMedicine.reservationID}\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  Reservation date:{\" \"}\r\n                  {moment(reservedMedicine.reservationDate).format(\r\n                    \"DD MMM YYYY\"\r\n                  )}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Reservation pickup due date:{\" \"}\r\n                  {moment(reservedMedicine.pickupDate).format(\"DD MMM YYYY\")}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Medicine name: {reservedMedicine.medicineName}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Medicine ID: {reservedMedicine.medicineID}\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Row className=\"justify-content-center align-items-center m-3\">\r\n                <Button onClick={() => issueMed()}>Issue medicine</Button>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssueMedicine;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport FirstNameFormGroup from \"../utilComponents/formGroups/FirstNameFormGroup\";\r\nimport LastNameFormGroup from \"../utilComponents/formGroups/LastNameFormGroup\";\r\nimport EmailFormGroup from \"../utilComponents/formGroups/EmailFormGroup\";\r\nimport PhoneNumberFormGroup from \"../utilComponents/formGroups/PhoneNumberFormGroup\";\r\nimport PasswordFormGroup from \"../utilComponents/formGroups/PasswordFormGroup\";\r\nimport CityFormGroup from \"../utilComponents/formGroups/CityFormGroup\";\r\nimport StreetFormGroup from \"../utilComponents/formGroups/StreetFormGroup\";\r\nimport CountryFormGroup from \"../utilComponents/formGroups/CountryFormGroup\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nfunction AddUserModal(props) {\r\n  const [form, setForm] = useState({});\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const f = event.currentTarget;\r\n\r\n    if (f.checkValidity() === true) {\r\n      setValidated(true);\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    const newForm = convertForm(form);\r\n    console.log(newForm);\r\n    axios\r\n      .post(\"/api/users/\", newForm)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let address = {\r\n      city: form[\"city\"],\r\n      street: form[\"street\"],\r\n      country: form[\"country\"],\r\n    };\r\n\r\n    let newForm = {\r\n      ...form,\r\n      address: address,\r\n      roleName: props.usertype,\r\n    };\r\n\r\n    delete newForm[\"city\"];\r\n    delete newForm[\"street\"];\r\n    delete newForm[\"country\"];\r\n\r\n    return newForm;\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add new {props.usertype}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <FirstNameFormGroup\r\n            onChange={(event) => setField(\"firstName\", event.target.value)}\r\n          />\r\n          <LastNameFormGroup\r\n            onChange={(event) => setField(\"lastName\", event.target.value)}\r\n          />\r\n          <EmailFormGroup\r\n            onChange={(event) => setField(\"email\", event.target.value)}\r\n          ></EmailFormGroup>\r\n          <PasswordFormGroup\r\n            onChange={(event) => setField(\"password\", event.target.value)}\r\n          ></PasswordFormGroup>\r\n          <PhoneNumberFormGroup\r\n            onChange={(event) => setField(\"telephone\", event.target.value)}\r\n          ></PhoneNumberFormGroup>\r\n          <CityFormGroup\r\n            onChange={(event) => setField(\"city\", event.target.value)}\r\n          ></CityFormGroup>\r\n          <StreetFormGroup\r\n            onChange={(event) => setField(\"street\", event.target.value)}\r\n          ></StreetFormGroup>\r\n          <CountryFormGroup\r\n            onChange={(event) => setField(\"country\", event.target.value)}\r\n          ></CountryFormGroup>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong. User registration failed.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"User added successfully.\"\r\n      ></SuccessModal>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nAddUserModal.propTypes = {\r\n  usertype: PropTypes.string.isRequired,\r\n};\r\nexport default AddUserModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport FirstNameFormGroup from \"../utilComponents/formGroups/FirstNameFormGroup\";\r\nimport LastNameFormGroup from \"../utilComponents/formGroups/LastNameFormGroup\";\r\nimport EmailFormGroup from \"../utilComponents/formGroups/EmailFormGroup\";\r\nimport PhoneNumberFormGroup from \"../utilComponents/formGroups/PhoneNumberFormGroup\";\r\nimport CityFormGroup from \"../utilComponents/formGroups/CityFormGroup\";\r\nimport StreetFormGroup from \"../utilComponents/formGroups/StreetFormGroup\";\r\nimport CountryFormGroup from \"../utilComponents/formGroups/CountryFormGroup\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nimport axios from \"../../app/api\";\r\n\r\nfunction EditUserModal(props) {\r\n  const [form, setForm] = useState({});\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const f = event.currentTarget;\r\n\r\n    if (f.checkValidity() === true) {\r\n      setValidated(true);\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const showHandler = () => {\r\n    let newForm = {\r\n      ...props.user,\r\n      city: props.user.address.city,\r\n      street: props.user.address.street,\r\n      country: props.user.address.country,\r\n    };\r\n    setForm(newForm);\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    const newForm = convertForm(form);\r\n    console.log(newForm);\r\n    axios\r\n      .put(\"/api/users/\" + props.user.id, newForm)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let address = {\r\n      ...props.user.address,\r\n      city: form[\"city\"],\r\n      street: form[\"street\"],\r\n      country: form[\"country\"],\r\n    };\r\n\r\n    let newForm = {\r\n      ...form,\r\n      address: address,\r\n      roleName: props.usertype,\r\n    };\r\n\r\n    delete newForm[\"city\"];\r\n    delete newForm[\"street\"];\r\n    delete newForm[\"country\"];\r\n\r\n    return newForm;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit {props.user.firstName + \" \" + props.user.lastName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <FirstNameFormGroup\r\n            onChange={(event) => setField(\"firstName\", event.target.value)}\r\n            defaultValue={!!props.user.firstName ? props.user.firstName : \"\"}\r\n          />\r\n          <LastNameFormGroup\r\n            onChange={(event) => setField(\"lastName\", event.target.value)}\r\n            defaultValue={!!props.user.lastName ? props.user.lastName : \"\"}\r\n          />\r\n          <EmailFormGroup\r\n            onChange={(event) => setField(\"email\", event.target.value)}\r\n            defaultValue={!!props.user.email ? props.user.email : \"\"}\r\n            disabled={true}\r\n          />\r\n          <PhoneNumberFormGroup\r\n            onChange={(event) => setField(\"telephone\", event.target.value)}\r\n            defaultValue={!!props.user.telephone ? props.user.telephone : \"\"}\r\n          />\r\n          <CityFormGroup\r\n            onChange={(event) => setField(\"city\", event.target.value)}\r\n            defaultValue={!!props.user.address ? props.user.address.city : \"\"}\r\n          />\r\n          <StreetFormGroup\r\n            onChange={(event) => setField(\"street\", event.target.value)}\r\n            defaultValue={!!props.user.address ? props.user.address.street : \"\"}\r\n          />\r\n          <CountryFormGroup\r\n            onChange={(event) => setField(\"country\", event.target.value)}\r\n            defaultValue={\r\n              !!props.user.address ? props.user.address.country : \"\"\r\n            }\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"User updated successfully.\"\r\n      ></SuccessModal>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nEditUserModal.propTypes = {\r\n  usertype: PropTypes.string.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\nexport default EditUserModal;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function UserRow({ user, onClick, editClick, detailsClick, deleteClick }) {\r\n\treturn (\r\n\t\t<tr onClick={onClick} key={user.id}>\r\n\t\t\t<td>{user.firstName}</td>\r\n\t\t\t<td>{user.lastName}</td>\r\n\t\t\t<td>{user.email}</td>\r\n\t\t\t<td>{user.telephone}</td>\r\n\t\t\t<td>{user.address.city + ' ' + user.address.street}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<Button onClick={editClick}>Edit</Button>\r\n\t\t\t\t<Button variant=\"danger\" onClick={deleteClick}>\r\n\t\t\t\t\tDelete\r\n        </Button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Table } from \"react-bootstrap\";\r\nimport AddUserModal from \"./AddUserModal\";\r\nimport EditUserModal from \"./EditUserModal\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\nimport PropTypes from \"prop-types\";\r\nimport UserRow from \"./UserRow\";\r\nimport ErrorModal from \"../utilComponents/modals/ErrorModal\";\r\nimport SuccessModal from \"../utilComponents/modals/SuccessModal\";\r\n\r\nfunction UserTable({ initialUserType }) {\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUserType, setCurrentUserType] = useState(\"\");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\"/api/users/?type=\" + currentUserType);\r\n      setUsers(response.data);\r\n    }\r\n    fetchData();\r\n  }, [reload, currentUserType]);\r\n\r\n  useEffect(\r\n    function () {\r\n      setCurrentUserType(initialUserType);\r\n    },\r\n    [initialUserType]\r\n  );\r\n\r\n  const updateCurrentUserType = (event) => {\r\n    setCurrentUserType(event.target.value);\r\n  };\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const getFormattedUserType = () => {\r\n    switch (currentUserType) {\r\n      case \"PHARMACIST\":\r\n        return \"Pharmacist\";\r\n      case \"DERMATOLOGIST\":\r\n        return \"Dermatologist\";\r\n      case \"SUPPLIER\":\r\n        return \"Supplier\";\r\n      case \"ADMIN\":\r\n        return \"System Admin\";\r\n      case \"PHARMACY_ADMIN\":\r\n        return \"Pharmacy Admin\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const deleteUser = () => {\r\n    axios\r\n      .delete(\"/api/users/\" + selected.id)\r\n      .then(() => {\r\n        reloadTable();\r\n        setShowDeleteModal(false);\r\n        setShowSuccessModal(true);\r\n      })\r\n      .catch(() => {\r\n        setShowErrorModal(true);\r\n      });\r\n  };\r\n\r\n  const updateSelected = (selectedUser) => {\r\n    setSelected(selectedUser);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\" }} className=\"justify-content-center\">\r\n      <Row className=\"justify-content-md-between\">\r\n        <Form.Group controlId=\"userTypeSelect\">\r\n          <Form.Label>User Type</Form.Label>\r\n          <Form.Control as=\"select\" onChange={updateCurrentUserType.bind(this)}>\r\n            <option value=\"PHARMACIST\">Pharmacist</option>\r\n            <option value=\"DERMATOLOGIST\">Dermatologist</option>\r\n            <option value=\"SUPPLIER\">Supplier</option>\r\n            <option value=\"PHARMACY_ADMIN\">Pharmacy Admin</option>\r\n            <option value=\"ADMIN\">System Admin</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddModal(true)}\r\n        >\r\n          Add new {getFormattedUserType()}\r\n        </Button>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>E Mail</th>\r\n            <th>Phone number</th>\r\n            <th>Address</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <UserRow\r\n              key={user.id}\r\n              user={user}\r\n              onClick={() => updateSelected(user)}\r\n              editClick={() => setShowEditModal(true)}\r\n              deleteClick={() => setShowDeleteModal(true)}\r\n            ></UserRow>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <AddUserModal\r\n        show={showAddModal}\r\n        onHide={() => setShowAddModal(false)}\r\n        onSuccess={reloadTable}\r\n        usertype={currentUserType}\r\n      />\r\n      <DeleteModal\r\n        title={\"Remove \" + selected.firstName + \" \" + selected.lastName}\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        onDelete={deleteUser}\r\n      />\r\n      <EditUserModal\r\n        show={showEditModal}\r\n        user={selected}\r\n        onHide={() => setShowEditModal(false)}\r\n        onSuccess={reloadTable}\r\n        usertype={currentUserType}\r\n      />\r\n      <ErrorModal\r\n        show={showErrorModal}\r\n        onHide={() => setShowErrorModal(false)}\r\n        message=\"Something went wrong.\"\r\n      ></ErrorModal>\r\n      <SuccessModal\r\n        show={showSuccessModal}\r\n        onHide={() => setShowSuccessModal(false)}\r\n        message=\"User deleted successfully.\"\r\n      ></SuccessModal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nUserTable.propTypes = {\r\n  userType: PropTypes.oneOf([\r\n    \"DERMATOLOGIST\",\r\n    \"PHARMACIST\",\r\n    \"SUPPLIER\",\r\n    \"PHARMACY_ADMIN\",\r\n    \"ADMIN\",\r\n  ]),\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react'\r\n\r\nconst UserSearchPanel = props => {\r\n    return (\r\n        <div>\r\n            User search panel\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSearchPanel\r\n","import React from 'react'\r\nimport UserTable from './UserTable'\r\nimport UserSearchPanel from './UserSearchPanel'\r\n\r\nconst UserCrud = props => {\r\n    return (\r\n        <div>\r\n            <UserSearchPanel> </UserSearchPanel>\r\n            <UserTable initialUserType={\"PHARMACIST\"}> </UserTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCrud","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n  Table,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction PharmaciesWithFreePharmacists() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startHour, setStartHour] = useState(null);\r\n  const [requestedDate, setRequestedDate] = useState(null);\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [workers, setWorkers] = useState([]);\r\n  const [chosenPharmacy, setChosenPharmacy] = useState(null);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedPharmacies, setShowedPharmacies] = useState([]);\r\n  const [selectedWorker, setSelectedWorker] = useState({});\r\n  const [reloadPharmacies, setReloadPharmacies] = useState(false);\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const [sorter2, setSorter2] = useState(\"none\");\r\n  const [reload2, setReload2] = useState(false);\r\n  const [points, setPoints] = useState({});\r\n  const [category, setCategory] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await axios.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      );\r\n      setPoints(request.data);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      const request = await axios.get(\"/api/ranking-category/points/\" + points);\r\n      setCategory(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    if (requestedDate == null) return;\r\n\r\n    async function fetchPharmacies() {\r\n      let search_params = new URLSearchParams();\r\n      search_params.append(\"date\", requestedDate);\r\n      const request = await axios.get(\"/api/pharmacy/all/free-pharmacists/\", {\r\n        params: search_params,\r\n      });\r\n      if (request.status == 404) {\r\n        addToast(request.data, { appearance: \"error\" });\r\n        setPharmacies([]);\r\n      }\r\n      if (request.status == 200) {\r\n        if (request.data.length == 0) {\r\n          addToast(\"There's no available pharmacists!\", {\r\n            appearance: \"warning\",\r\n          });\r\n        }\r\n        setPharmacies(request.data);\r\n      }\r\n      setChosenPharmacy(null);\r\n      setSelectedWorker({});\r\n      setWorkers([]);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  }, [reloadPharmacies, requestedDate, reload]);\r\n\r\n  useEffect(() => {\r\n    if (chosenPharmacy == null) return;\r\n    async function fetchWorkers() {\r\n      let search_params = new URLSearchParams();\r\n      search_params.append(\"date\", requestedDate);\r\n      search_params.append(\"id\", chosenPharmacy.id);\r\n      const request = await axios.get(\r\n        \"/api/workers/all/free-pharmacists/pharmacy\",\r\n        { params: search_params }\r\n      );\r\n      if (request.status == 404) {\r\n        addToast(request.data, { appearance: \"error\" });\r\n        setWorkers([]);\r\n      }\r\n      if (request.status == 200) {\r\n        if (request.data.length == 0) {\r\n          addToast(\"There's no available pharmacists!\", {\r\n            appearance: \"warning\",\r\n          });\r\n        }\r\n        setWorkers(request.data);\r\n      }\r\n\r\n      return request;\r\n    }\r\n    fetchWorkers();\r\n  }, [chosenPharmacy, reload2]);\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(pharmacies?.length / 12) - 1;\r\n    if (pharmacies?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [pharmacies]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = pharmacies.length < first + 12 ? pharmacies?.length : first + 12;\r\n    setShowedPharmacies(pharmacies?.slice(first, max));\r\n  }, [pharmacies, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  const updateSelectedWorker = (selectedWorker) => {\r\n    setSelectedWorker(selectedWorker);\r\n  };\r\n\r\n  const createReservation = () => {\r\n    axios\r\n      .post(\r\n        `/api/appointment/reserve-consultation/pharmacy/${\r\n          chosenPharmacy.id\r\n        }/pharmacist/${\r\n          selectedWorker.id\r\n        }/patient/${getIdFromToken()}/date/${requestedDate}/`\r\n      )\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setRequestedDate(null);\r\n        setPharmacies([]);\r\n        setReloadPharmacies(!reloadPharmacies);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n        setReloadPharmacies(!reloadPharmacies);\r\n      });\r\n    setChosenPharmacy(null);\r\n    setSelectedWorker({});\r\n    setWorkers([]);\r\n  };\r\n\r\n  const changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    setStartDate(d);\r\n  };\r\n\r\n  const createRequestedDate = () => {\r\n    let date = startDate;\r\n    let hour = startHour;\r\n    let array = hour.split(\":\");\r\n    date.setHours(Number.parseInt(array[0]), Number.parseInt(array[1]), 0);\r\n    if (date.getTime()) {\r\n      if (date.getTime() < new Date()) {\r\n        addToast(\"Choose a date from the future!\", { appearance: \"warning\" });\r\n      } else {\r\n        setRequestedDate(date.getTime());\r\n      }\r\n    }\r\n  };\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sorter === \"none\") return;\r\n\r\n    let search_params = new URLSearchParams();\r\n\r\n    if (sorter === \"ascPrice\") {\r\n      search_params.append(\"sort\", \"consultationPrice,asc\");\r\n    }\r\n    if (sorter === \"descPrice\") {\r\n      search_params.append(\"sort\", \"consultationPrice,desc\");\r\n    }\r\n    if (sorter === \"ascGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,asc\");\r\n    }\r\n    if (sorter === \"descGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,desc\");\r\n    }\r\n\r\n    search_params.append(\"date\", requestedDate);\r\n\r\n    axios\r\n      .get(\"/api/pharmacy/all/free-pharmacists/\", {\r\n        params: search_params,\r\n      })\r\n      .then((resp) => setPharmacies(resp.data))\r\n      .catch(setPharmacies([]));\r\n  };\r\n\r\n  const updateSorting = (event) => {\r\n    setSorter(event.target.value);\r\n  };\r\n\r\n  const formSearch2 = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sorter2 === \"none\") return;\r\n\r\n    let search_params = new URLSearchParams();\r\n\r\n    if (sorter2 === \"ascGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,asc\");\r\n    }\r\n    if (sorter2 === \"descGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,desc\");\r\n    }\r\n\r\n    search_params.append(\"date\", requestedDate);\r\n    search_params.append(\"id\", chosenPharmacy.id);\r\n    axios\r\n      .get(\"/api/workers/all/free-pharmacists/pharmacy\", {\r\n        params: search_params,\r\n      })\r\n      .then((resp) => setWorkers(resp.data))\r\n      .catch(setWorkers([]));\r\n  };\r\n\r\n  const updateSorting2 = (event) => {\r\n    setSorter2(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"reserve__consultation__container\">\r\n      <div className=\"reserve__consultation__content\">\r\n        <Row>\r\n          <Col className=\"my__flex\">\r\n            <h3>Choose a date and time of consultation</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"my__flex\">\r\n            <Form.Group controlId=\"datePicker\" di>\r\n              <Form.Label>Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                onChange={(event) => changeDate(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"timePicker\" di>\r\n              <Form.Label>Start time</Form.Label>\r\n              <Form.Control\r\n                type=\"time\"\r\n                value={startHour}\r\n                onChange={(event) => setStartHour(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={createRequestedDate}\r\n              disabled={startDate == null || startHour == null}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className=\"justify-content-center mt-5\"\r\n          style={{ display: pharmacies.length == 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <Form onSubmit={formSearch}>\r\n            <Form.Group as={Row} className=\"align-items-center\">\r\n              <Col className=\"my__flex\" md={6} lg={6}>\r\n                <Form.Label style={{ marginRight: \"20px\" }}>\r\n                  Sorter:{\" \"}\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sorter}\r\n                  onChange={updateSorting.bind(this)}\r\n                  name=\"sorter\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"ascPrice\">Price (ascending)</option>\r\n                  <option value=\"descPrice\">Price (descending)</option>\r\n                  <option value=\"ascGrade\">Pharmacy grade (ascending)</option>\r\n                  <option value=\"descGrade\">Pharmacy grade (descending)</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col className=\"justify-content-center\" md={6} lg={6}>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Sort{\" \"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setReload(!reload);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Reset{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          {showedPharmacies &&\r\n            showedPharmacies.map((pharmacy) => {\r\n              return (\r\n                <Col\r\n                  className=\"my__flex\"\r\n                  key={pharmacy.id}\r\n                  lg={3}\r\n                  md={6}\r\n                  sm={12}\r\n                >\r\n                  <Card\r\n                    className=\"my__card\"\r\n                    style={{ width: \"18rem\" }}\r\n                    onClick={() => {\r\n                      setChosenPharmacy(pharmacy);\r\n                      setSelectedWorker({});\r\n                    }}\r\n                  >\r\n                    <Card.Body>\r\n                      <Card.Title>{pharmacy.name}</Card.Title>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {pharmacy.address}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {[...Array(Math.ceil(pharmacy.avgGrade))].map(() => (\r\n                          <StarFill className=\"my__star\" />\r\n                        ))}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        Price: {pharmacy.consultationPrice}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n\r\n        {showedPharmacies.length > 0 && (\r\n          <Row className=\"my__row__pagination\">\r\n            <Col className=\"my__flex\">\r\n              <Pagination size=\"lg\">\r\n                <Pagination.Prev\r\n                  disabled={pagNumber === 0}\r\n                  onClick={handleSlideLeft}\r\n                />\r\n                <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n                <Pagination.Next\r\n                  disabled={pagNumber === maxPag}\r\n                  onClick={handleSlideRight}\r\n                />\r\n              </Pagination>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row\r\n          className=\"justify-content-center mt-5\"\r\n          style={{\r\n            display:\r\n              requestedDate != null && showedPharmacies.length === 0\r\n                ? \"none\"\r\n                : \"flex\",\r\n          }}\r\n        >\r\n          <Form\r\n            onSubmit={formSearch2}\r\n            style={{ display: workers.length === 0 ? \"none\" : \"block\" }}\r\n          >\r\n            <Form.Group as={Row} className=\"align-items-center\">\r\n              <Col className=\"my__flex\" md={6} lg={6}>\r\n                <Form.Label style={{ marginRight: \"20px\" }}>\r\n                  Sorter:{\" \"}\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sorter2}\r\n                  onChange={updateSorting2.bind(this)}\r\n                  name=\"sorter2\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"ascGrade\">Pharmacist grade (ascending)</option>\r\n                  <option value=\"descGrade\">\r\n                    Pharmacist grade (descending)\r\n                  </option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col className=\"justify-content-center\" md={6} lg={6}>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Sort{\" \"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setReload2(!reload2);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Reset{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            style={{\r\n              display:\r\n                chosenPharmacy !== null && workers.length > 0\r\n                  ? \"table\"\r\n                  : \"none\",\r\n              width: \"50%\",\r\n            }}\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {workers &&\r\n                workers.map((w) => (\r\n                  <tr\r\n                    key={w.id}\r\n                    onClick={() => updateSelectedWorker(w)}\r\n                    className={\r\n                      selectedWorker.id === w.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{w.name}</td>\r\n                    <td>{w.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            display: category == \"\" ? \"none\" : \"block\",\r\n          }}\r\n        >\r\n          You have a discount of {category?.discount}%\r\n        </p>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"1.3rem\",\r\n            display:\r\n              category == \"\" || chosenPharmacy == null ? \"none\" : \"block\",\r\n          }}\r\n        >\r\n          Total price:{\" \"}\r\n          <span style={{ textDecoration: \"line-through\" }}>\r\n            {chosenPharmacy?.consultationPrice}\r\n          </span>\r\n          {\"   ->   \"}\r\n          {(chosenPharmacy?.consultationPrice * (100 - category.discount)) /\r\n            100}\r\n        </p>\r\n        <Row>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={createReservation}\r\n            style={{\r\n              display:\r\n                Object.keys(selectedWorker).length === 0 ||\r\n                chosenPharmacy == null\r\n                  ? \"none\"\r\n                  : \"inline-block\",\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            Reserve\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PharmaciesWithFreePharmacists;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Container, Table, Button, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction ConsultationsInsight() {\r\n  const [consultations, setConsultations] = useState([]);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"History\");\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [ascDesc, setAscDesc] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchConsultations() {\r\n      if (dropdownLabel === \"History\") {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await axios.get(\r\n          \"/api/appointment/history/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        );\r\n        setConsultations(request.data);\r\n\r\n        return request;\r\n      } else {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await axios.get(\r\n          \"/api/appointment/upcoming/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        );\r\n        setConsultations(request.data);\r\n\r\n        return request;\r\n      }\r\n    }\r\n    fetchConsultations();\r\n  }, [dropdownLabel, sorter, ascDesc, reload]);\r\n\r\n  const cancelConsultation = (id) => {\r\n    axios\r\n      .put(\"/api/appointment/cancel-consultation/\" + id)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  function differenceInMinutes(startTime) {\r\n    let today = new Date().getTime();\r\n    if ((startTime - today) / 60000 < 1440) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row style={{ justifyContent: \"space-between\" }}>\r\n          <Col className=\"my__flex\" md={3} lg={3}>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {dropdownLabel}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    // filterOrders(\"All\");\r\n                    setDropdownLabel(\"History\");\r\n                  }}\r\n                >\r\n                  History\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    // filterOrders(\"InProgress\");\r\n                    setDropdownLabel(\"Upcoming\");\r\n                  }}\r\n                >\r\n                  Upcoming\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n          <Col className=\"my__flex\" md={6} lg={6}>\r\n            <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {sorter}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"start time\");\r\n                  }}\r\n                >\r\n                  start time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"end time\");\r\n                  }}\r\n                >\r\n                  end time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"duration\");\r\n                  }}\r\n                >\r\n                  duration\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"price\");\r\n                  }}\r\n                >\r\n                  price\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {ascDesc}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"asc\");\r\n                  }}\r\n                >\r\n                  ascending\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"desc\");\r\n                  }}\r\n                >\r\n                  descending\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Start time</th>\r\n                <th>End time</th>\r\n                <th>Duration</th>\r\n                <th>Price</th>\r\n                <th>Pharmacist</th>\r\n                <th>Pharmacy</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {consultations &&\r\n                consultations.map((fc) => (\r\n                  <tr key={fc.id}>\r\n                    <td>{moment(fc.startTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{moment(fc.endTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{fc.duration}</td>\r\n                    <td>{fc.price}</td>\r\n                    <td>{fc.workerName}</td>\r\n                    <td>{fc.pharmacyName}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => cancelConsultation(fc.id)}\r\n                        style={{\r\n                          display:\r\n                            dropdownLabel === \"Upcoming\" &&\r\n                            differenceInMinutes(fc.startTime)\r\n                              ? \"inline-block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ConsultationsInsight;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Container, Table, Button, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction CheckupsInsight() {\r\n  const [checkups, setCheckups] = useState([]);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"History\");\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [ascDesc, setAscDesc] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchCheckups() {\r\n      if (dropdownLabel === \"History\") {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await axios.get(\r\n          \"/api/appointment/checkups/history/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        );\r\n        setCheckups(request.data);\r\n\r\n        return request;\r\n      } else {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await axios.get(\r\n          \"/api/appointment/checkups/upcoming/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        );\r\n        setCheckups(request.data);\r\n\r\n        return request;\r\n      }\r\n    }\r\n    fetchCheckups();\r\n  }, [dropdownLabel, sorter, ascDesc, reload]);\r\n\r\n  const cancelCheckup = (id) => {\r\n    axios\r\n      .put(\"/api/appointment/cancel-checkup/\" + id)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  function differenceInMinutes(startTime) {\r\n    let today = new Date().getTime();\r\n    if ((startTime - today) / 60000 < 1440) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row style={{ justifyContent: \"space-between\" }}>\r\n          <Col className=\"my__flex\" md={3} lg={3}>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {dropdownLabel}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setDropdownLabel(\"History\");\r\n                  }}\r\n                >\r\n                  History\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setDropdownLabel(\"Upcoming\");\r\n                  }}\r\n                >\r\n                  Upcoming\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n          <Col className=\"my__flex\" md={6} lg={6}>\r\n            <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {sorter}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"start time\");\r\n                  }}\r\n                >\r\n                  start time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"end time\");\r\n                  }}\r\n                >\r\n                  end time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"duration\");\r\n                  }}\r\n                >\r\n                  duration\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"price\");\r\n                  }}\r\n                >\r\n                  price\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {ascDesc}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"asc\");\r\n                  }}\r\n                >\r\n                  ascending\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"desc\");\r\n                  }}\r\n                >\r\n                  descending\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Start time</th>\r\n                <th>End time</th>\r\n                <th>Duration</th>\r\n                <th>Price</th>\r\n                <th>Pharmacist</th>\r\n                <th>Pharmacy</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {checkups &&\r\n                checkups.map((c) => (\r\n                  <tr key={c.id}>\r\n                    <td>{moment(c.startTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{moment(c.endTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{c.duration}</td>\r\n                    <td>{c.price}</td>\r\n                    <td>{c.workerName}</td>\r\n                    <td>{c.pharmacyName}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => cancelCheckup(c.id)}\r\n                        style={{\r\n                          display:\r\n                            dropdownLabel === \"Upcoming\" &&\r\n                            differenceInMinutes(c.startTime)\r\n                              ? \"inline-block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckupsInsight;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { XCircle } from \"react-bootstrap-icons\";\r\n\r\nimport { Row, Container, Table } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport api from \"../../app/api\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\n\r\n// CHECK Deki ovde ima\r\nfunction SubscribedPharmacies() {\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState([]);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadPharmacies();\r\n  }, []);\r\n\r\n  const loadPharmacies = () => {\r\n    async function fetchPharmacies() {\r\n      const request = await axios.get(\r\n        \"/api/pharmacy/subscribed/patient/\" + getIdFromToken()\r\n      );\r\n      setPharmacies(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  };\r\n\r\n  const unsubscribe = () => {\r\n    api\r\n      .post(\r\n        `/api/pharmacy/${selectedPharmacy.id}/unsubscribe/${getIdFromToken()}`\r\n      )\r\n      .then(() => {\r\n        loadPharmacies();\r\n        setShowDeleteModal(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row className=\"my__flex\">\r\n          <h3>Pharmacies to which you are subscribed</h3>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Average grade</th>\r\n                <th>Address</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pharmacies &&\r\n                pharmacies.map((p) => (\r\n                  <tr\r\n                    key={p.id}\r\n                    onClick={() => {\r\n                      setSelectedPharmacy(p);\r\n                    }}\r\n                  >\r\n                    <td>{p.name}</td>\r\n                    <td>\r\n                      {p.description.length > 30\r\n                        ? p.description.substr(0, 29) + \"...\"\r\n                        : p.description}\r\n                    </td>\r\n                    <td>{p.avgGrade}</td>\r\n                    <td>{p.address}</td>\r\n                    <td>\r\n                      <XCircle\r\n                        style={{ color: \"red\" }}\r\n                        onClick={() => {\r\n                          setShowDeleteModal(true);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n      <DeleteModal\r\n        show={showDeleteModal}\r\n        title={`Unsubscribe from ${selectedPharmacy.name}`}\r\n        bodyText=\"Press 'confirm' to unsubscribe\"\r\n        onDelete={unsubscribe}\r\n        onHide={() => {\r\n          setShowDeleteModal(false);\r\n        }}\r\n      >\r\n        {\" \"}\r\n      </DeleteModal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SubscribedPharmacies;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Container, Table, Button } from \"react-bootstrap\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction ReservedMedicines() {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchReservations() {\r\n      const request = await axios.get(\r\n        \"/api/medicine-reservation/reserved-medicines/patient/\" +\r\n          getIdFromToken()\r\n      );\r\n      setReservations(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchReservations();\r\n  }, [reload]);\r\n\r\n  const cancelReservation = (id) => {\r\n    axios\r\n      .put(\"/api/medicine-reservation/cancel-reservation/\" + id)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(err.response.data, { appearance: \"error\" });\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  function differenceInMinutes(startTime) {\r\n    let today = new Date().getTime();\r\n    if ((startTime - today) / 60000 < 1440) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{ display: reservations.length === 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <h3>Reserved medicines</h3>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n            style={{ display: reservations.length === 0 ? \"none\" : \"table\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Reservation date</th>\r\n                <th>Pickup date</th>\r\n                <th>Medicine</th>\r\n                <th>Pharmacy</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {reservations &&\r\n                reservations.map((r) => (\r\n                  <tr key={r.id}>\r\n                    <td>{r.reservationID}</td>\r\n                    <td>\r\n                      {moment(r.reservationDate).format(\"DD-MM-YYYY HH:mm\")}\r\n                    </td>\r\n                    <td>{moment(r.pickupDate).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{r.medicineName}</td>\r\n                    <td>{r.pharmacyName}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => cancelReservation(r.id)}\r\n                        style={{\r\n                          display: differenceInMinutes(r.pickupDate)\r\n                            ? \"inline-block\"\r\n                            : \"none\",\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{ display: reservations.length === 0 ? \"block\" : \"none\" }}\r\n        >\r\n          <h3>You have no reservations made!</h3>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ReservedMedicines;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Container, Table, Button, Alert } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction Rating() {\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"Dermatologist\");\r\n  const [entities, setEntitites] = useState([]);\r\n  const [selectedEntity, setSelectedEntity] = useState(null);\r\n  const [rating, setRating] = useState(null);\r\n  const [enabledRating, setEnabledRating] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n  var spans = document.querySelectorAll(\"span\");\r\n\r\n  useEffect(() => {\r\n    async function fetchEntities() {\r\n      let url;\r\n      if (dropdownLabel === \"Dermatologist\") {\r\n        url = \"/api/workers/all-dermatologists/patient/\";\r\n      } else if (dropdownLabel === \"Pharmacist\") {\r\n        url = \"/api/workers/all-pharmacists/patient/\";\r\n      } else if (dropdownLabel === \"Medicine\") {\r\n        url = \"/api/medicine/all-medicines/patient/\";\r\n      } else {\r\n        url = \"/api/pharmacy/all-pharmacies/patient/\";\r\n      }\r\n\r\n      const request = await axios\r\n        .get(url + getIdFromToken())\r\n        .then((res) => {\r\n          setEntitites(res.data);\r\n        })\r\n        .catch(() => {\r\n          setEntitites([]);\r\n        });\r\n\r\n      return request;\r\n    }\r\n    fetchEntities();\r\n  }, [dropdownLabel, reload]);\r\n\r\n  const updateSelectedEntity = (selectedEntity) => {\r\n    setSelectedEntity(selectedEntity);\r\n\r\n    axios\r\n      .get(\r\n        \"/api/rating/\" +\r\n          dropdownLabel.toLowerCase() +\r\n          \"/\" +\r\n          selectedEntity.id +\r\n          \"/patient/\" +\r\n          getIdFromToken() +\r\n          \"/grade\"\r\n      )\r\n      .then((res) => {\r\n        setRating(res.data);\r\n      });\r\n  };\r\n\r\n  const ratingChanged = (newRating) => {\r\n    for (let span of spans) {\r\n      span.classList.remove(\"my__color__star\");\r\n    }\r\n\r\n    let forSend = {\r\n      id: -1,\r\n      grade: newRating,\r\n      gradedID: selectedEntity.id,\r\n      date: new Date().getTime(),\r\n      patientId: getIdFromToken(),\r\n      type: dropdownLabel.toUpperCase(),\r\n    };\r\n\r\n    if (enabledRating === false) {\r\n      axios\r\n        .post(\"/api/rating/\", forSend)\r\n        .then((res) => {\r\n          addToast(res.data, { appearance: \"success\" });\r\n          setEnabledRating(false);\r\n          updateSelectedEntity(selectedEntity);\r\n          setReload(!reload);\r\n        })\r\n        .catch((err) => {\r\n          addToast(err.response.data, { appearance: \"error\" });\r\n        });\r\n    } else {\r\n      forSend.id = rating.id;\r\n      axios\r\n        .put(\"/api/rating/\", forSend)\r\n        .then((res) => {\r\n          addToast(res.data, { appearance: \"success\" });\r\n          setEnabledRating(false);\r\n          updateSelectedEntity(selectedEntity);\r\n          setReload(!reload);\r\n        })\r\n        .catch((err) => {\r\n          addToast(err.response.data, { appearance: \"error\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    for (let span of spans) {\r\n      span.classList.add(\"my__color__star\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row className=\"my__flex\">\r\n          <h3>Rating procedure</h3>\r\n        </Row>\r\n        <Row>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              {dropdownLabel}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Dermatologist\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Dermatologist\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Pharmacist\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Pharmacist\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Medicine\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Medicine\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Pharmacy\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Pharmacy\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            display:\r\n              (dropdownLabel == \"Dermatologist\" ||\r\n                dropdownLabel == \"Pharmacist\") &&\r\n              entities.length > 0\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entities &&\r\n                entities.map((e) => (\r\n                  <tr\r\n                    key={e.id}\r\n                    onClick={() => updateSelectedEntity(e)}\r\n                    className={\r\n                      selectedEntity?.id === e.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{e.name}</td>\r\n                    <td>{e.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            display:\r\n              dropdownLabel == \"Medicine\" && entities.length > 0\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Medicine code</th>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entities &&\r\n                entities.map((e) => (\r\n                  <tr\r\n                    key={e.id}\r\n                    onClick={() => updateSelectedEntity(e)}\r\n                    className={\r\n                      selectedEntity?.id === e.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{e.medicineCode}</td>\r\n                    <td>{e.name}</td>\r\n                    <td>{e.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            display:\r\n              dropdownLabel == \"Pharmacy\" && entities.length > 0\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n                <th>Address</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entities &&\r\n                entities.map((e) => (\r\n                  <tr\r\n                    key={e.id}\r\n                    onClick={() => updateSelectedEntity(e)}\r\n                    className={\r\n                      selectedEntity?.id === e.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{e.name}</td>\r\n                    <td>{e.avgGrade}</td>\r\n                    <td>{e.address}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{\r\n            display:\r\n              rating != null && rating !== \"not graded\" ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <p className=\"my__flex\" style={{ marginBottom: \"0\" }}>\r\n            You have graded last time{\" \"}\r\n            {rating && moment(rating?.date).format(\"DD-MM-YYYY HH:mm\")}:{\" \"}\r\n            {[...Array(rating && rating?.grade)].map(() => (\r\n              <StarFill style={{ width: \"1.5rem\" }} />\r\n            ))}\r\n          </p>\r\n          <Button\r\n            disabled={enabledRating}\r\n            variant=\"info\"\r\n            onClick={() => setEnabledRating(true)}\r\n          >\r\n            Change grade\r\n          </Button>\r\n        </Row>\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{\r\n            display:\r\n              (rating != null && rating === \"not graded\") || enabledRating\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <ReactStars\r\n            count={5}\r\n            onChange={ratingChanged}\r\n            size={48}\r\n            activeColor=\"green\"\r\n          />\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            justifyContent: \"center\",\r\n            display: entities.length === 0 ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <Alert transition={true} variant=\"warning\">\r\n            There's no {dropdownLabel.toLowerCase()} to grade!\r\n          </Alert>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nconst SubmitComplaintForm = () => {\r\n  const [complaintType, setComplaintType] = useState(\"PHARMACIST\");\r\n  const [singleSelection, setSingleSelection] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [textAreaText, setTextAreaText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let url = `/api/patients/${getIdFromToken()}/`;\r\n    switch (complaintType) {\r\n      case \"PHARMACIST\":\r\n        url = url + \"my-pharmacists\";\r\n        break;\r\n      case \"DERMATOLOGIST\":\r\n        url = url + \"my-dermatologists\";\r\n        break;\r\n      case \"PHARMACY\":\r\n        url = url + \"my-pharmacies\";\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    api.get(url).then((res) => {\r\n      setOptions(res.data);\r\n      setSingleSelection([]);\r\n    });\r\n  }, [complaintType]);\r\n\r\n  const getLabelKey = (option) => {\r\n    try {\r\n      switch (complaintType) {\r\n        case \"PHARMACIST\":\r\n          return `${option.name}`;\r\n        case \"DERMATOLOGIST\":\r\n          return `${option.name}`;\r\n        case \"PHARMACY\":\r\n          return `${option.name} -- ${option.address.street}`;\r\n        default:\r\n          return \"\";\r\n      }\r\n    } catch {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const updateComplaintType = (e) => {\r\n    setComplaintType(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!singleSelection[0]) {\r\n      alert(`Please select the ${complaintType.toLocaleLowerCase()}`);\r\n      return;\r\n    }\r\n    if (!textAreaText) {\r\n      alert(`Please fill out complaint text`);\r\n      return;\r\n    }\r\n    let data = {\r\n      content: textAreaText,\r\n      complaintOn: getLabelKey(singleSelection[0]),\r\n      complaintOnId: singleSelection[0].id,\r\n      type: complaintType,\r\n      date: Date.now(),\r\n      patientId: getIdFromToken(),\r\n    };\r\n\r\n    let url = \"/api/complaints/\";\r\n    api\r\n      .post(url, JSON.stringify(data))\r\n      .then(() => {\r\n        alert(\"Successfully submitted\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Error. Complaint not submitted\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Container>\r\n        <Row className=\"justify-content-between\">\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <FormLabel>Select type</FormLabel>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={updateComplaintType.bind(this)}\r\n              >\r\n                <option value=\"PHARMACIST\" defaultValue>\r\n                  Pharmacist\r\n                </option>\r\n                <option value=\"DERMATOLOGIST\">Dermatologist</option>\r\n                <option value=\"PHARMACY\">Pharmacy</option>\r\n              </Form.Control>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={7}>\r\n            <FormGroup>\r\n              <FormLabel>Select name</FormLabel>\r\n              <Typeahead\r\n                id=\"complaintTypeahead\"\r\n                labelKey={(option) => getLabelKey(option)}\r\n                onChange={setSingleSelection}\r\n                options={options}\r\n                placeholder={\"Select...\"}\r\n                selected={singleSelection}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group>\r\n          <Form.Label>Complaint text</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            onChange={(event) => setTextAreaText(event.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SubmitComplaintForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\n\r\nconst ComplaintDetails = ({ complaint }) => {\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchResponse() {\r\n      api.get(`/api/complaint-responses/${complaint.id}`).then((res) => {\r\n        console.log(res);\r\n        setResponse(res.data ? res.data.responseText : \"\");\r\n      });\r\n    }\r\n    fetchResponse();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"border border-primary\">\r\n      <Container style={{ padding: \"10px\", border: \"1px black\" }}>\r\n        <Row className=\"justify-content-between\">\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <FormLabel>For: {complaint.complaintOn}</FormLabel>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <FormLabel>Type: {complaint.type}</FormLabel>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <FormLabel>\r\n                Date: {new Date(complaint.date).toLocaleDateString(\"sr-sp\")}\r\n              </FormLabel>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group>\r\n          <Form.Label>Complaint text</Form.Label>\r\n          <Form.Control as=\"textarea\" value={complaint.content} disabled />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Response text</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            defaultValue={response}\r\n            value={response}\r\n            disabled\r\n          />\r\n        </Form.Group>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport ComplaintDetails from \"./ComplaintDetails\";\r\n\r\nconst ComplaintHistory = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchComplaints() {\r\n      api.get(`/api/complaints/patient/${getIdFromToken()}`).then((res) => {\r\n        setComplaints(res.data);\r\n      });\r\n    }\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {complaints &&\r\n        complaints.map((c) => {\r\n          return <ComplaintDetails key={c.id} complaint={c}></ComplaintDetails>;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintHistory;\r\n","import React from 'react'\r\nimport { Col, Nav, Row, Tab, TabPane } from 'react-bootstrap'\r\nimport SubmitComplaintForm from './SubmitComplaintForm'\r\nimport ComplaintHistory from './ComplaintHistory'\r\n\r\nconst ComplaintsPage = () => {\r\n    return (\r\n        <main className=\"home__page\">\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\" unmountOnExit>\r\n                <Row className=\"my-panel\">\r\n                    <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                                    Submit a complaint\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                                    My complaints\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n                        <Tab.Content>\r\n                            <TabPane eventKey=\"first\">\r\n                                <SubmitComplaintForm></SubmitComplaintForm>\r\n                            </TabPane>\r\n                            <TabPane eventKey=\"second\">\r\n                                <ComplaintHistory></ComplaintHistory>\r\n                            </TabPane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ComplaintsPage\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nconst ComplaintResponse = ({ complaint, onSuccessfulSubmit }) => {\r\n  const [responseText, setResponseText] = useState();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (!responseText) {\r\n      alert(`Please fill out response text`);\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      responseText: responseText,\r\n      complaintId: complaint.id,\r\n      adminId: getIdFromToken(),\r\n      date: Date.now(),\r\n    };\r\n\r\n    let url = `/api/complaint-responses/${complaint.id}`;\r\n    api\r\n      .post(url, JSON.stringify(data))\r\n      .then(() => {\r\n        onSuccessfulSubmit();\r\n        alert(\"Successfully submitted\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Error. Response not submitted\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-primary\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Container style={{ padding: \"10px\", border: \"1px black\" }}>\r\n          <Row className=\"justify-content-between\">\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <FormLabel>For: {complaint.complaintOn}</FormLabel>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <FormLabel>Type: {complaint.type}</FormLabel>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={2}>\r\n              <FormGroup>\r\n                <FormLabel>\r\n                  Date: {new Date(complaint.date).toLocaleDateString(\"sr-sp\")}\r\n                </FormLabel>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Form.Group>\r\n            <Form.Label>Complaint text</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={5}\r\n              value={complaint.content}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Response text</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={5}\r\n              onChange={(event) => {\r\n                setResponseText(event.target.value);\r\n              }}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintResponse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ComplaintResponse from \"./ComplaintResponse\";\r\nimport api from \"../../app/api\";\r\n\r\nconst NewComplaintsList = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getNewComplaints();\r\n  }, []);\r\n\r\n  const getNewComplaints = () => {\r\n    async function fetchComplaints() {\r\n      api.get(`/api/complaints/new`).then((res) => {\r\n        setComplaints(res.data);\r\n      });\r\n    }\r\n    fetchComplaints();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {complaints &&\r\n        complaints.map((c) => {\r\n          return (\r\n            <ComplaintResponse\r\n              key={c.id}\r\n              complaint={c}\r\n              onSuccessfulSubmit={getNewComplaints}\r\n            ></ComplaintResponse>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewComplaintsList;\r\n","import React from 'react'\r\nimport { Col, Container, FormControl, FormGroup, FormLabel, Row } from 'react-bootstrap'\r\n\r\nconst ComplaintResponseDetails = ({ complaintResponse }) => {\r\n    return (\r\n        <div className=\"border border-primary\">\r\n            <Container style={{ padding: '10px', border: '1px black' }}>\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md={5}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                For: {complaintResponse.complaint.complaintOn}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                Type: {complaintResponse.complaint.type}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                Complaint Date: {new Date(complaintResponse.complaint.date).toLocaleDateString(\"sr-sp\")}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                Response Date: {new Date(complaintResponse.date).toLocaleDateString(\"sr-sp\")}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                    <FormLabel>Complaint text</FormLabel>\r\n                    <FormControl\r\n                        as=\"textarea\"\r\n                        value={complaintResponse.complaint.content}\r\n                        disabled />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <FormLabel>Response text</FormLabel>\r\n                    <FormControl\r\n                        as=\"textarea\"\r\n                        value={complaintResponse.responseText}\r\n                        disabled />\r\n                </FormGroup>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComplaintResponseDetails\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport ComplaintResponseDetails from \"./ComplaintResponseDetails\";\r\n\r\nconst ComplaintResponsesHistory = () => {\r\n  const [complaintResponses, setComplaintResponses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchComplaints() {\r\n      api\r\n        .get(`/api/complaint-responses/admin/${getIdFromToken()}`)\r\n        .then((res) => {\r\n          setComplaintResponses(res.data);\r\n        });\r\n    }\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {complaintResponses &&\r\n        complaintResponses.map((cr) => {\r\n          return (\r\n            <ComplaintResponseDetails\r\n              key={cr.id}\r\n              complaintResponse={cr}\r\n            ></ComplaintResponseDetails>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintResponsesHistory;\r\n","import React from 'react'\r\nimport { Col, Nav, Row, Tab, TabPane } from 'react-bootstrap'\r\nimport NewComplaintsList from './NewComplaintsList'\r\nimport ComplaintResponsesHistory from './ComplaintResponsesHistory'\r\n\r\nconst ComplaintsPage = () => {\r\n    return (\r\n        <main style={{ padding: '0px' }}>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\" unmountOnExit>\r\n                <Row className=\"my-panel\">\r\n                    <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                                    New complaints\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                                    History\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n                        <Tab.Content>\r\n                            <TabPane eventKey=\"first\">\r\n                                <NewComplaintsList></NewComplaintsList>\r\n                            </TabPane>\r\n                            <TabPane eventKey=\"second\">\r\n                                <ComplaintResponsesHistory></ComplaintResponsesHistory>\r\n                            </TabPane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ComplaintsPage\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nconst PharmacyWithMedicineItem = ({ pharmacy, doBuy }) => {\r\n  const [points, setPoints] = useState({});\r\n  const [category, setCategory] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      );\r\n      setPoints(request.data);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      const request = await api.get(\"/api/ranking-category/points/\" + points);\r\n      setCategory(request.data);\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  return (\r\n    <Card style={{ marginBottom: \"20px\" }}>\r\n      <Card.Header>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={{ span: 3, offset: 0 }}>{`${pharmacy.name}`}</Col>\r\n            <Col md={{ span: 4, offset: 5 }}>\r\n              <div style={{ float: \"right\" }}>\r\n                {`${pharmacy.addressStreet}, ${pharmacy.addressCity}`}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Container>{`Grade: ${pharmacy.avgGrade}`}</Container>\r\n      </Card.Body>\r\n      <Card.Footer className=\"align-content-end\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={{ span: 3, offset: 0 }}>\r\n              {`Total price: ${pharmacy.totalPrice}`}\r\n            </Col>\r\n            <Col md={{ span: 3, offset: 1 }}>\r\n              {!!category && category.discount != 0\r\n                ? `Total price with discount: ${\r\n                    pharmacy.totalPrice * (1 - category.discount / 100)\r\n                  }`\r\n                : \"\"}\r\n            </Col>\r\n            <Col md={{ span: 2, offset: 3 }}>\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                onClick={() => {\r\n                  doBuy(pharmacy);\r\n                }}\r\n              >\r\n                Buy\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PharmacyWithMedicineItem;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport PharmacyWithMedicineItem from './PharmacyWithMedicineItem'\r\n\r\nconst PharmacyWithMedicineList = ({ pharmacies, doBuy }) => {\r\n\r\n    return (\r\n\r\n        <Container>\r\n            {pharmacies.map((p) => {\r\n                return <PharmacyWithMedicineItem pharmacy={p} doBuy={() => { doBuy(p) }}></PharmacyWithMedicineItem >\r\n            })}\r\n        </Container >\r\n\r\n    )\r\n}\r\n\r\nPharmacyWithMedicineList.defaultProps = {\r\n    pharmacies: []\r\n}\r\n\r\nexport default PharmacyWithMedicineList\r\n","import React from 'react'\r\nimport { Container, ListGroup } from 'react-bootstrap'\r\n\r\nconst RequiredMedicineList = ({ medicines }) => {\r\n    return (\r\n        <ListGroup style={{ marginBottom: '20px' }}>\r\n            {medicines.map((m) => {\r\n                return <ListGroup.Item>{`Code: ${m.medicineCode} -- ${m.medicineName}, Quantity ${m.quantity} pcs`}</ListGroup.Item>\r\n            })}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nRequiredMedicineList.defaultProps = {\r\n    medicines: []\r\n}\r\n\r\nexport default RequiredMedicineList\r\n","import axios from \"../../app/api\";\r\nimport { data } from \"jquery\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport PharmacyWithMedicineList from \"./PharmacyWithMedicineList\";\r\nimport RequiredMedicineList from \"./RequiredMedicineList\";\r\n\r\nconst ERecipeSearch = () => {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [QRImage, setQRImage] = useState({});\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\r\n  const [sortBy, setSortBy] = useState(\"totalPrice\");\r\n  const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n  const [parsedData, setParsedData] = useState({});\r\n\r\n  const handleFileChange = (e) => {\r\n    setQRImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"file\", QRImage);\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/e-recipes/upload-qr/${getIdFromToken()}`,\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        setParsedData(res.data);\r\n      })\r\n      .catch(() => {\r\n        setErrorMessage(\"Invalid QR code!\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data = parsedData;\r\n    if (data.state == \"REJECTED\") {\r\n      setPharmacies([]);\r\n      setErrorMessage(\"Invalid QR code!\");\r\n      setShowSearchPanel(false);\r\n      return;\r\n    } else if (data.state == \"PROCESSED\") {\r\n      setPharmacies([]);\r\n      setErrorMessage(\"This code has already been processed!\");\r\n      setShowSearchPanel(false);\r\n      return;\r\n    }\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/pharmacy/e-recipe?sort=${sortBy}&order=${sortOrder}`,\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        setErrorMessage(\"\");\r\n        setPharmacies(res.data);\r\n        setShowSearchPanel(true);\r\n      })\r\n      .catch(() => {\r\n        setPharmacies([]);\r\n        setErrorMessage(\"Invalid QR code!\");\r\n        setShowSearchPanel(false);\r\n      });\r\n  }, [parsedData, sortBy, sortOrder]);\r\n\r\n  const doBuy = (pharmacy) => {\r\n    let data = {\r\n      ...parsedData,\r\n      pharmacyId: pharmacy.id,\r\n      totalPrice: pharmacy.totalPrice,\r\n    };\r\n    api\r\n      .post(`/api/e-recipes/dispense-medicine/${getIdFromToken()}`, data)\r\n      .then(() => {\r\n        alert(\"Success\");\r\n        setParsedData([]);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Oops\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"consultation__insight__content\">\r\n      <Container>\r\n        <Form\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <Container style={{ marginBottom: \"15px\" }}>\r\n            <Row>\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Form.File>\r\n                  <Form.File.Label>Upload QR Code</Form.File.Label>\r\n                  <Form.File.Input onChange={(e) => handleFileChange(e)} />\r\n                </Form.File>\r\n              </Col>\r\n\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Row>\r\n            <p>{errorMessage}</p>\r\n          </Container>\r\n        </Form>\r\n        <Form hidden={!showSearchPanel}>\r\n          <p>Required medicine: </p>\r\n          <RequiredMedicineList\r\n            medicines={!!parsedData.eRecipeItems ? parsedData.eRecipeItems : []}\r\n          ></RequiredMedicineList>\r\n          <Container>\r\n            <Row className=\"align-content-between\">\r\n              <Col md={{ span: 3, offset: 2 }}>\r\n                <Form.Group>\r\n                  <Form.Label>Sort by</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => {\r\n                      setSortBy(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"totalPrice\" selected>\r\n                      Total price\r\n                    </option>\r\n                    <option value=\"name\">Pharmacy name</option>\r\n                    <option value=\"avgGrade\">Pharmacy grade</option>\r\n                    <option value=\"addressCity\">City</option>\r\n                    <option value=\"street\">Street</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={{ span: 3, offset: 2 }}>\r\n                <Form.Group>\r\n                  <Form.Label>Order</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => {\r\n                      setSortOrder(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"ASC\" selected>\r\n                      Ascending\r\n                    </option>\r\n                    <option value=\"DESC\">Descending</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n        <PharmacyWithMedicineList\r\n          pharmacies={pharmacies}\r\n          doBuy={(pharmacy) => {\r\n            doBuy(pharmacy);\r\n          }}\r\n        >\r\n          {\" \"}\r\n        </PharmacyWithMedicineList>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERecipeSearch;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Table, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction EPrescriptionReview() {\r\n  const [entities, setEntitites] = useState([]);\r\n  const [selectedEntity, setSelectedEntity] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n  const [reload2, setReload2] = useState(false);\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchEntities() {\r\n      const request = await axios\r\n        .get(\"/api/e-recipes/patient/\" + getIdFromToken())\r\n        .then((res) => {\r\n          setEntitites(res.data);\r\n          setReload2(!reload2);\r\n        })\r\n        .catch((err) => {\r\n          addToast(err.response.data, { appearance: \"error\" });\r\n        });\r\n\r\n      return request;\r\n    }\r\n    fetchEntities();\r\n  }, [reload]);\r\n\r\n  useEffect(() => {\r\n    doFiltering();\r\n  }, [reload2]);\r\n\r\n  const updateSelectedEntity = (selectedEntity) => {\r\n    setSelectedEntity(selectedEntity);\r\n  };\r\n\r\n  const doSorting = (sortParam) => {\r\n    if (sortParam === \"none\") return;\r\n\r\n    entities.sort(function (e1, e2) {\r\n      return e1.prescriptionDate - e2.prescriptionDate;\r\n    });\r\n\r\n    if (sortParam === \"desc\") {\r\n      entities.reverse();\r\n    }\r\n  };\r\n\r\n  const doFiltering = () => {\r\n    if (filter === \"none\") {\r\n      return;\r\n    }\r\n\r\n    let filtered = [];\r\n    for (let i = 0; i < entities.length; i++) {\r\n      if (filter === \"Processed\" && entities[i].state === \"PROCESSED\") {\r\n        filtered.push(entities[i]);\r\n      } else if (filter === \"New\" && entities[i].state === \"NEW\") {\r\n        filtered.push(entities[i]);\r\n      } else if (filter === \"Rejected\" && entities[i].state === \"REJECTED\") {\r\n        filtered.push(entities[i]);\r\n      }\r\n    }\r\n\r\n    setEntitites(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"consultation__insight__content\">\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          display: entities.length === 0 && filter === \"none\" ? \"flex\" : \"none\",\r\n        }}\r\n      >\r\n        <h3>You don't have any e-prescriptions!</h3>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          display: entities.length === 0 && filter === \"none\" ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            {sorter}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setSorter(\"none\");\r\n                doSorting(\"none\");\r\n              }}\r\n            >\r\n              none\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setSorter(\"Dispensing date (ascending)\");\r\n                doSorting(\"asc\");\r\n              }}\r\n            >\r\n              Dispensing date (ascending)\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setSorter(\"Dispensing date (descending)\");\r\n                doSorting(\"desc\");\r\n              }}\r\n            >\r\n              Dispensing date (descending)\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Form.Label style={{ marginRight: \"20px\" }}>Filter: </Form.Label>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            {filter}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"none\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              none\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"Processed\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              Processed\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"New\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              New\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"Rejected\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              Rejected\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          justifyContent: \"space-between\",\r\n          display: entities.length === 0 && filter === \"none\" ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <Table\r\n          striped\r\n          bordered\r\n          variant=\"light\"\r\n          className=\"my__table__pharmacies\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Code</th>\r\n              <th>State</th>\r\n              <th>Prescription date</th>\r\n              <th>Dispensing date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {entities &&\r\n              entities.map((e) => (\r\n                <tr\r\n                  key={e.code}\r\n                  onClick={() => updateSelectedEntity(e)}\r\n                  className={\r\n                    selectedEntity?.code === e.code\r\n                      ? \"my__row__selected my__table__row\"\r\n                      : \"my__table__row\"\r\n                  }\r\n                >\r\n                  <td>{e.code}</td>\r\n                  <td>{e.state}</td>\r\n                  <td>\r\n                    {moment(e.prescriptionDate).format(\"DD-MM-YYYY HH:mm:ss\")}\r\n                  </td>\r\n                  <td>\r\n                    {e.dispensingDate != null\r\n                      ? moment(e.dispensingDate).format(\"DD-MM-YYYY HH:mm:ss\")\r\n                      : \"/\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          display: selectedEntity == null ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <h3>Medicines of e-prescription</h3>\r\n      </Row>\r\n      <Row style={{ display: selectedEntity == null ? \"none\" : \"flex\" }}>\r\n        <Table\r\n          striped\r\n          bordered\r\n          variant=\"light\"\r\n          className=\"my__table__pharmacies\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Code</th>\r\n              <th>Name</th>\r\n              <th>Quanitiy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedEntity &&\r\n              selectedEntity.eRecipeItems.map((e) => (\r\n                <tr key={e.medicineCode}>\r\n                  <td>{e.medicineCode}</td>\r\n                  <td>{e.medicineName}</td>\r\n                  <td>{e.quantity}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EPrescriptionReview;\r\n","import React from \"react\";\r\nimport { Col, Nav, Row, Tab, TabPane } from \"react-bootstrap\";\r\nimport EPrescriptionSearch from \"./EPrescriptionSearch\";\r\nimport EPrescriptionReview from \"./EPrescriptionReview\";\r\n\r\nfunction EPrescriptionPage() {\r\n  return (\r\n    <main className=\"home__page\">\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey=\"first\"\r\n        unmountOnExit\r\n      >\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Upload\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                  Review\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col\r\n            className=\"my__container\"\r\n            sm={9}\r\n            md={9}\r\n            lg={10}\r\n            xs={12}\r\n            style={{ backgroundColor: \"rgba(228, 245, 245, 0.897)\" }}\r\n          >\r\n            <Tab.Content>\r\n              <TabPane eventKey=\"first\">\r\n                <EPrescriptionSearch />\r\n              </TabPane>\r\n              <TabPane eventKey=\"second\">\r\n                <EPrescriptionReview />\r\n              </TabPane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EPrescriptionPage;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\n\r\nconst AddEditCategoryModal = (props) => {\r\n  const [name, setName] = useState(!!props.category ? props.category.name : \"\");\r\n  const [requiredPoints, setRequiredPoints] = useState(\r\n    props.category ? props.category.pointsRequired : 0\r\n  );\r\n  const [discount, setDiscount] = useState(\r\n    props.category ? props.category.discount : 0.0\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let data = {\r\n      id: !!props.category ? props.category.id : -1,\r\n      name: name,\r\n      pointsRequired: parseInt(requiredPoints),\r\n      discount: parseFloat(discount),\r\n    };\r\n\r\n    api\r\n      .post(\"/api/ranking-category/\", data)\r\n      .then(() => {\r\n        props.onAddEdit();\r\n        props.onHide();\r\n      })\r\n      .catch(() => {\r\n        alert(\"Error\");\r\n      });\r\n  };\r\n\r\n  const resetData = () => {\r\n    setName(\"\");\r\n    setRequiredPoints(0);\r\n    setDiscount(0.0);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      onEnter={() => {\r\n        resetData();\r\n      }}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {!!props.category\r\n            ? `Edit ${props.category.name}`\r\n            : \"Add new category\"}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"input\"\r\n              onChange={(event) => setName(event.target.value)}\r\n              defaultValue={!!props.category ? props.category.name : \"\"}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Required points</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setRequiredPoints(event.target.value)}\r\n              defaultValue={\r\n                !!props.category ? props.category.pointsRequired : 0\r\n              }\r\n              min={0}\r\n              max={100000}\r\n              step={1}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Discount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setDiscount(event.target.value)}\r\n              defaultValue={!!props.category ? props.category.discount : 0.0}\r\n              min={0}\r\n              max={100.0}\r\n              step={0.01}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Container>\r\n            <Row>\r\n              <Col md={{ span: 4, offset: 0 }}>\r\n                <Button variant=\"outline-danger\" onClick={props.onHide}>\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n              <Col md={{ span: 4, offset: 4 }}>\r\n                <Button variant=\"outline-secondary\" type=\"submit\">\r\n                  Confirm\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEditCategoryModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\nimport api from \"../../app/api\";\r\nimport AddEditCategoryModal from \"./AddEditCategoryModal\";\r\n\r\nconst CategoryItem = ({ category, onItemChanged }) => {\r\n  const [showAddEditModal, setShowAddEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const deleteCategory = () => {\r\n    api.delete(`/api/ranking-category/${category.id}`).then(() => {\r\n      onItemChanged();\r\n    });\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const editCategory = () => {\r\n    onItemChanged();\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ marginBottom: \"20px\" }}>\r\n      <Card.Header>\r\n        <Container>\r\n          <Row>\r\n            <Col md={{ span: 3, offset: 0 }}>{`${category.name}`}</Col>\r\n            <Col md={{ span: 4, offset: 5 }}>\r\n              <div style={{ float: \"right\" }}>{`${category.discount}%`}</div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Container>{`Points required: ${category.pointsRequired}`}</Container>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Container>\r\n          <Row>\r\n            <Col md={{ span: 4, offset: 0 }}>\r\n              <Button\r\n                variant=\"outline-success\"\r\n                style={{ width: \"100%\", marginLeft: \"0\" }}\r\n                onClick={() => {\r\n                  setShowAddEditModal(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 4 }}>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                style={{ width: \"100%\" }}\r\n                onClick={() => {\r\n                  setShowDeleteModal(true);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Footer>\r\n      <DeleteModal\r\n        title={\"Remove \" + category.name}\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        onDelete={deleteCategory}\r\n      />\r\n      <AddEditCategoryModal\r\n        show={showAddEditModal}\r\n        category={category}\r\n        onHide={() => setShowAddEditModal(false)}\r\n        onAddEdit={editCategory}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport AddEditCategoryModal from \"./AddEditCategoryModal\";\r\nimport CategoryItem from \"./CategoryItem\";\r\n\r\nconst CategoryList = () => {\r\n  const [components, setComponents] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [showAddEditModal, setShowAddEditModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    api.get(`/api/ranking-category/`).then((res) => {\r\n      setComponents(res.data);\r\n    });\r\n  }, [refresh]);\r\n\r\n  const addCategory = () => {\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginBottom: \"30px\", marginTop: \"30px\" }} fluid>\r\n      <Row>\r\n        <Col md={{ span: 4, offset: 4 }}>\r\n          <div>\r\n            {components.map((c) => {\r\n              return (\r\n                <CategoryItem\r\n                  key={c.id}\r\n                  category={c}\r\n                  onItemChanged={() => {\r\n                    setRefresh(!refresh);\r\n                  }}\r\n                ></CategoryItem>\r\n              );\r\n            })}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ span: 2, offset: 5 }}>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            variant=\"outline-secondary\"\r\n            onClick={() => {\r\n              setShowAddEditModal(true);\r\n            }}\r\n          >\r\n            Add new category\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <AddEditCategoryModal\r\n        show={showAddEditModal}\r\n        onHide={() => setShowAddEditModal(false)}\r\n        onAddEdit={addCategory}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import { React, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils.js\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst GuardedRoute = ({ component: Component, userType, ...rest }) => {\r\n  const { addToast } = useToasts();\r\n  useEffect(() => {\r\n    if (userType != undefined) {\r\n      if (!userType.includes(getUserTypeFromToken())) {\r\n        addToast(\"Unauthorized!\", {\r\n          appearance: \"error\",\r\n        });\r\n      }\r\n    }\r\n  }, [userType]);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userType.includes(getUserTypeFromToken()) ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default GuardedRoute;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport Registration from \"./components/Registration\";\r\nimport HomePage from \"./components/utilComponents/HomePage\";\r\nimport PharmacyAdminHomePage from \"./components/pharmacyAdmin/PharmacyAdminHomePage\";\r\nimport UserProfile from \"./components/profile/UserProfile\";\r\nimport Footer from \"./components/Footer\";\r\nimport PharmacyProfile from \"./components/pharmacyProfile/PharmacyProfile\";\r\nimport MedicineProfile from \"./components/medicine/MedicineProfile\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport DermHomePage from \"./components/workers/dermatologist/home_page_dermatologist\";\r\nimport PharmHomePage from \"./components/workers/pharmacist/home_page_pharmacist\";\r\nimport PharmacyCrud from \"./components/pharmacy/PharmacyCrud\";\r\nimport MedicineCrud from \"./components/medicine/MedicineCrud\";\r\nimport SearchPatPage from \"./components/workers/search_patients\";\r\nimport SearchExaminedPatPage from \"./components/workers/list_examined\";\r\nimport CommonHeader from \"./components/utilComponents/header/CommonHeader\";\r\nimport BasicProfileInfo from \"./components/profile/BasicProfileInfo\";\r\n\r\nimport WorkCalendar from \"./components/workers/work_calendar\";\r\nimport AppointmentReport from \"./components/workers/appointment_report\";\r\nimport VacationRequest from \"./components/workers/vacation_request\";\r\nimport DermatologistProfile from \"./components/workers/dermatologist_profile\";\r\nimport PharmacistProfile from \"./components/workers/pharmacist_profile\";\r\nimport IssueMedicine from \"./components/workers/issue_medicine\";\r\n\r\nimport UserCrud from \"./components/users/UserCrud\";\r\nimport PharmaciesWithFreePharmacists from \"./components/unregisteredAndPatient/PharmaciesWithFreePharmacists\";\r\nimport ConsultationsInsight from \"./components/unregisteredAndPatient/ConsultationsInsight\";\r\nimport CheckupsInsight from \"./components/unregisteredAndPatient/CheckupsInsight\";\r\nimport SubscribedPharmacies from \"./components/unregisteredAndPatient/SubscribedPharmacies\";\r\nimport ReservedMedicines from \"./components/unregisteredAndPatient/ReservedMedicines\";\r\nimport Rating from \"./components/unregisteredAndPatient/Rating\";\r\nimport ComplaintsPage from \"./components/complaints/ComplaintsPage\";\r\nimport ComplaintResponsesPage from \"./components/complaintResponses/ComplaintResponsesPage\";\r\nimport EPrescriptionPage from \"./components/ePrescription/EPrescriptionPage\";\r\nimport CategotyList from \"./components/loyaltyProgram/CategoryList\";\r\n\r\nimport \"./styling/navbar.css\";\r\n\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\nimport GuardedRoute from \"./components/utilComponents/GuardedRoute\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ToastProvider\r\n      autoDismiss=\"true\"\r\n      autoDismissTimeout=\"4000\"\r\n      placement=\"top-center\"\r\n    >\r\n      <Router>\r\n        <div style={{ minHeight: \"100vh\" }}>\r\n          <CommonHeader />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n\r\n            {/* null znaci da moze i neregistrovani korisnik */}\r\n            <GuardedRoute\r\n              path=\"/registration\"\r\n              component={Registration}\r\n              userType={[null]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/login\"\r\n              component={LoginPage}\r\n              userType={[null]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/pharmacy/:id\"\r\n              component={PharmacyProfile}\r\n              userType={[null, \"PATIENT\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/medicine/:id/pharmacy/:pid/price/:priceid\"\r\n              component={MedicineProfile}\r\n              userType={[null, \"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/profile\"\r\n              exact\r\n              component={UserProfile}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/infoProfile\"\r\n              exact\r\n              component={BasicProfileInfo}\r\n              userType={[\r\n                \"ADMIN\",\r\n                \"PHARMACIST\",\r\n                \"DERMATOLOGIST\",\r\n                \"SUPPLIER\",\r\n                \"PHARMACY_ADMIN\",\r\n              ]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/reserve-consultation/pharmacies\"\r\n              component={PharmaciesWithFreePharmacists}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/consultations-insight\"\r\n              component={ConsultationsInsight}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/subscribed-pharmacies\"\r\n              component={SubscribedPharmacies}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/rating\"\r\n              component={Rating}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/reserved-medicines\"\r\n              component={ReservedMedicines}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/checkups-insight\"\r\n              component={CheckupsInsight}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            {/* Ne treba nam ovo jer gore imamo home page koji koristi sve ove */}\r\n            {/* <Route path=\"/dermatologist\" component={DermHomePage} />\r\n            <Route path=\"/pharmacist\" component={PharmHomePage} />\r\n            <Route path=\"/pharmacyAdmin\" component={PharmacyAdminHomePage} /> */}\r\n\r\n            <GuardedRoute\r\n              path=\"/admin/pharmacies\"\r\n              component={PharmacyCrud}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/medicine\"\r\n              component={MedicineCrud}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/worker/search-patients\"\r\n              component={SearchPatPage}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/dermatologist_profile\"\r\n              component={DermatologistProfile}\r\n              userType={[\"DERMATOLOGIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/pharmacist_profile\"\r\n              component={PharmacistProfile}\r\n              userType={[\"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/users\"\r\n              component={UserCrud}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/examined\"\r\n              component={SearchExaminedPatPage}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/calendar\"\r\n              component={WorkCalendar}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/appointment_report\"\r\n              component={AppointmentReport}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/vacation\"\r\n              component={VacationRequest}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/issue_medicine\"\r\n              component={IssueMedicine}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/user/complaints\"\r\n              component={ComplaintsPage}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/complaint-responses\"\r\n              component={ComplaintResponsesPage}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/e-prescription\"\r\n              component={EPrescriptionPage}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/loyalty\"\r\n              component={CategotyList}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </ToastProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport user from './slices/userSlice'\r\n\r\nconst reducer = combineReducers({\r\n  user,\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n});\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styling/index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}