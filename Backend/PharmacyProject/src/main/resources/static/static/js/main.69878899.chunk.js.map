{"version":3,"sources":["app/api.js","app/errorHandler.js","app/slices/userSlice.js","app/validator.js","app/jwtTokenUtils.js","components/utilComponents/formGroups/TextFormGroup.js","components/utilComponents/formGroups/EmailFormGroup.js","components/utilComponents/formGroups/PasswordFormGroup.js","components/users/Login.js","components/LoginPage.js","components/utilComponents/formGroups/FirstNameFormGroup.js","components/utilComponents/formGroups/LastNameFormGroup.js","components/utilComponents/formGroups/PhoneNumberFormGroup.js","components/utilComponents/formGroups/CityFormGroup.js","components/utilComponents/formGroups/CountryFormGroup.js","components/utilComponents/formGroups/StreetFormGroup.js","components/Registration.js","components/pharmacyAdmin/EditBasicInfo.js","components/pharmacyAdmin/AddPurchaseOrderModal.js","components/pharmacyAdmin/SelectOfferModal.js","components/pharmacyAdmin/EditOrderModal.js","components/pharmacyAdmin/DisplayPurchaseOrders.js","components/pharmacyAdmin/AddAppointment.js","components/pharmacyAdmin/AddingMedicineModal.js","components/pharmacyAdmin/ChangePriceModal.js","components/pharmacyAdmin/DisplayMedicine.js","components/pharmacyAdmin/RejectRequestModal.js","components/pharmacyAdmin/DisplayHolidayRequests.js","components/pharmacyAdmin/AddingWorkerModal.js","components/pharmacyAdmin/DetailsOfWorkerModal.js","components/pharmacyAdmin/DisplayWorkers.js","components/pharmacyAdmin/DisplayInquiries.js","components/pharmacyAdmin/DisplayReports.js","components/pharmacyAdmin/AddAdvertismentModal.js","components/pharmacyAdmin/AdvertismentTab.js","components/utilComponents/modals/SetPasswordModal.js","components/pharmacyAdmin/PharmacyAdminHomePage.js","components/workers/appointment_start_modal.js","components/workers/pharmacist/home_page_pharmacist.js","components/workers/dermatologist/home_page_dermatologist.js","components/unregisteredAndPatient/PharmaciesView.js","components/unregisteredAndPatient/MedicineSearchAndFilter.js","components/unregisteredAndPatient/MedicinesView.js","components/unregisteredAndPatient/UnregistredAndPatientHomePage.js","components/supplier/stock/AddEditStockItemModal.js","components/supplier/stock/SupplierStock.js","components/supplier/offers/AddEditOfferModal.js","components/supplier/orders/OrderMedicineList.js","components/supplier/orders/OrderItem.js","components/supplier/orders/NewOrders.js","components/supplier/offers/OfferItem.js","components/supplier/offers/SupplierOffers.js","components/supplier/SupplierHomePage.js","components/utilComponents/AdminHomePage.js","components/utilComponents/HomePage.js","components/profile/AllergyRow.js","components/profile/Allergies.js","components/profile/PatientBenefits.js","components/profile/PatientPenalties.js","components/profile/BasicProfileInfo.js","components/profile/UserInfoComponent.js","components/profile/UserProfile.js","components/Footer.js","components/pharmacyProfile/PharmacyBasic.js","components/pharmacyProfile/MedicineAdminView.js","components/pharmacyProfile/AppointmentView.js","components/pharmacyProfile/WorkersView.js","components/pharmacyProfile/ERecipeSearchInPharmacy.js","components/pharmacyProfile/PharmacyProfile.js","components/medicine/MedicineProfile.js","components/utilComponents/modals/DeleteModal.js","components/utilComponents/MapElement.js","components/pharmacy/AddPharmacyModal.js","components/pharmacy/EditPharmacyModal.js","components/pharmacy/PharmacyTable.js","components/pharmacy/PharmacySearchPanel.js","components/pharmacy/PharmacyCrud.js","components/medicine/MedicineSearchPanel.js","components/medicine/MedicineRow.js","components/utilComponents/medicineFormGroups/MedicineNameFromGroup.js","components/utilComponents/medicineFormGroups/MedicineCodeFormGroup.js","components/utilComponents/medicineFormGroups/MedicineContentFormGroup.js","components/utilComponents/medicineFormGroups/SideEffectsFormGroup.js","components/utilComponents/medicineFormGroups/AdditionalNotesFormGroup.js","components/medicine/AddMedicineModal.js","components/medicine/EditMedicineModal.js","components/medicine/AddMedicineTypeModal.js","components/medicine/AddMedicineFormModal.js","components/medicine/AddManufacturerModal.js","components/medicine/MedicineTable.js","components/medicine/MedicineCrud.js","components/workers/appointments_modal.js","components/workers/search_patients.js","components/workers/list_examined.js","components/utilComponents/header/AdminHeader.js","components/utilComponents/header/UnregistredHeader.js","components/utilComponents/header/PatientHeader.js","components/utilComponents/header/SupplierHeader.js","components/utilComponents/header/PharmacyAdminHeader.js","components/utilComponents/header/DermatologistHeader.js","components/utilComponents/header/PharmacistHeader.js","components/utilComponents/header/CommonHeader.js","components/workers/appointment_info_modal.js","components/workers/work_calendar.js","components/workers/appointment_report_therapy_modal.js","components/workers/appointment_report_schedule_modal.js","components/workers/appointment_report.js","components/workers/vacation_modal.js","components/workers/vacation_request.js","components/workers/dermatologist_profile.js","components/workers/pharmacist_profile.js","components/workers/issue_medicine.js","components/users/AddUserModal.js","components/users/EditUserModal.js","components/users/UserRow.js","components/users/UserTable.js","components/users/UserSearchPanel.js","components/users/UserCrud.js","components/unregisteredAndPatient/PharmaciesWithFreePharmacists.js","components/unregisteredAndPatient/ConsultationsInsight.js","components/unregisteredAndPatient/CheckupsInsight.js","components/unregisteredAndPatient/SubscribedPharmacies.js","components/unregisteredAndPatient/ReservedMedicines.js","components/unregisteredAndPatient/Rating.js","components/complaints/SubmitComplaintForm.js","components/complaints/ComplaintDetails.js","components/complaints/ComplaintHistory.js","components/complaints/ComplaintsPage.js","components/complaintResponses/ComplaintResponse.js","components/complaintResponses/NewComplaintsList.js","components/complaintResponses/ComplaintResponseDetails.js","components/complaintResponses/ComplaintResponsesHistory.js","components/complaintResponses/ComplaintResponsesPage.js","components/ePrescription/PharmacyWithMedicineItem.js","components/ePrescription/PharmacyWithMedicineList.js","components/ePrescription/RequiredMedicineList.js","components/ePrescription/EPrescriptionSearch.js","components/ePrescription/EPrescriptionReview.js","components/ePrescription/EPrescriptionPage.js","components/loyaltyProgram/AddEditCategoryModal.js","components/loyaltyProgram/CategoryItem.js","components/loyaltyProgram/CategoryList.js","components/utilComponents/GuardedRoute.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","e","error","Promise","reject","getErrorMessage","err","response","data","message","initialUser","slice","createSlice","name","initialState","user","reducers","loginSuccess","state","action","payload","setItem","stringify","logoutSuccess","removeItem","actions","logout","dispatch","a","console","textValidator","input","required","pattern","minLength","maxLength","valid","main","match","options","regex","RegExp","test","length","Validator","getIdFromToken","atob","split","id","getUserTypeFromToken","userType","TextFormGroup","placeholder","defaultValue","onChange","disabled","props","useState","errors","setErrors","setRegex","useEffect","re","findGroupErrors","fieldText","Form","Group","Label","Control","type","isInvalid","event","target","value","bind","this","Feedback","defaultProps","EmailFormGroup","PasswordFormGroup","Login","email","password","form","setForm","useDispatch","useSelector","addToast","useToasts","setField","field","to","noValidate","onSubmit","preventDefault","stopPropagation","post","res","login","then","appearance","className","Button","variant","LoginPage","FirstNameFormGroup","LastNameFormGroup","CityFormGroup","CountryFormGroup","StreetFormGroup","Registration","firstName","lastName","repeatPassword","telephone","city","street","country","formRef","useRef","sendPostRequest","newForm","convertForm","current","reset","pathname","catch","address","roleName","style","minHeight","padding","paddingBottom","ref","PhoneNumberFormGroup","EditBasicInfo","pharmacyDetails","changedPharmacy","fixing","setFixing","editMode","setEditMode","setValid","description","longitude","latitude","text","setText","handleChange","key","validateData","handleClickOnMap","get","countryName","locality","isValid","list","Number","parseInt","toString","location","document","getElementById","innerHTML","map","Map","layers","TileLayer","source","OSM","view","View","center","fromLonLat","zoom","minZoom","maxZoom","on","evt","coords","toLonLat","coordinate","lat","lon","removeEventListener","Tab","Pane","eventKey","Row","Col","lg","md","sm","as","controlId","column","size","onClick","dto","put","AddPurchaseOrderModal","selectedRowId","setSelectedRowId","selectedName","setSelectedName","amount","setAmount","orders","setOrders","selectedItems","setSelectedItems","startDate","setStartDate","Modal","onExited","aria-labelledby","centered","Header","closeButton","Title","Body","Container","xs","Table","bordered","hover","striped","medicineList","item","index","medicineId","includes","medicine","code","avgGrade","di","min","ListGroup","Item","filter","date","array","d","Date","setHours","now","getTime","changeDate","Footer","onHide","handleAdd","SelectOfferModal","offers","setOffers","orderId","undefined","fetchOffer","price","moment","deliveryDat","format","worker","handleSelect","EditOrderModal","order","handleEdit","DisplayPurchaseOrders","idOfPharmacy","priceListId","refresh","refreshInq","setRefreshInq","filterValue","setFilterValue","showedOrders","setShowedOrders","showedOrder","setShowedOrder","pagNumber","setPugNummber","maxPag","setMaxPag","dropdownLabel","setDropdownLabel","selectOfferModalShow","setSelectOfferModalShow","showEditOrderModal","setShowEditOrderModal","showSpinner","setShowSpinner","addModalShow","setAddModalShow","medicineItems","setMedicineItems","fetchOrders","params","fetchPriceList","filterOrders","param","pharmacyId","deadline","items","adminId","delete","maxNumber","Math","floor","first","max","deleteOrder","deletePOrder","selectedOfferId","Dropdown","Toggle","Menu","show","addPurchaseOrder","Card","width","height","Pagination","Prev","Next","Alert","Heading","editOrder","Spinner","display","animation","selectOrder","orderItem","AddAppointment","dermatologists","setDermatologists","appointments","setAppointments","startHour","setStartHour","dermatogistPicked","setDermatogistPicked","duration","setDuration","setPrice","setRefresh","fetchDermatologists","fetchAppointments","i","flag","j","workDays","weekday","localeCompare","substring","toUpperCase","d1","d2","startTime","endTime","reloadForm","dermatologist","long","log","appointment","appointmentState","AddingMedicineModal","setMedicineList","fetchMedicine","medicineItemsLength","content","ChangePriceModal","onEntered","oldPrice","DisplayMedicine","refreshPriceList","setRefreshPriceList","selectedRowPrice","setSelectedRowPrice","changePriceModalShow","setChangePriceModalShow","removeModalShow","setRemoveModalShow","selectedMedicineId","handleRemove","removeMedicine","medicineItemId","price2","addMedicine","changePrice","RejectRequestModal","reason","setReason","rows","rejectRequest","DisplayHolidayRequests","requests","setRequests","showAlert","setShowAlert","fetchRequests","requestId","absenceType","requestState","start","end","workerDetails","acceptRequest","AddingWorkerModal","workerList","setWorkerList","endHour","setEndHour","enable1","setEnable1","enable2","setEnable2","enable3","setEnable3","enable4","setEnable4","enable5","setEnable5","enable6","setEnable6","enable7","setEnable7","DetailsOfWorkerModal","workerId","handleClose","DisplayWorkers","pharmacies","setPharmacies","pharamcyNameMap","setPharamcyNameMap","workers","setWorkers","showedWorkers","setShowedWorkers","selectedWorker","setSelectedWorker","detailsModalShow","setDetailsModalShow","fsearch","setFSearch","filterGrade","setFilterGrade","filterPharmacyName","setFilterPharmacyName","fetchWorkers","resp","fetchPharmacies","fetchNames","result","searchValue","marginTop","removeWorker","workersLength","addWorker","DisplayInquiries","inquiries","setInquiries","showedInquiries","setShowedInquiries","filterInquiries","fetchInquiries","active","DisplayReports","chartData","setChartData","selectedChart","setSelectedChart","selectedPeriod","setSelectedPeriod","profitDisplay","setProfitDisplay","appointmentsData","setAppointmentsData","drugConsumptionData","setDrugConsumptionData","profitData","setProfitData","properties","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","plugins","title","fetchDataOfAppointmentsForReport","fetchDataForDrugConsumptionForReport","fetchProfitReport","drawGraph","colors2","datasets","labels","Object","keys","colors","genRandomColors","dataset1","label","values","backgroundColor","borderColor","borderWidth","push","dataset2","colors3","dataset3","random","randomColor","InputGroup","Prepend","Text","AddAdvertismentModal","endDate","setEndDate","discount","setDiscount","setType","AdvertismentTab","setList","fetchAdvertisment","medicineItem","discountPercent","advertisementText","addAdverb","SetPasswordModal","errorMessage","setErrorMessage","setPassword","setRepeatPassword","handleSet","newPassword","onPasswordSet","backdrop","isPasswordSet","PharmacyAdminHomePage","setPharmacyDetails","setPharmacyId","setLoadingPWChanged","showModalPWChange","setShowModalPWChange","fetchPharmacy","fetchPharmacyid","passwordChanged","defaultActiveKey","Nav","Link","Content","AppointmentStartModal","history","useHistory","patient","subtract","bodyFormData","FormData","append","appointmentID","add","onCancelMethod","PharmHomePage","showModal","setShowModal","startAppt","setStartAppt","loadingPWChanged","loadingAppts","setLoadingAppts","float","color","textAlign","id_farm","page","DermHomePage","pharmacy","id_derm","PharmaciesView","backup","setBackup","showedPharmacies","setShowedPharmacies","filterDistance","setFilterDistance","sorter","setSorter","ascDesc","setAscDesc","reload","setReload","triggered","setTriggered","div","blocker","calculateDistance","lon2","lat2","lat1","lon1","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","doSorting","sort","ph1","ph2","reverse","classList","remove","marginRight","filtered","navigator","geolocation","getCurrentPosition","position","filteringList","paddingTop","fluid","ListGroupItem","Array","ceil","MedicineSearchAndFilter","medicineType","setMedicineType","medicineForm","setMedicineForm","medTypes","setMedTypes","medForms","setMedForms","medName","setMedName","generateSearchParams","updateParams","marginBottom","custom","mt","mf","MedicinesView","medicines","setMedicines","showedMedicines","setShowedMedicines","searchParams","setSearchParams","fetchMedicines","newParams","updateSearchParams","UnregistredAndPatientHomePage","AddEditStockItemModal","singleSelection","setSingleSelection","setOptions","medicineName","onSuccess","labelKey","option","selected","step","SupplierStock","stock","setStock","showAddEditModal","setShowAddEditModal","fetchStock","margin","stockItem","AddEditOfferModal","itemsToRender","offer","totalPrice","setTotalPrice","deliveryDate","selectedDate","setSelectedDate","addOffer","editOffer","convertDate","timestamp","year","getFullYear","month","getMonth","day","getDate","oi","offerState","dateString","OrderMedicineList","orderItems","OrderItem","showAddOfferModal","setShowAddOfferModal","borderRadius","FormGroup","FormLabel","orderState","toLocaleDateString","offset","span","NewOrders","setMessage","isArray","o","OfferItem","showEditOfferModal","setShowEditOfferModal","setOrder","fetchOrder","SupplierOffers","currentOfferType","setCurrentOfferType","fetchOffers","SupplierHomePage","unmountOnExit","TabPane","AdminHomePage","HomePage","homePage","AllergyRow","allergy","deleteClick","Allergies","allergies","setAllergies","selectedMedicine","setSelectedMedicine","showAddModal","setShowAddModal","fetchData","reloadTable","m","updateSelectedMedicine","PatientBenefits","points","setPoints","category","setCategory","fetchPoints","fetchCategory","pointsRequired","fontWeight","PatientPenalties","penalties","setPenalties","fetchPenalties","BasicProfileInfo","setUser","showUser","setShowUser","oldPassword","passwordDTO","setPasswordDTO","isEdit","setEdit","showPasswordModal","setShowPasswordModal","inputType","setInputType","fetchUser","handleClick","handleClick2","forSend","left","right","UserInfo","UserProfile","col_width","PharmacyBasic","details","isUserSubscribed","setIsUserSubscribed","checkIfUserIsSubscribed","hidden","alert","AppointmentView","appointsments","setAppointsments","showedAppointsments","setShowedAppointsments","fetchAppointsments","search_params","URLSearchParams","appointsment","appointmentType","textDecoration","WorkersView","ERecipeSearchInPharmacy","QRImage","setQRImage","parsedData","setParsedData","method","url","formData","handleSubmit","File","Input","files","handleFileChange","PharmacyProfile","useParams","MedicineProfile","setMedicine","pickupDate","setPickupDate","selectedPharmacy","setSelectedPharmacy","pid","priceid","href","rel","sideEffects","dailyIntake","recipeRequired","additionalNotes","manufacturer","p","updateSelectedPharmacy","closeOnScroll","dateFormat","isClearable","fontSize","userId","DeleteModal","class","bodyText","onDelete","MapElement","defAddress","setMap","featuresLayer","setFeaturesLayer","selectedCoord","setSelectedCoord","setAddress","setLocation","mapElement","locationPoint","Feature","geometry","Point","iconStyle","Style","image","Icon","anchor","src","setStyle","vectorSource","VectorSource","features","initFeatureLayer","VectorLayer","initMap","handleMapClick","newCoordinates","transformed","transform","updateFields","jsonData","parseJsonData","addressData","l","newFeatureLayer","removeLayer","addLayer","for","AddPharmacyModal","pharmacyAdmin","pointsForAppointment","pharmacyAdmins","setPharmacyAdmins","multiSelections","setMultiSelections","admins","pa","dialogClassName","multiple","renderToken","onRemove","newErrors","validate","validateAddress","EditPharmacyModal","setSelected","sendPutRequest","onShow","PharmacyTable","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","PharmacySearchPanel","PharmacyCrud","MedicineSearchPanel","MedicineRow","editClick","detailsClick","window","open","MedicineNameFormGroup","MedicineCodeFormGroup","MedicineContentFormGroup","SideEffectsFormGroup","AdditionalNotesFormGroup","AddMedicineModal","manufacturers","setManufacturers","alternativeMedicine","EditMedicineModal","setCode","setName","setContent","medicineTypeName","setMedicineTypeName","medicineFormName","setMedicineFormName","setSideEffects","setRecipeRequired","setDailyIntake","manufacturerName","setManufacturerName","setAdditionalNotes","setAlternativeMedicine","AddMedicineTypeModal","AddMedicineFormModal","AddManufacturerModal","setManufacturer","MedicineTable","showAddMedicineTypeModal","setShowAddMedicineTypeModal","showAddMedicineFormModal","setShowAddMedicineFormModal","showAddManufacturerModal","setShowAddManufacturerModal","medi","MedicineCrud","AppointmentsModal","onCancel","appt","info","onCancelAppointment","onCloseModal","patientName","trim","ButtonGroup","onStart","SearchPatPage","patients","setPatients","fName","setFName","lName","setLName","setPatient","currFetchState","setCurrFetchState","fetchPatients","pat_to_show","onShowAppointmentsButton","SearchExaminedPatPage","sort1","setSort1","sort2","setSort2","sort3","setSort3","sortWay1","setSortWay1","sortWay2","setSortWay2","sortWay3","setSortWay3","currUserType","setCurrUserType","user_type","DatePicker","appointmentStart","AdminHeader","userChanged","Navbar","sticky","expand","Brand","aria-controls","Collapse","UnregistredHeader","PatientHeader","SupplierHeader","PharmacyAdminHeader","DermatologistHeader","PharmacistHeader","CommonHeader","header","AppointmentInfoModal","apptInfo","setApptInfo","onHideFun","therapyDTOList","therapyLength","WorkCalendar","eventi","setEventi","showModalInfo","setShowModalInfo","currUser","setCurrUser","user_id","appts","reqVac","concat","dayGridPlugin","timeGridPlugin","resourceTimelinePlugin","headerToolbar","allDaySlot","events","initialView","eventClick","extendedProps","calendarType","k","views","WeekView","buttonText","weeks","eventContent","propi","html","eventDidMount","tippy","el","allowHTML","setProp","MonthView","months","slotDuration","days","dayMaxEvents","YearView","years","visibleRange","startOf","toDate","endOf","TherapyMedicineModal","primaryOptions","setPrimaryOptions","showHidePrimary","setShowHidePrimary","alternativeSelection","setAlternativeSelection","alternativeOptions","setAlternativeOptions","showHideSecondary","setShowHideSecondary","alternativeError","setAlternativeError","pharm_id","pharmacyID","pat_id","patientID","exitModal","clickedShow","onHideModal","isNaN","therapyLen","onAddMedicine","scrollable","med_item_id","med_id","worker_id","setAlternatives","medicineItemID","medicineID","ScheduleAnotherApp","workersWorktime","setWorkersWorktime","showWorkTime","setShowWorkTime","apptsOnSelectedDate","setApptsOnSelectedDate","startHours","setStartHours","startMinutes","setStartMinutes","workerID","valueOf","holidays","workDayList","minDate","hours","minutes","durationI","totalMillisHourMin","onSchedule","scheduleAndFinish","AppointmentReport","showScheduleAnother","setShowScheduleAnother","showClicked","setShowClicked","currAppt","setCurrAppt","apptType","setApptType","useLocation","appt_id","finishAppt","appointment_id","apptId","newArray","medItem","VacationModal","fromDate","setFromDate","setToDate","typeVac","setTypeVac","userID","onCreateMethod","VacationRequest","declineText","DermatologistProfile","workplaces","setWorkplaces","currSelect","setCurrSelect","PharmacistProfile","workplace","setWorkplace","IssueMedicine","reservedMedicine","setReservedMedicine","resID","setResID","searchRes","reservationID","reservationDate","issueMed","AddUserModal","usertype","EditUserModal","UserRow","UserTable","initialUserType","users","setUsers","currentUserType","setCurrentUserType","getFormattedUserType","UserSearchPanel","UserCrud","PharmaciesWithFreePharmacists","requestedDate","setRequestedDate","chosenPharmacy","setChosenPharmacy","reloadPharmacies","setReloadPharmacies","sorter2","setSorter2","reload2","setReload2","status","consultationPrice","w","updateSelectedWorker","ConsultationsInsight","consultations","setConsultations","fetchConsultations","justifyContent","fc","workerName","pharmacyName","CheckupsInsight","checkups","setCheckups","fetchCheckups","c","SubscribedPharmacies","loadPharmacies","substr","ReservedMedicines","reservations","setReservations","fetchReservations","r","Rating","entities","setEntitites","selectedEntity","setSelectedEntity","rating","setRating","enabledRating","setEnabledRating","spans","querySelectorAll","fetchEntities","updateSelectedEntity","toLowerCase","medicineCode","grade","count","newRating","gradedID","patientId","activeColor","transition","SubmitComplaintForm","complaintType","setComplaintType","textAreaText","setTextAreaText","getLabelKey","toLocaleLowerCase","ComplaintDetails","complaint","setResponse","responseText","fetchResponse","complaintOn","ComplaintHistory","complaints","setComplaints","fetchComplaints","ComplaintsPage","ComplaintResponse","onSuccessfulSubmit","setResponseText","NewComplaintsList","getNewComplaints","ComplaintResponseDetails","complaintResponse","FormControl","ComplaintResponsesHistory","complaintResponses","setComplaintResponses","cr","ComplaintResponsesPage","PharmacyWithMedicineItem","doBuy","addressStreet","addressCity","toFixed","PharmacyWithMedicineList","RequiredMedicineList","quantity","ERecipeSearch","showSearchPanel","setShowSearchPanel","sortBy","setSortBy","sortOrder","setSortOrder","constructor","eRecipeItems","EPrescriptionReview","setFilter","doFiltering","sortParam","e1","e2","prescriptionDate","dispensingDate","EPrescriptionPage","EPrescriptionSearch","AddEditCategoryModal","requiredPoints","setRequiredPoints","parseFloat","onAddEdit","CategoryItem","onItemChanged","marginLeft","CategoryList","components","setComponents","GuardedRoute","Component","component","rest","render","App","autoDismiss","autoDismissTimeout","placement","path","exact","CategotyList","reducer","combineReducers","store","configureStore","Boolean","hostname","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"yjBAEMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,wCACTC,QAAS,CACP,eAAgB,sBAIpBJ,EAAIK,aAAaC,QAAQC,KACvB,SAACC,GACC,IAAIC,EAAQ,KACZ,IACEA,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAASJ,MACjD,MAAOK,IAIT,OAHIL,IACFD,EAAOJ,QAAP,+BAA4CK,IAEvCD,KAET,SAACO,GAAD,OAAWC,QAAQC,OAAOF,MAGbf,Q,QCvBR,SAASkB,EAAgBC,GAC5B,OAAKA,EAAIC,SAGFD,EAAIC,SAASC,KAAKC,QAAUH,EAAIC,SAASC,KAAKC,QAAUH,EAAIC,SAASC,KAFjE,GCGf,IAAME,EAAcX,aAAaC,QAAQ,QACrCH,KAAKC,MAAMC,aAAaC,QAAQ,SAChC,KAEEW,EAAQC,YAAY,CACxBC,KAAM,OACNC,aAAc,CACZC,KAAML,GAERM,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpBD,EAAMH,KAAOI,EAAOC,QACpBrB,aAAasB,QAAQ,OAAQxB,KAAKyB,UAAUH,EAAOC,WAErDG,cAAe,SAACL,EAAOC,GACrBD,EAAMH,KAAO,KACbhB,aAAayB,WAAW,YAKfb,IAAf,Q,EAEwCA,EAAMc,QAAtCR,E,EAAAA,aAAcM,E,EAAAA,cAcTG,EAAS,yDAAM,WAAOC,GAAP,SAAAC,EAAA,wFAEjBD,EAASJ,MAFQ,yDAIjBM,QAAQ3B,MAAM,KAAEO,UAJC,wDAAN,uDC1CtB,SAASqB,EAAcC,EAAOC,EAAUC,EAASC,EAAWC,GACxD,IAAIC,GAAQ,EACZ,IAAKL,GAASC,EACV,OAAO,EAEX,GAAMC,GAAaF,EAAO,CACtB,IAAMM,EAAOJ,EAAQK,MAAM,cAAc,GACnCC,EAAUN,EAAQK,MAAM,cAAc,GACtCE,EAAQ,IAAIC,OAAOJ,EAAME,GAC/BH,EAAQA,GAASI,EAAME,KAAKX,GAWhC,OARMG,GAAeH,IACjBK,EAAQA,GAASL,EAAMY,QAAUT,GAG/BC,GAAeJ,IACjBK,EAAQA,GAASL,EAAMY,QAAUR,GAG9BC,EAuDX,IAgBeQ,EAhBG,CACd,MArDJ,SAAwBb,GAAyB,IAAlBC,IAAiB,yDAC5C,OAAOF,EAAcC,EAAOC,EAAU,iIAAwI,KAAM,OAqDpL,SAlDJ,SAA2BD,GAAyB,IAAlBC,IAAiB,yDAC/C,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,MAkD/C,UAnCJ,SAA4BD,GAAyB,IAAlBC,IAAiB,yDAChD,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,KAmC/C,SAhCJ,SAA2BD,GAAyB,IAAlBC,IAAiB,yDAC/C,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,KAgC/C,UA7BJ,SAA8BD,GAAyB,IAAlBC,IAAiB,yDAClD,OAAOF,EAAcC,EAAOC,EAAU,mDAAoD,EAAG,KA6B7F,KA9CJ,SAAuBD,GAAyB,IAAlBC,IAAiB,yDAC3C,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,MA8C/C,OAnDJ,SAAyBD,GAAyB,IAAlBC,IAAiB,yDAC7C,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,MAmD/C,QA5CJ,SAA0BD,GAAyB,IAAlBC,IAAiB,yDAC9C,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,MA4C/C,gBA7BJ,SAAkCD,GAAyB,IAAlBC,IAAiB,yDACtD,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,MA6B/C,aA1BJ,SAA+BD,GAAyB,IAAlBC,IAAiB,yDACnD,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,KA0B/C,gBAvBJ,SAAkCD,GAAyB,IAAlBC,IAAiB,yDACtD,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,MAuB/C,aApBJ,SAA+BD,GAAyB,IAAlBC,IAAiB,yDACnD,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,KAoB/C,YAjBJ,SAA6BD,GAAyB,IAAlBC,IAAiB,yDACjD,OAAOF,EAAcC,EAAOC,EAAU,KAAM,EAAG,OCxE5C,SAASa,IACd,IACE,IAAIjD,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAASJ,MAGrD,OAFkBC,KAAKC,MAAMgD,KAAKlD,EAAMmD,MAAM,KAAK,KAC9BC,GAErB,MAAO/C,GACP,OAAO,MAIJ,SAASgD,IACd,IACE,IAAIrD,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAASJ,MAGrD,OAFkBC,KAAKC,MAAMgD,KAAKlD,EAAMmD,MAAM,KAAK,KACxBG,SAE3B,MAAOjD,GACP,OAAO,M,oBCdX,SAASkD,EAAT,GAAoI,IAA3GtC,EAA0G,EAA1GA,KAAMuC,EAAoG,EAApGA,YAAalB,EAAuF,EAAvFA,UAAWC,EAA4E,EAA5EA,UAAWkB,EAAiE,EAAjEA,aAAcrB,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,QAASqB,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAaC,EAAS,0HAEnGC,mBAAS,IAF0F,mBAExHC,EAFwH,KAEhHC,EAFgH,OAGrGF,qBAHqG,mBAGxHjB,EAHwH,KAGjHoB,EAHiH,KAK/HC,qBAAU,WACN,GAAM5B,EAAS,CACX,IAAMI,EAAOJ,EAAQK,MAAM,cAAc,GACnCC,EAAUN,EAAQK,MAAM,cAAc,GACxCwB,EAAK,IAAIrB,OAAOJ,EAAME,GAC1BqB,EAASE,GAEbC,EAAgBV,KACjB,IAEH,IAAMU,EAAkB,SAACC,GACrB,IAAI9D,EAAQ,IAER8B,GAAcgC,GAA2B,KAAdA,EAGpB/B,GAAaO,GAAWwB,EAC1BxB,EAAME,KAAKsB,KACZ9D,EAAQ,uCAKZA,EADOgC,GAAe8B,GAAaA,EAAUrB,OAAST,EAC9C,mCAAqCA,EAAY,IAElDC,GAAe6B,GAAaA,EAAUrB,OAASR,EAC9C,mCAAqCA,EAAY,IAIjD,GAhBRjC,EAAQ,8BAkBZyD,EAAUzD,IAQd,OACI,eAAC+D,EAAA,EAAKC,MAAN,2BAAgBV,GAAhB,cACI,cAACS,EAAA,EAAKE,MAAN,UAAatD,IACb,cAACoD,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLjB,YAAaA,EACbC,aAAcA,EACdiB,YAAaZ,EACbJ,SAbS,SAACiB,GAClBjB,EAASiB,GACTR,EAAgBQ,EAAMC,OAAOC,QAWEC,KAAKC,MAC5B3C,SAAUA,EACVuB,SAAUA,IAEd,cAACU,EAAA,EAAKG,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SACKX,QAiBjBP,EAAc0B,aAAe,CACzB7C,UAAU,EACVE,UAAW,EACXoB,SAAU,aACVnB,UAAW,IACXF,QAAS,GACTsB,UAAU,GAGCJ,QCrEA2B,MAhBf,SAAwBtB,GAEpB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,SACNuC,YAAa,kBACblB,UAAW,EACXC,UAAW,GACXH,UAAU,EACVsB,SAAU,SAACiB,GAAD,OAAWf,EAAMF,SAASiB,IACpCtC,QAAS,qICVrB,SAAS8C,EAAT,GAAgF,IAAnDlE,EAAkD,EAAlDA,KAAMqB,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWmB,EAAsB,EAAtBA,SAAaE,EAAS,6DAE/CC,mBAAS,IAFsC,mBAEpEC,EAFoE,KAE5DC,EAF4D,KAIrEI,EAAkB,SAACC,GACrB,IAAI9D,EAAQ,GAIRA,EAHC8D,GAA2B,KAAdA,EAEP9B,GAAa8B,EAAUrB,OAAST,EAC/B,mCAAqCA,EAAY,IAClDC,GAAa6B,EAAUrB,OAASR,EAC/B,mCAAqCA,EAAY,IAEjD,GANA,4BAOZwB,EAAUzD,IAGd2D,oBAAUE,EAAiB,IAO3B,OACI,eAACE,EAAA,EAAKC,MAAN,2BAAgBV,GAAhB,cACI,cAACS,EAAA,EAAKE,MAAN,UAAatD,IACb,cAACoD,EAAA,EAAKG,QAAN,CACIC,KAAK,WACLC,YAAaZ,EACbJ,SAXS,SAACiB,GAClBjB,EAASiB,GACTR,EAAgBQ,EAAMC,OAAOC,QASEC,KAAKC,MAC5B3C,UAAU,IAEd,cAACiC,EAAA,EAAKG,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SACKX,QAYjBqB,EAAkBF,aAAe,CAC7B3C,UAAW,EACXoB,SAAU,aACVnB,UAAW,IACXtB,KAAM,YAGKkE,QCMAC,MApDf,WAAkB,IAAD,EACWvB,mBACpB,CACIwB,MAAO,GACPC,SAAU,KAJL,mBACNC,EADM,KACAC,EADA,KAQPzD,EAAW0D,cACXtE,EAAOuE,aAAY,SAAApE,GAAK,OAAIA,EAAMH,QAChCwE,EAAaC,sBAAbD,SAEFE,EAAW,SAACC,EAAOjB,GACrBW,EAAQ,2BACDD,GADA,kBAEFO,EAAQjB,MAwBjB,OAAI1D,EAAKA,KACE,cAAC,IAAD,CAAU4E,GAAG,MAIpB,eAAC1B,EAAA,EAAD,CAAM2B,YAAU,EAACC,SApBA,SAACtB,IAClBA,EAAMuB,iBACNvB,EAAMwB,kBANCnD,EAAS,MAAUuC,EAAI,QACvBvC,EAAS,SAAauC,EAAI,YAQVxD,ENVV,SAAC,GAAD,IAAGsD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,8CAAyB,WAAOvD,GAAP,eAAAC,EAAA,+EAExBxC,EAAM4G,KAAK,mBAAoB,CAC/Cf,QACAC,aAJwC,OAEpCe,EAFoC,OAM1CtE,EAASV,EAAagF,EAAIzF,OANgB,wIAAzB,sDMUmB0F,CAAMf,IAE7BgB,MAAK,WACGtD,KACD0C,EAAS,iBAAkB,CAAEa,WAAY,gBAWhBC,UAAU,kBAAnD,UACI,cAAC,EAAD,CAAgB/C,SAAU,SAACiB,GAAD,OAAWkB,EAAS,QAASlB,EAAMC,OAAOC,UACpE,cAAC,EAAD,CAAmBnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,WAAYlB,EAAMC,OAAOC,UAC1E,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,wBC9CGmC,MARf,WACE,OACE,sBAAMH,UAAU,kCAAhB,SACE,cAAC,EAAD,OCWSI,MAff,SAA4BjD,GAExB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,aACNuC,YAAa,sBACblB,UAAW,EACXC,UAAW,GACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP0E,MAff,SAA2BlD,GAEvB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,YACNuC,YAAa,qBACblB,UAAW,EACXC,UAAW,GACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCMPyE,MAhBf,SAA4BjD,GAExB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,eACNuC,YAAa,wBACblB,UAAW,EACXC,UAAW,GACXH,UAAU,EACVsB,SAAU,SAACiB,GAAD,OAAWf,EAAMF,SAASiB,IACpCtC,QAAS,uDCIN0E,MAff,SAAuBnD,GAEnB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,OACNuC,YAAa,gBACblB,UAAW,EACXC,UAAW,IACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP4E,MAff,SAA0BpD,GAEtB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,UACNuC,YAAa,mBACblB,UAAW,EACXC,UAAW,IACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP6E,MAff,SAAyBrD,GAErB,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,SACNuC,YAAa,kBACblB,UAAW,EACXC,UAAW,IACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MC2JP8E,MAtJf,WAAyB,IAAD,EACErD,mBACtB,CACEsD,UAAW,GACXC,SAAU,GACV/B,MAAO,GACPC,SAAU,GACV+B,eAAgB,GAChBC,UAAW,GACXC,KAAM,GACNC,OAAQ,GACRC,QAAS,KAXS,mBACflC,EADe,KACTC,EADS,KAgCdG,EAAaC,sBAAbD,SACF+B,EAAUC,iBAAO,MAEjB9B,EAAW,SAACC,EAAOjB,GACvBW,EAAQ,2BACHD,GADE,kBAEJO,EAAQjB,MA6BP+C,EAAkB,WACtB,IAAMC,EAAUC,EAAYvC,GAC5BhG,EACG6G,KAAK,cAAeyB,GACpBtB,MAAK,WAGJ,OA1DJf,EACE,CACE2B,UAAW,GACXC,SAAU,GACV/B,MAAO,GACPC,SAAU,GACV+B,eAAgB,GAChBC,UAAW,GACXC,KAAM,GACNC,OAAQ,GACRC,QAAS,KAGbC,EAAQK,QAAQC,QA4CZrC,EAAS,qDAAsD,CAAEa,WAAY,YACtE,cAAC,IAAD,CACLT,GAAI,CACFkC,SAAU,eAIfC,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAI7CsB,EAAc,WAClB,IAAIK,EAAU,CACZZ,KAAMhC,EAAI,KACViC,OAAQjC,EAAI,OACZkC,QAASlC,EAAI,SAGXsC,EAAO,2BACNtC,GADM,IAET4C,QAASA,EACTC,SAAU,YAOZ,cAJOP,EAAO,YACPA,EAAO,cACPA,EAAO,QAEPA,GAGT,OACE,uBAAMpB,UAAU,mBAAmB4B,MAAO,CAAEC,UAAW,QAASC,QAAS,MAAOC,cAAe,QAA/F,UACE,eAACnE,EAAA,EAAD,CACEoE,IAAKf,EACL1B,YAAU,EACVC,SAxDe,SAACtB,GAIpB,GAHAA,EAAMuB,iBACNvB,EAAMwB,kBAbCnD,EAAS,UAAcuC,EAAI,YAC7BvC,EAAS,SAAauC,EAAI,WAC1BvC,EAAS,MAAUuC,EAAI,QACvBvC,EAAS,SAAauC,EAAI,WAC1BvC,EAAS,SAAauC,EAAI,iBAC1BvC,EAAS,UAAcuC,EAAI,YAC3BvC,EAAS,KAASuC,EAAI,OACtBvC,EAAS,OAAWuC,EAAI,SACxBvC,EAAS,QAAYuC,EAAI,SAOV,CAClB,GAAIA,EAAI,WAAiBA,EAAI,eAE3B,YADAI,EAAS,yBAA0B,CAAEa,WAAY,YAGnDoB,MAgDEnB,UAAU,kBAJZ,UAME,cAAC,EAAD,CACE5B,MAAOU,EAAI,UACX7B,SAAU,SAACiB,GAAD,OAAWkB,EAAS,YAAalB,EAAMC,OAAOC,UAE1D,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,WAAYlB,EAAMC,OAAOC,UAEzD,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,QAASlB,EAAMC,OAAOC,UAEtD,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,WAAYlB,EAAMC,OAAOC,UAEzD,cAAC,EAAD,CACE5D,KAAK,kBAAkByC,SAAU,SAACiB,GAAD,OAAWkB,EAAS,iBAAkBlB,EAAMC,OAAOC,UAEtF,cAAC6D,EAAD,CACEhF,SAAU,SAACiB,GAAD,OAAWkB,EAAS,YAAalB,EAAMC,OAAOC,UAE1D,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,OAAQlB,EAAMC,OAAOC,UAErD,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,SAAUlB,EAAMC,OAAOC,UAEvD,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,UAAWlB,EAAMC,OAAOC,UAExD,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,uBAID,Q,kGCuNQkE,OAtWf,YAA8D,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,gBAChClD,EAAaC,sBAAbD,SADmD,EAE/B9B,mBAAS,MAFsB,mBAEpDiF,EAFoD,KAE5CC,EAF4C,OAG3BlF,oBAAS,GAHkB,mBAGpDmF,EAHoD,KAG1CC,EAH0C,OAIjCpF,oBAAS,GAJwB,mBAIpDrB,EAJoD,KAI7C0G,EAJ6C,OAKnCrF,mBAAS,CAC/B5C,KAAM,GACNkI,YAAa,GACb1B,QAAS,GACTF,KAAM,GACNC,OAAQ,GACR4B,UAAW,EACXC,SAAU,IAZ+C,mBAKpDC,EALoD,KAK9CC,EAL8C,KAevDC,EAAe,SAAC7E,GAClB,IAAI8E,EAAM9E,EAAMC,OAAO3D,KACnB4D,EAAQF,EAAMC,OAAOC,MACzB6E,EAAaD,EAAK5E,GAClB0E,EAAQ,2BAAKD,GAAN,kBAAaG,EAAM5E,MAyDxB8E,EAAmB,SAAUP,EAAWC,GAC1CE,EAAQ,2BAAKD,GAAN,IAAYD,SAAUA,EAAUD,UAAWA,KACnC,cAAXN,GAAqC,aAAXA,IAC5BC,EAAU,MACVG,GAAS,IAGX3J,EACGqK,IADH,4EAEyEP,EAFzE,sBAE+FD,EAF/F,yBAIG7C,MAAK,SAACF,GACLkD,EAAQ,2BACHD,GADE,IAEL7B,QAASpB,EAAIzF,KAAKiJ,YAClBR,SAAUA,EACVD,UAAWA,EACX5B,OAAQnB,EAAIzF,KAAKkJ,eAGpB5B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,cAKhBkD,EAAe,SAACD,EAAK5E,GACvB,IAAIkF,GAAU,EACVlJ,EAAU,GAKd,GAJa,IAATgE,IACFkF,GAAU,EACVlJ,EAAO,iBAAa4I,EAAb,mBAEG,cAARA,GAA+B,aAARA,EAAoB,CAC7C,IAAIO,EAAOnF,EAAM1B,MAAM,OAErB4G,EADkB,IAAhBC,EAAKjH,SAILkH,OAAOC,SAASF,EAAK,IAAIG,aAAeH,EAAK,IAC7CC,OAAOC,SAASF,EAAK,IAAIG,aAAeH,EAAK,OAS/CnJ,EAAO,iBAAa4I,EAAb,0DAOTV,EAHGgB,EAGO,KAFAN,GAKZP,EAASa,GAEM,IAAXlJ,GACF8E,EAAS9E,EAAS,CAChB2F,WAAY,aAmDlB,OA/CAvC,qBAAU,WAAO,IAAD,cACdsF,EAAQ,CACNtI,KAAI,OAAE2H,QAAF,IAAEA,OAAF,EAAEA,EAAiB3H,KACvBkI,YAAW,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAiBO,YAC9B1B,QAAO,OAAEmB,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,aAAE,EAA0BV,QACnCF,KAAI,OAAEqB,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,aAAE,EAA0BZ,KAChCC,OAAM,OAAEoB,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,aAAE,EAA0BX,OAClC4B,UAAS,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,iBAAE,EAA0BiC,gBAA5B,aAAE,EAAoChB,UAC/CC,SAAQ,OAAET,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,iBAAE,EAA0BiC,gBAA5B,aAAE,EAAoCf,aAE/C,CAACT,IAEJ3E,qBAAU,WAAO,IAAD,QACdoG,SAASC,eAAe,aAAaC,UAAY,GACjD,IAAIC,EAAM,IAAIC,KAAI,CAChB7F,OAAQ,YACR8F,OAAQ,CACN,IAAIC,KAAU,CACZC,OAAQ,IAAIC,QAIhBC,KAAM,IAAIC,KAAK,CACbC,OAAQC,aAAW,QACjBrC,QADiB,IACjBA,GADiB,UACjBA,EAAiBT,eADA,iBACjB,EAA0BiC,gBADT,aACjB,EAAoChB,UADnB,OAEjBR,QAFiB,IAEjBA,GAFiB,UAEjBA,EAAiBT,eAFA,iBAEjB,EAA0BiC,gBAFT,aAEjB,EAAoCf,WAEtC6B,KAAM,GACNC,QAAS,EACTC,QAAS,OAeb,OAXIpC,EACFwB,EAAIa,GAAG,SAAS,SAACC,GACf,IAAIC,EAASC,aAASF,EAAIG,YACtBC,EAAMH,EAAO,GACbI,EAAMJ,EAAO,GACjB5B,EAAiBgC,EAAKD,MAGxBlB,EAAIoB,oBAAoB,SAGnBpB,IACN,CAAC5B,EAAiBI,EAAUW,IAG7B,eAACkC,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,oBAAItF,UAAU,iBAAd,gCACA,uBACA,eAACpC,EAAA,EAAD,WACE,eAAC2H,EAAA,EAAD,CAAKvF,UAAU,cAAf,UACE,eAACwF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAxB,UACE,eAAC/H,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,qBAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,kBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,OACLuC,YAAY,OACZG,UAAWqF,GAAwB,OAAXF,GAA8B,SAAXA,EAC3CjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAMrI,KACbyC,SAAU8F,SAKhB,eAACnF,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,4BAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,yBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,cACLuC,YAAY,cACZG,UACGqF,GAAwB,OAAXF,GAA8B,gBAAXA,EAEnCjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAMH,YACbzF,SAAU8F,SAKhB,eAACnF,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,wBAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,qBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,UACLuC,YAAY,UACZG,UACGqF,GAAwB,OAAXF,GAA8B,YAAXA,EAEnCjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAM7B,QACb/D,SAAU8F,SAKhB,eAACnF,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,qBAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,kBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,OACLuC,YAAY,OACZG,UAAWqF,GAAwB,OAAXF,GAA8B,SAAXA,EAC3CjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAM/B,KACb7D,SAAU8F,SAKhB,eAACnF,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,uBAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,oBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,SACLuC,YAAY,SACZG,UACGqF,GAAwB,OAAXF,GAA8B,WAAXA,EAEnCjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAM9B,OACb9D,SAAU8F,SAKhB,eAACnF,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,0BAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,uBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,YACLuC,YAAY,YACZG,UACGqF,GAAwB,OAAXF,GAA8B,cAAXA,EAEnCjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAMF,UACb1F,SAAU8F,SAKhB,eAACnF,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKM,UAAU,yBAA/B,UACE,cAACjI,EAAA,EAAKE,MAAN,CAAYgI,QAAM,EAACH,GAAI,EAAvB,sBAGA,cAACH,EAAA,EAAD,CAAKG,GAAI,GAAT,SACE,cAAC/H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,WACLuC,YAAY,WACZG,UACGqF,GAAwB,OAAXF,GAA8B,aAAXA,EAEnCjE,MAAK,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAMD,SACb3F,SAAU8F,YAKlB,cAACyC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAxB,SACE,qBAAKhJ,GAAG,mBAGZ,uBACA,cAAC4I,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKxF,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACR6F,KAAK,KACL7I,UAAWqF,IAAaxG,EACxBiK,QAjTW,WACjBjK,GACFyG,GAAY,GAEd,IAAIyD,EAAM,CACRtJ,GAAIwF,EAAgBxF,GACpBnC,KAAMqI,EAAKrI,KACXkI,YAAaG,EAAKH,YAClBhB,QAAS,CACP/E,GAAIwF,EAAgBT,QAAQ/E,GAC5BqE,QAAS6B,EAAK7B,QACdF,KAAM+B,EAAK/B,KACXC,OAAQ8B,EAAK9B,OACb4C,SAAU,CACRhH,GAAIwF,EAAgBT,QAAQiC,SAAShH,GACrCgG,UAAWE,EAAKF,UAChBC,SAAUC,EAAKD,YAKrB9J,EACGoN,IADH,wBACwB/D,EAAgBxF,IAAMsJ,GAC3CnG,MAAK,SAACF,GACLwC,IACAlD,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,cA8QV,kBAOU,IACV,cAACE,EAAA,EAAD,CACEC,QAAQ,YACR6F,KAAK,KACL7I,SAAUqF,EACVyD,QA7TW,WACrBxD,GAAY,IAwTJ,kBAQA,cAACvC,EAAA,EAAD,CACEC,QAAQ,YACR6F,KAAK,KACL7I,UAAWqF,EACXyD,QA7Ra,WAAO,IAAD,cAC7BvD,GAAS,GACTD,GAAY,GACZM,EAAQ,CACNtI,KAAI,OAAE2H,QAAF,IAAEA,OAAF,EAAEA,EAAiB3H,KACvBkI,YAAW,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAiBO,YAC9B1B,QAAO,OAAEmB,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,aAAE,EAA0BV,QACnCF,KAAI,OAAEqB,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,aAAE,EAA0BZ,KAChCC,OAAM,OAAEoB,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,aAAE,EAA0BX,OAClC4B,UAAS,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,iBAAE,EAA0BiC,gBAA5B,aAAE,EAAoChB,UAC/CC,SAAQ,OAAET,QAAF,IAAEA,GAAF,UAAEA,EAAiBT,eAAnB,iBAAE,EAA0BiC,gBAA5B,aAAE,EAAoCf,YA+QxC,gC,sHClLGuD,OA5Kf,SAA+BhJ,GAAQ,IAAD,IAC5B+B,EAAaC,sBAAbD,SAD4B,EAEM9B,oBAAU,GAFhB,mBAE7BgJ,EAF6B,KAEdC,EAFc,OAGIjJ,mBAAS,IAHb,mBAG7BkJ,EAH6B,KAGfC,EAHe,OAIRnJ,mBAAS,KAJD,mBAI7BoJ,EAJ6B,KAIrBC,EAJqB,OAKRrJ,mBAAS,IALD,mBAK7BsJ,EAL6B,KAKrBC,EALqB,OAMMvJ,mBAAS,IANf,mBAM7BwJ,EAN6B,KAMdC,EANc,OAOFzJ,mBAAS,MAPP,mBAO7B0J,EAP6B,KAOlBC,EAPkB,KA+CpC,OACE,eAACC,GAAA,EAAD,yBACEC,SAAU,WACRZ,GAAkB,GAClBI,EAAU,KACVE,EAAU,IACVE,EAAiB,IACjBN,EAAgB,IAChBQ,EAAa,QAEX5J,GATN,IAUE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAZV,UAcE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,+BAIF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAACC,GAAA,EAAD,WACE,eAACjC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKiC,GAAI,GAAI/B,GAAI,EAAGD,GAAI,EAAxB,UACE,eAACiC,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAC3H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,sCACA,4CACA,6CAGJ,gCACkC,IAA1B,OAAL/C,QAAK,IAALA,GAAA,UAAAA,EAAO2K,oBAAP,eAAqBxL,UAArB,OACCa,QADD,IACCA,GADD,UACCA,EAAO2K,oBADR,aACC,EAAqB/D,KAAI,SAACgE,EAAMC,GAAP,OACvB,qBACEhC,QAAS,WA5Eb,IAACiC,EAAYzN,EA6EFoM,EAAcsB,SAASH,EAAKI,SAASxL,MA7E/CsL,EA8EmBF,EAAKI,SAASxL,GA9ErBnC,EA8EyBuN,EAAKI,SAAS3N,KA7EpE6L,EAAiB4B,GACjB1B,EAAgB/L,KA8EIwF,UAAS,UACPoG,GAAiB2B,EAAKI,SAASxL,IAAM,cAD9B,aAGPiK,EAAcsB,SAASH,EAAKI,SAASxL,IACjC,cACA,UALG,KALX,UAaE,6BAAKqL,EAAQ,IACb,6BAAKD,EAAKI,SAASC,OACnB,6BAAKL,EAAKI,SAAS3N,OACnB,6BAAKuN,EAAKI,SAASE,WACnB,6BAAKN,EAAKvB,qBAKpB,eAAC5I,EAAA,EAAKC,MAAN,CAAYgI,UAAU,eAAeyC,IAAE,EAAvC,UACE,cAAC1K,EAAA,EAAKE,MAAN,2BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAOoI,EACPtJ,UAA4B,GAAlBkJ,EACVnJ,SAAU,SAACiB,GAAD,OACRuI,EAAUjD,OAAOC,SAASvF,EAAMC,OAAOC,SAEzCmK,IAAI,SAGR,cAACtI,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVJ,QArGE,WACdW,EAAU,GAAD,oBACJD,GADI,CAEP,CAAEuB,WAAY7B,EAAeI,SAAQhM,KAAM8L,MAE7CO,EAAiB,GAAD,oBAAKD,GAAL,CAAoBR,KACpCC,GAAkB,GAClBE,EAAgB,KA+FJrG,QAAQ,UAHV,yBAQF,cAACsF,EAAA,EAAD,UACE,cAACgD,GAAA,EAAD,CAAWtI,QAAQ,QAAnB,gBACGwG,QADH,IACGA,OADH,EACGA,EAAQ3C,KAAI,SAACgE,GAAD,OACX,eAACS,GAAA,EAAUC,KAAX,CACEzC,QAAS,kBApHPiC,EAoH0BF,EAAKE,WAnHjDpB,EAAiBD,EAAc8B,QAAO,SAACX,GAAD,OAAUA,GAAQE,WACxDtB,EAAUD,EAAOgC,QAAO,SAACX,GAAD,OAAUA,EAAKE,YAAcA,MAFpC,IAACA,GAqHFjI,UAAU,UACVE,QAAQ,OAHV,iBAKG6H,QALH,IAKGA,OALH,EAKGA,EAAMvN,KALT,WAKgBuN,QALhB,IAKgBA,OALhB,EAKgBA,EAAMvB,oBAM9B,uBACA,cAACjB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC5H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,4BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLf,SAAU,SAACiB,GAAD,OAtHT,SAACyK,GAChB,IAAIC,EAAQD,EAAKjM,MAAM,KACnBmM,EAAI,IAAIC,KACVtF,OAAOC,SAASmF,EAAM,IACtBpF,OAAOC,SAASmF,EAAM,IAAM,EAC5BpF,OAAOC,SAASmF,EAAM,KAExBC,EAAEE,SAAS,EAAG,EAAG,GACjB,IAAIC,EAAM,IAAIF,KACVD,EAAEI,UAAYD,EAAIC,UAAWlC,EAAa8B,IAE5C9B,EAAa,MACb7H,EAAS,gCAAiC,CACxCa,WAAY,aAyGmBmJ,CAAWhL,EAAMC,OAAOC,sBAOzD,eAAC4I,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,SAA4B,IAAZ,OAANwJ,QAAM,IAANA,OAAA,EAAAA,EAAQpK,SAA6B,OAAdwK,EACjC5G,QAAQ,UACR8F,QAAS,WACP7I,EAAMkM,UAAU,CAAE3C,SAAQI,eAJ9B,kCC9EOwC,OAtFf,SAA0BnM,GAAQ,IAAD,EACHC,mBAAS,IADN,mBACxBmM,EADwB,KAChBC,EADgB,OAEWpM,oBAAU,GAFrB,mBAExBgJ,EAFwB,KAETC,EAFS,iDAQ/B,4BAAA9K,EAAA,sEACwBzC,EAAIqK,IAAJ,0CACehG,EAAMsM,UACzChI,OAAM,eAHV,cACQrI,EADR,OAIEoQ,EAAYpQ,EAAUA,EAAQe,KAAO,IAJvC,kBAKSf,GALT,4CAR+B,sBAsB/B,OANAoE,qBAAU,gBACakM,GAAjBvM,EAAMsM,SAjBmB,mCAkB3BE,KAED,CAACxM,EAAMsM,UAGR,eAACzC,GAAA,EAAD,yBACEC,SAAU,WACRZ,GAAkB,KAEhBlJ,GAJN,IAKE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAPV,UASE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,4BAIF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAACG,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAC3H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,uCACA,+CACA,+CAGJ,gCACqB,IAAZ,OAANqJ,QAAM,IAANA,OAAA,EAAAA,EAAQjN,UAAR,OACCiN,QADD,IACCA,OADD,EACCA,EAAQxF,KAAI,SAACgE,EAAMC,GAAP,OACV,qBACEhC,QAAS,WA/CP,IAACiC,IAgDWF,EAAKpL,GA/CjC0J,EAAiB4B,IAiDHjI,UAAS,UAAKoG,GAAiB2B,EAAKpL,GAAK,cAAgB,WAJ3D,UAOE,6BAAKqL,EAAQ,IACb,6BAAKD,EAAK6B,QACV,6BACGC,KAAO9B,EAAK+B,aAAaC,OAAO,2BAEnC,6BAAKhC,EAAKiC,uBAMtB,eAAChD,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVlG,QAAQ,UACR8F,QAAS,WACP7I,EAAM8M,aAAa7D,IAJvB,kCCaO8D,OA9Ef,SAAwB/M,GAAQ,IACtB+B,EAAaC,sBAAbD,SADqB,EAEK9B,mBAAS,MAFd,mBAEtB0J,EAFsB,KAEXC,EAFW,KAsB7B,OACE,eAACC,GAAA,EAAD,yBACEC,SAAU,WACRF,EAAa,QAEX5J,GAJN,IAKE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAPV,UASE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,6BAIF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAACC,GAAA,EAAD,WACE,cAACjC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,iDACkB,IACfqE,KAAO1M,EAAMgN,MAAML,aAAaC,OAAO,sBAI9C,cAACxE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAAC5H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,4BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLf,SAAU,SAACiB,GAAD,OAjDT,SAACyK,GAChB,IAAIC,EAAQD,EAAKjM,MAAM,KACnBmM,EAAI,IAAIC,KACVtF,OAAOC,SAASmF,EAAM,IACtBpF,OAAOC,SAASmF,EAAM,IAAM,EAC5BpF,OAAOC,SAASmF,EAAM,KAExBC,EAAEE,SAAS,EAAG,EAAG,GACjB,IAAIC,EAAM,IAAIF,KACVD,EAAEI,UAAYD,EAAIC,UAAWlC,EAAa8B,IAE5C9B,EAAa,MACb7H,EAAS,kCAAmC,CAC1Ca,WAAY,aAoCmBmJ,CAAWhL,EAAMC,OAAOC,sBAOzD,eAAC4I,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,SAAwB,OAAd4J,EACV5G,QAAQ,UACR8F,QAAS,WACP7I,EAAMiN,WAAWtD,IAJrB,kCCwWOuD,OA3Zf,YAMI,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,WACAC,EACC,EADDA,cAEQxL,EAAaC,sBAAbD,SADP,EAE2B9B,mBAAS,IAFpC,mBAEMsJ,EAFN,KAEcC,EAFd,OAGqCvJ,mBAAS,OAH9C,mBAGMuN,EAHN,KAGmBC,EAHnB,OAIuCxN,mBAAS,IAJhD,mBAIMyN,EAJN,KAIoBC,EAJpB,OAKqC1N,mBAAS,MAL9C,mBAKM2N,EALN,KAKmBC,EALnB,OAMkC5N,mBAAS,GAN3C,mBAMM6N,EANN,KAMiBC,EANjB,OAO2B9N,mBAAS,GAPpC,mBAOM+N,EAPN,KAOcC,EAPd,OAQyChO,mBAAS,OARlD,mBAQMiO,EARN,KAQqBC,EARrB,OAUuDlO,oBAAS,GAVhE,mBAUMmO,EAVN,KAU4BC,EAV5B,OAWmDpO,oBAAS,GAX5D,mBAWMqO,GAXN,KAW0BC,GAX1B,QAaqCtO,oBAAS,GAb9C,qBAaMuO,GAbN,MAamBC,GAbnB,SAeuCxO,oBAAS,GAfhD,qBAeMyO,GAfN,MAeoBC,GAfpB,SAgByC1O,mBAAS,IAhBlD,qBAgBM2O,GAhBN,MAgBqBC,GAhBrB,oDAkBD,4BAAAzQ,EAAA,sEACwBzC,EACnBqK,IADmB,yBACGoH,IACtBzK,MAAK,SAACF,GACLoM,GAAiBpM,EAAIzF,KAAK4R,kBAE3BtK,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAYSA,GAZT,4CAlBC,+BAuCc6S,KAvCd,8EAuCD,4BAAA1Q,EAAA,sEACwBzC,EAAIqK,IAAJ,mCACQmH,GAC5B,CAAE4B,OAAQ,CAAExD,OAAQiC,KACpBlJ,OAAM,eAJV,cACQrI,EADR,OAKEuN,EAAYvN,EAAUA,EAAQe,KAAO,IALvC,kBAMSf,GANT,4CAvCC,sBAiCDoE,qBAAU,gBACWkM,GAAfa,GAlCL,oCAmCG4B,KAED,CAAC5B,EAAaC,IAWjBhN,qBAAU,gBACYkM,GAAhBY,GACF2B,OAED,CAAC3B,EAAcK,IAElB,IAAIyB,GAAe,SAACC,GAClBrB,EAAe,MACfE,EAAc,GACdN,EAAeyB,IAzDhB,8CA0ED,WAAgClS,GAAhC,iBAAAoB,EAAA,6DACM0K,EAAM,CACRqG,WAAYhC,EACZiC,SAAUpS,EAAK2M,UAAUmC,UACzBuD,MAAM,aAAKrS,EAAKuM,QAChB+F,QAASjQ,KALb,SAQwB1D,EACnB6G,KADmB,uBACUsG,GAC7BnG,MAAK,SAACF,GACLqM,KACA/M,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAlBpB,cAQQ3G,EARR,yBAqBSA,GArBT,4CA1EC,oEAuHD,4BAAAmC,EAAA,sEACwBzC,EACnB4T,OADmB,sBACG3B,EAAYpO,KAClCmD,MAAK,SAACF,GACLqM,KACA/M,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAXpB,cACQ3G,EADR,yBAcSA,GAdT,4CAvHC,sBA4DDoE,qBAAU,WACR,IAAImP,EAAYC,KAAKC,OAAY,OAANnG,QAAM,IAANA,OAAA,EAAAA,EAAQpK,QAAS,GAAK,GACvC,OAANoK,QAAM,IAANA,OAAA,EAAAA,EAAQpK,QAAS,EAAI,EAAIqQ,IAC3BA,GAAwB,GAE1BvB,EAAUuB,KACT,CAACjG,IAEJlJ,qBAAU,WACR,IAAIsP,EAAoB,EAAZ7B,EACR8B,EAAMrG,EAAOpK,OAASwQ,EAAQ,EAAxB,OAA4BpG,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAQpK,OAASwQ,EAAQ,EAC/DhC,EAAe,OAACpE,QAAD,IAACA,OAAD,EAACA,EAAQpM,MAAMwS,EAAOC,MACpC,CAACrG,EAAQuE,IAgEZ,IAAI+B,GAAc,YAxIjB,oCAyICC,IAzID,8CA4ID,WAA2BC,GAA3B,iBAAA3R,EAAA,6DACM0K,EAAM,CACRiH,kBACAzD,QAASsB,EAAYpO,GACrB8P,QAASjQ,KAEXoP,IAAe,GANjB,SAOwB9S,EACnB6G,KADmB,gCACmBsG,GACtCnG,MAAK,SAACF,GACLgM,IAAe,GACfQ,GAAa,OACbd,EAAiB,OACjBZ,GAAeD,GACfvL,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aApBpB,cAOQ3G,EAPR,yBAuBSA,GAvBT,4CA5IC,oEA+KD,WAAyBuP,GAAzB,eAAApN,EAAA,sEACwBzC,EACnBoN,IADmB,sBACA6E,EAAYpO,GADZ,YACkBgM,EAAKM,UADvB,MAEnBnJ,MAAK,SAACF,GACLqM,KACA/M,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAXpB,cACQ3G,EADR,yBAcSA,GAdT,4CA/KC,sBAyMD,OACE,eAACgM,EAAA,EAAIC,KAAL,CAAUC,SAAS,UAAnB,UACE,oBAAItF,UAAU,iBAAd,6BACA,uBACA,eAACuF,EAAA,EAAD,WACG,IACD,eAAC4H,GAAA,EAAD,WACE,eAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,sBACY0O,KAGZ,eAAC8B,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoG,GAAa,OACbd,EAAiB,QAHrB,iBAQA,cAAC6B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoG,GAAa,cACbd,EAAiB,eAHrB,yBAQA,cAAC6B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoG,GAAa,UACbd,EAAiB,WAHrB,qBASA,cAAC6B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoG,GAAa,aACbd,EAAiB,cAHrB,yBAUJ,cAACrL,EAAA,EAAD,CACEC,QAAQ,UACR6F,KAAK,KACLC,QAAS,WACP8F,IAAgB,IAJpB,gCASA,cAAC,GAAD,CACEhE,aAAciE,GACdzB,aAAcA,EACdgD,KAAMzB,GACNzC,OAlJkB,WACxB0C,IAAgB,IAkJVzC,UAxJiB,SAAC3C,GACxBoF,IAAgB,GA/GjB,qCAgHCyB,CAAiB7G,SAyJf,cAACnB,EAAA,EAAD,UACGsF,GAAgB,KAAhB,OACCA,QADD,IACCA,OADD,EACCA,EAAc9G,KAAI,SAACoG,EAAOnC,GAAR,OAChB,cAACxC,EAAA,EAAD,CAAKxF,UAAU,WAAuByF,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAxD,SACE,eAAC6H,GAAA,EAAD,CACExH,QAAS,WACPgF,EAAeb,IAEjBnK,UAAU,WACV4B,MAAO,CAAE6L,MAAO,QAASC,OAAQ,SALnC,UAOE,cAACF,GAAA,EAAKjG,KAAN,UACE,eAACiG,GAAA,EAAKlG,MAAN,oBAAmB6C,EAAMxN,QAE3B,cAAC6Q,GAAA,EAAKrE,OAAN,UACGU,KAAOM,EAAMoC,UAAUxC,OAAO,+BAZN/B,SAkBrC,cAACzC,EAAA,EAAD,CAAKvF,UAAU,sBAAf,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QAjMU,WACF,IAAdiF,GACFC,EAAcD,EAAY,MAiMpB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QAhMW,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,aAmMV,MAAfF,GACC,eAACxF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACsI,GAAA,EAAD,CAAO5N,QAAQ,YAAf,SACE,eAAC4N,GAAA,EAAMC,QAAP,oBAAsBhD,EAAYpO,UAGtC,eAAC6I,EAAA,EAAD,CAAKxF,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,CACE/C,SACiB,MAAf6N,GAAuBA,EAAY0B,SAAWjQ,IAEhD0D,QAAQ,OACR6F,KAAK,KACLC,QAAS,WACP0F,IAAsB,IAP1B,kBAYA,cAAC,GAAD,CACEvB,MAAOY,EACPuC,KAAM7B,GACNrC,OA/He,WACzBsC,IAAsB,IA+HZtB,WArIc,SAACzB,GACzB+C,IAAsB,GAjMvB,qCAkMCsC,CAAUrF,MAqIF,cAAC1I,EAAA,EAAD,CACE/C,SACiB,MAAf6N,GACkB,WAAlBM,GACAN,EAAY0B,SAAWjQ,IAEzB0D,QAAQ,UACR6F,KAAK,KACLC,QAAS,WACPwF,GAAwB,IAT5B,0BAcA,cAACvL,EAAA,EAAD,CACE/C,SACiB,MAAf6N,GAAuBA,EAAY0B,SAAWjQ,IAEhD0D,QAAQ,SACR6F,KAAK,KACLC,QAAS,WACPgH,MAPJ,0BAeN,eAACzH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,eAACA,EAAA,EAAD,CAAKxF,UAAU,SAAf,UACG,IACD,cAACiO,GAAA,EAAD,CACErM,MAAO,CAAEsM,QAASvC,GAAc,QAAU,QAC1CwC,UAAU,WAEZ,0BAEF,cAAC3I,EAAA,EAAD,OAEF,cAACD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGuF,GACC,eAACrD,GAAA,EAAD,CAAOG,SAAO,EAACF,UAAQ,EAACzH,QAAQ,OAAhC,UACE,gCACE,+BACE,mCACA,sCACA,sCACA,6CAGJ,kCACE,cAAC,GAAD,CACEuJ,QAASsB,EAAYpO,GACrB2Q,KAAM/B,EACNnC,OArNkB,WAChCoC,GAAwB,IAqNVvB,aA3NiB,SAACiD,GAChC1B,GAAwB,GAvKzB,qCAwKC4C,CAAYlB,MA2NCnC,GACCA,EAAYsD,UAAUtK,KAAI,SAACgE,EAAMC,GAAP,OACxB,+BACE,6BAAKA,EAAQ,IACb,6BAAKD,EAAKI,SAASC,OACnB,6BAAKL,EAAKI,SAAS3N,OACnB,6BAAKuN,EAAKvB,6BCpKjB8H,OA3Pf,YAA2C,IAAjBhE,EAAgB,EAAhBA,aAChBpL,EAAaC,sBAAbD,SADgC,EAGI9B,mBAAS,IAHb,mBAGjCmR,EAHiC,KAGjBC,EAHiB,OAIApR,mBAAS,IAJT,mBAIjCqR,EAJiC,KAInBC,EAJmB,OAKNtR,mBAAS,IAAI0L,MALP,mBAKjChC,EALiC,KAKtBC,EALsB,OAMN3J,mBAAS,SANH,mBAMjCuR,EANiC,KAMtBC,EANsB,OAOUxR,mBAAS,GAPnB,mBAOjCyR,EAPiC,KAOdC,EAPc,OAQR1R,mBAAS,IARD,mBAQjC2R,EARiC,KAQvBC,EARuB,OASd5R,mBAAS,KATK,mBASjCwM,EATiC,KAS1BqF,EAT0B,OAUV7R,oBAAS,GAVC,mBAUjCoN,EAViC,KAUxB0E,EAVwB,KAYxC1R,qBAAU,gBACYkM,GAAhBY,GAA2B,uCAC7B,4BAAA/O,EAAA,sEACwBzC,EAAIqK,IAAJ,qDAC0BmH,IAC9C7I,OAAM,eAHV,cACQrI,EADR,OAIEoV,EAAoBpV,EAAUA,EAAQe,KAAO,IAJ/C,kBAKSf,GALT,2CAD6B,oDAQ7B+V,KAED,CAAC7E,IAEJ9M,qBAAU,WACiB,GAArBqR,EAAwB,uCAC1B,4BAAAtT,EAAA,sEACwBzC,EACnBqK,IADmB,iDAC2B0L,GAAqB,CAClE3C,OAAQ,CAAEvD,KAAM7B,EAAUmC,aAE3BnJ,MAAK,SAACF,GACL8O,EAAgB9O,EAAIzF,SAErBsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAVpB,cACQ3G,EADR,yBAcSA,GAdT,2CAD0B,oDAiB1BgW,GAEAV,EAAgB,MAEjB,CAAC5H,EAAW+H,EAAmBrE,IAYlChN,qBAAU,WACR,GAAI+Q,IAAmB,GAAI,CACzB,IAAIc,EACAC,GAAO,EACX,IAAKD,EAAI,EAAGA,EAAId,EAAejS,OAAQ+S,IACrC,GAAId,EAAec,GAAGrF,OAAOrN,IAAMkS,EAAmB,CACpD,IAAIU,OAAC,EACL,IAAKA,EAAI,EAAGA,EAAIhB,EAAec,GAAGG,SAASlT,OAAQiT,IACjD,IACGhB,EAAec,GAAGG,SAASD,GAAGE,QAAQC,cACrC5I,EAAUpD,WAAWiM,UAAU,EAAG,GAAGC,eAEvC,CACA,IAAIC,EAAK,IAAI/G,KACTgH,EAAK,IAAIhH,KACb+G,EAAG9G,SAASwF,EAAec,GAAGG,SAASD,GAAGQ,WAC1CD,EAAG/G,SAASwF,EAAec,GAAGG,SAASD,GAAGS,SAE1C9Q,EAAS,iBAAD,OACW2K,KAAOgG,EAAG5G,WAAWc,OACpC,WAFI,cAGCF,KAAOiG,EAAG7G,WAAWc,OAAO,YACnC,CACEhK,WAAY,SAGhBuP,GAAO,EACP,OAKHA,GACsB,GAArBT,GACF3P,EAAS,yBAA0B,CACjCa,WAAY,YAKnB,CAAC8O,EAAmB/H,IAEvB,IAwBImJ,EAAa,WACfrB,EAAa,SACbI,EAAY,IACZE,GAAY1E,GACZyE,EAAS,MAGX,OACE,eAAC7J,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,UACE,oBAAItF,UAAU,iBAAd,6BACA,uBACA,eAACuF,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAvB,UACE,eAAC/H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,sBAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,4BACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAW4Q,EAAqB5Q,EAAMC,OAAOC,QACvDpB,aAAa,IAHf,UAKE,wBAAQoB,MAAM,IAAd,0BACCmQ,GAAkB,KAAlB,OACCA,QADD,IACCA,OADD,EACCA,EAAgBxK,KAAI,SAACmM,GAAD,OAClB,yBAAQ9R,MAAO8R,EAAclG,OAAOrN,GAApC,UACGuT,EAAclG,OAAOrJ,SAAU,IAC/BuP,EAAclG,OAAOtJ,uBAMhC,eAAC9C,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLd,SAA+B,GAArB2R,EACV5R,SAAU,SAACiB,GAAD,OAhHL,SAACyK,GAChB,IAAIC,EAAQD,EAAKjM,MAAM,KACnBmM,EAAI,IAAIC,KACVtF,OAAOC,SAASmF,EAAM,IACtBpF,OAAOC,SAASmF,EAAM,IAAM,EAC5BpF,OAAOC,SAASmF,EAAM,KAExB7B,EAAa8B,GAyGkBK,CAAWhL,EAAMC,OAAOC,aAIjD,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,yBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLI,MAAOuQ,EACPzR,SAA+B,GAArB2R,EACV5R,SAAU,SAACiB,GAAD,OAAW0Q,EAAa1Q,EAAMC,OAAOC,aAInD,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAiByC,IAAE,EAAzC,UACE,cAAC1K,EAAA,EAAKE,MAAN,oCACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAO2Q,EACP7R,SAA+B,GAArB2R,EACV5R,SAAU,SAACiB,GAAD,OACR8Q,EAAYxL,OAAOC,SAASvF,EAAMC,OAAOC,SAE3CmK,IAAI,SAIR,eAAC3K,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAcyC,IAAE,EAAtC,UACE,cAAC1K,EAAA,EAAKE,MAAN,oBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAOwL,EACP1M,SAA+B,GAArB2R,EACV5R,SAAU,SAACiB,GAAD,OACR+Q,EAASzL,OAAOC,SAASvF,EAAMC,OAAOC,SAExCmK,IAAI,SAIR,cAACtI,EAAA,EAAD,CACE/C,SAA+B,GAArB2R,EACV3O,QAAQ,UACRlC,KAAK,SACLgI,QAxGY,WACpB,IAAI2C,EAAO7B,EAEP8B,EADO+F,EACMjS,MAAM,KACvBiM,EAAKI,SAASvF,OAAOC,SAASmF,EAAM,IAAKpF,OAAOC,SAASmF,EAAM,IAAK,GACpE,IAAIuH,EAAOxH,EAAKM,UACZ7P,EAAU,CAAE2V,WAAUnF,MAAOA,EAAOmG,UAAWI,GACnD3U,QAAQ4U,IAAIhX,GAEZN,EACG6G,KADH,2BAC4B2K,EAD5B,YAC4CuE,GAAqBzV,GAC9D0G,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,YAEdkQ,OAEDxO,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,cAiFZ,uBASF,cAACyF,EAAA,EAAD,UAC0B,GAAvBiJ,EAAanS,QACZ,gCACE,eAACwR,GAAA,EAAD,CAAO5N,QAAQ,UAAf,UACE,cAAC4N,GAAA,EAAMC,QAAP,wCACA,wHAKF,eAACrG,GAAA,EAAD,CAAOC,UAAQ,EAACE,SAAO,EAAC3H,QAAQ,OAAhC,UACE,gCACE,+BACE,mCACA,4CACA,0CACA,4CAGJ,gCACGuO,GAAgB,IACfA,EAAa1K,KAAI,SAACsM,EAAarI,GAAd,OACf,+BACE,6BAAKA,EAAQ,IACb,6BACG6B,KAAOwG,EAAYN,WAAWhG,OAAO,aAExC,6BAAKF,KAAOwG,EAAYL,SAASjG,OAAO,aACxC,6BAAKsG,EAAYC,0CClJ1BC,OAlGf,SAA6BpT,GAAQ,IAAD,EACMC,mBAAS,IADf,mBAC3B0K,EAD2B,KACb0I,EADa,OAEQpT,oBAAU,GAFlB,mBAE3BgJ,EAF2B,KAEZC,EAFY,OAGRjJ,mBAAS,KAHD,mBAG3BwM,EAH2B,KAGpBqF,EAHoB,iDASlC,4BAAA1T,EAAA,sEACwBzC,EAAIqK,IAAJ,wDAC6BhG,EAAMmN,eACvD7I,OAAM,eAHV,cACQrI,EADR,OAIEoX,EAAkBpX,EAAUA,EAAQe,KAAO,IAJ7C,kBAKSf,GALT,4CATkC,sBAuBlC,OANAoE,qBAAU,gBACkBkM,GAAtBvM,EAAMmN,cAlBsB,mCAmB9BmG,KAED,CAACtT,EAAMmN,aAAcnN,EAAMuT,sBAG5B,eAAC1J,GAAA,EAAD,yBACEC,SAAU,WACRZ,GAAkB,GAClB4I,EAAS,OAEP9R,GALN,IAME4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EARV,UAUE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,+BAIF,eAACqK,GAAA,EAAMO,KAAP,WACE,eAACG,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAC3H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,sCACA,yCACA,iDAGJ,gCAC2B,IAAZ,OAAZ4H,QAAY,IAAZA,OAAA,EAAAA,EAAcxL,UAAd,OACCwL,QADD,IACCA,OADD,EACCA,EAAc/D,KAAI,SAACgE,EAAMC,GAAP,OAChB,qBACEhC,QAAS,WAjDP,IAACiC,IAkDWF,EAAKpL,GAjDjC0J,EAAiB4B,IAmDHjI,UAAS,UAAKoG,GAAiB2B,EAAKpL,GAAK,cAAgB,WAJ3D,UAOE,6BAAKqL,EAAQ,IACb,6BAAKD,EAAKK,OACV,6BAAKL,EAAKvN,OACV,6BAAKuN,EAAK4I,UACV,6BAAK5I,EAAKM,uBAKpB,eAACzK,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAcyC,IAAE,EAAtC,UACE,cAAC1K,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAOwL,EACP1M,UAA4B,GAAlBkJ,EACVnJ,SAAU,SAACiB,GAAD,OAAW+Q,EAASzL,OAAOC,SAASvF,EAAMC,OAAOC,SAC3DmK,IAAI,YAIV,eAACvB,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVlG,QAAQ,UACR8F,QAAS,WACP7I,EAAMkM,UAAUjD,EAAewD,IAJnC,kCCrCOgH,OAjDf,SAA0BzT,GAAQ,IAAD,EACLC,mBAAS,GADJ,mBACxBwM,EADwB,KACjBqF,EADiB,KAG/B,OACE,eAACjI,GAAA,EAAD,yBACEC,SAAU,WACRgI,EAAS,IAEX4B,UAAW,WACT5B,EAAS9R,EAAM2T,YAEb3T,GAPN,IAQE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAVV,UAYE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,4BAIF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAAC3J,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAcyC,IAAE,EAAtC,UACE,cAAC1K,EAAA,EAAKE,MAAN,oBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAOwL,EACP3M,SAAU,SAACiB,GAAD,OAAW+Q,EAASzL,OAAOC,SAASvF,EAAMC,OAAOC,SAC3DmK,IAAI,WAIV,eAACvB,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,WACP7I,EAAM4F,aAAa6G,IAHvB,kCC0NOmH,OAnPf,YAKI,IAJFzG,EAIC,EAJDA,aACAC,EAGC,EAHDA,YACAyG,EAEC,EAFDA,iBACAC,EACC,EADDA,oBAEQ/R,EAAaC,sBAAbD,SADP,EAGyC9B,mBAAS,IAHlD,mBAGM2O,EAHN,KAGqBC,EAHrB,OAIyC5O,oBAAU,GAJnD,mBAIMgJ,EAJN,KAIqBC,EAJrB,OAK+CjJ,oBAAU,GALzD,mBAKM8T,EALN,KAKwBC,EALxB,OAMuC/T,oBAAS,GANhD,mBAMMyO,EANN,KAMoBC,EANpB,OAOuD1O,oBAAS,GAPhE,mBAOMgU,EAPN,KAO4BC,EAP5B,OAQ6CjU,oBAAS,GARtD,mBAQMkU,EARN,KAQuBC,EARvB,cAUcpF,IAVd,2EAUD,4BAAA5Q,EAAA,sEACwBzC,EACnBqK,IADmB,yBACGoH,IACtBzK,MAAK,SAACF,GACLoM,EAAiBpM,EAAIzF,KAAK4R,kBAE3BtK,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAYSA,GAZT,4CAVC,kEAoCD,WAA2BoY,EAAoB5H,GAA/C,eAAArO,EAAA,sEACwBzC,EACnB6G,KADmB,yBAEA4K,EAFA,wBAE2BiH,EAF3B,YAEiD5H,IAEpE9J,MAAK,SAACF,GACLuM,IACA8E,GAAqBD,GACrB9R,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAdpB,cACQ3G,EADR,yBAiBSA,GAjBT,4CApCC,kEAwDD,4BAAAmC,EAAA,sEACwBzC,EACnB4T,OADmB,yBACMnC,EADN,2BACoCnE,IACvDtG,MAAK,SAACF,GACLuM,IACA8E,GAAqBD,GACrB9R,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAZpB,cACQ3G,EADR,yBAeSA,GAfT,4CAxDC,kEA0ED,WAA2BwQ,GAA3B,eAAArO,EAAA,sEACwBzC,EACnB6G,KADmB,yBAEA4K,EAFA,wBAE2BnE,EAF3B,YAE4CwD,IAE/D9J,MAAK,SAACF,GACLuM,IACAjN,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAbpB,cACQ3G,EADR,yBAgBSA,GAhBT,4CA1EC,sBAyBDoE,qBAAU,gBACWkM,GAAfa,GACF4B,MAED,CAAC5B,IAgEJ,IAmBIkH,EAAe,YAhHlB,mCAiHCC,GACArL,GAAkB,IAGpB,OACE,eAACjB,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,oBAAItF,UAAU,iBAAd,sBACA,cAACuF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACkC,GAAA,EAAD,CAAOC,UAAQ,EAACE,SAAO,EAACD,OAAK,EAAC1H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,sCACA,yCACA,4CACA,uCACA,6CAGJ,gCAC4B,IAAZ,OAAb6L,QAAa,IAAbA,OAAA,EAAAA,EAAezP,UAAf,OACCyP,QADD,IACCA,OADD,EACCA,EAAehI,KAAI,SAACgE,EAAMC,GAAP,OACjB,qBACEhC,QAAS,WA3GT,IAAC2L,EAAgB/H,EAAhB+H,EA4Ga5J,EAAKpL,GA5GFiN,EA4GM7B,EAAK6J,OA3G5CvL,EAAiBsL,GACjBR,EAAoBvH,IA4GJ5J,UAAS,UAAKoG,GAAiB2B,EAAKpL,GAAK,cAAgB,UAAhD,KAJX,UAOE,6BAAKqL,EAAQ,IACb,6BAAKD,EAAKI,SAASC,OACnB,6BAAKL,EAAKI,SAAS3N,OACnB,6BAAKuN,EAAKI,SAASwI,UACnB,6BAAK5I,EAAKI,SAASE,WACnB,+BAAKN,EAAK6J,OAAV,OACA,6BAAK7J,EAAKvB,qBAMpB,sBAAKxG,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVlG,QAAQ,YACR8F,QAAS,WACPqL,GAAwB,IAJ5B,0BASA,cAACpR,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,WACP8F,GAAgB,GAChBzF,GAAkB,IAJtB,iBASA,cAACpG,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVlG,QAAQ,SACR8F,QAAS,WACPuL,GAAmB,IAJvB,uBAWF,cAAC,GAAD,CACEb,oBAAmB,OAAE3E,QAAF,IAAEA,OAAF,EAAEA,EAAezP,OACpCgO,aAAcA,EACdgD,KAAMzB,EACNzC,OAtFgB,WACxB0C,GAAgB,IAsFRzC,UAlGe,SAACmI,EAAoB5H,GAC5CkC,GAAgB,GA9FjB,sCA+FC+F,CAAYL,EAAoB5H,MAkG1B,cAAC,GAAD,CACEkH,SAAUI,EACV5D,KAAM8D,EACNhI,OAxFwB,WAChCiI,GAAwB,IAwFhBtO,aAnGuB,SAAC6G,GAChCyH,GAAwB,GACpBH,GAAoBtH,GApGzB,oCAoGgCkI,CAAYlI,GAC3CvD,GAAkB,MAkGZ,eAACW,GAAA,EAAD,CACE8J,SAAUxG,EACVgD,KAAMgE,EACNlI,OAAQ,WACNmI,GAAmB,IAJvB,UAOE,cAACvK,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,0BAEF,cAACN,GAAA,EAAMO,KAAP,4DAGA,eAACP,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CACEC,QAAQ,YACR8F,QAAS,WACPuL,GAAmB,IAHvB,mBAQA,cAACtR,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,WACPyL,IACAF,GAAmB,IAJvB,mCChMCQ,OA7Cf,SAA4B5U,GAAQ,IAAD,EACLC,mBAAS,IADJ,mBAC1B4U,EAD0B,KAClBC,EADkB,KAEjC,OACE,eAACjL,GAAA,EAAD,yBACEC,SAAU,WACRgL,EAAU,MAER9U,GAJN,IAKE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAPV,UASE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,4CAIF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAAC3J,EAAA,EAAKC,MAAN,CAAYgI,UAAU,+BAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,mDACA,cAACF,EAAA,EAAKG,QAAN,CACEd,SAAU,SAACiB,GAAD,OAAW+T,EAAU/T,EAAMC,OAAOC,QAC5CwH,GAAG,WACHsM,KAAM,SAIZ,eAAClL,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,SAAqB,KAAX8U,EACV9R,QAAQ,UACR8F,QAAS,WACP7I,EAAMgV,cAAcH,IAJxB,kCCmHOI,OAxIf,YAAmD,IAAjB9H,EAAgB,EAAhBA,aACxBpL,EAAaC,sBAAbD,SADwC,EAEhB9B,mBAAS,IAFO,mBAEzCiV,EAFyC,KAE/BC,EAF+B,OAGNlV,oBAAU,GAHJ,mBAGzCgJ,EAHyC,KAG1BC,EAH0B,OAIdjJ,oBAAS,GAJK,mBAIzCmV,EAJyC,KAI9BC,EAJ8B,cAMjCC,IANiC,2EAMhD,4BAAAlX,EAAA,sEACwBzC,EAAIqK,IAAJ,0DAC+BmH,IACnD7I,OAAM,eAHV,cACQrI,EADR,OAIEkZ,EAAclZ,EAAUA,EAAQe,KAAO,IAJzC,kBAMSf,GANT,4CANgD,kEAehD,WAA6B4Y,GAA7B,eAAAzW,EAAA,sEACwBzC,EACnB6G,KADmB,sCACiByG,GAAiB4L,GACrDlS,MAAK,SAACF,GACL6S,IACAvT,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAXpB,cACQ3G,EADR,yBAcSA,GAdT,4CAfgD,kEAgChD,4BAAAmC,EAAA,sEACwBzC,EACnB6G,KADmB,sCACiByG,IACpCtG,MAAK,SAACF,GACL6S,IACAvT,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAXpB,cACQ3G,EADR,yBAcSA,GAdT,4CAhCgD,sBAsEhD,OArBAoE,qBAAU,gBACYkM,GAAhBY,GACFmI,MAED,CAACnI,IAkBF,eAAClF,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,oBAAItF,UAAU,iBAAd,iDACA,cAACuF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACkC,GAAA,EAAD,CAAOC,UAAQ,EAACE,SAAO,EAACD,OAAK,EAAC1H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,uCACA,4CACA,0CACA,qDAGJ,kCACG,IACoB,IAAZ,OAARmS,QAAQ,IAARA,OAAA,EAAAA,EAAU/V,UAAV,OACC+V,QADD,IACCA,OADD,EACCA,EAAUtO,KAAI,SAACgE,EAAMC,GAAP,OACZ,qBACEhC,QAAS,WApCT,IAAC0M,IAqCa3K,EAAKpL,GApCnC0J,EAAiBqM,IAsCD1S,UAAS,UAAKoG,GAAiB2B,EAAKpL,GAAK,cAAgB,UAAhD,KAJX,UAOE,6BAAKqL,EAAQ,IACb,6BAAKD,EAAK4K,cACV,6BAAK5K,EAAK6K,eACV,6BAAK/I,KAAO9B,EAAK8K,OAAO9I,OAAO,gBAC/B,6BAAKF,KAAO9B,EAAK+K,KAAK/I,OAAO,gBAC7B,6BAAKhC,EAAKgL,6BAMpB,cAAC,GAAD,CACEzF,KAAMiF,EACNnJ,OAAQ,kBAAMoJ,GAAa,IAC3BL,cApDS,SAACH,GAClBQ,GAAa,GA5DiC,oCA6D9CL,CAAcH,GACd3L,GAAkB,MAoDZ,sBAAKrG,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVJ,QApDO,YAjE6B,mCAkE9CgN,GACA3M,GAAkB,IAmDRnG,QAAQ,UAHV,4BAOA,cAACD,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVJ,QAAS,kBAAMwM,GAAa,IAC5BtS,QAAQ,YAHV,wC,0BCkHG+S,OAjPf,SAA2B9V,GAAQ,IACzB+B,EAAaC,sBAAbD,SADwB,EAEI9B,mBAAS,IAFb,mBAEzB8V,EAFyB,KAEbC,EAFa,OAGU/V,oBAAU,GAHpB,mBAGzBgJ,EAHyB,KAGVC,EAHU,OAKEjJ,mBAAS,IALX,mBAKzBuR,EALyB,KAKdC,EALc,OAMFxR,mBAAS,IANP,mBAMzBgW,EANyB,KAMhBC,EANgB,OAQFjW,oBAAS,GARP,mBAQzBkW,EARyB,KAQhBC,EARgB,OASFnW,oBAAS,GATP,mBASzBoW,EATyB,KAShBC,EATgB,OAUFrW,oBAAS,GAVP,mBAUzBsW,EAVyB,KAUhBC,EAVgB,OAWFvW,oBAAS,GAXP,mBAWzBwW,EAXyB,KAWhBC,EAXgB,OAYFzW,oBAAS,GAZP,mBAYzB0W,EAZyB,KAYhBC,EAZgB,OAaF3W,oBAAS,GAbP,mBAazB4W,EAbyB,KAahBC,GAbgB,QAcF7W,oBAAS,GAdP,qBAczB8W,GAdyB,MAchBC,GAdgB,oDAoBhC,8BAAA5Y,EAAA,6DACE8K,GAAkB,GACdJ,EAAM,CACR0I,YACAyE,UACAE,UACAE,UACAE,UACAE,UACAE,UACAE,UACAE,YAXJ,SAawBpb,EACnB6G,KADmB,wDAE+BxC,EAAMmN,cACvDrE,GAEDnG,MAAK,SAACF,GACLuT,EAAcvT,EAAIzF,SAEnBsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAvBpB,cAaQ3G,EAbR,yBA2BSA,GA3BT,4CApBgC,sBAkDhC,OACE,eAAC4N,GAAA,EAAD,yBACEC,SAAU,WACRkM,EAAc,IACd9M,GAAkB,GAClBuI,EAAa,IACbyE,EAAW,IACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,IAAW,GACXE,IAAW,KAEThX,GAdN,IAeE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAjBV,UAmBE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,6BAIF,eAACqK,GAAA,EAAMO,KAAP,WACE,cAAChC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAAC5H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAcyC,IAAE,EAAtC,UACE,cAAC1K,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAOuQ,EACP1R,SAAU,SAACiB,GAAD,OAAW0Q,EAAa1Q,EAAMC,OAAOC,aAGnD,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,YAAYyC,IAAE,EAApC,UACE,cAAC1K,EAAA,EAAKE,MAAN,wBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLI,MAAOgV,EACPnW,SAAU,SAACiB,GAAD,OAAWmV,EAAWnV,EAAMC,OAAOC,kBAKrD,cAACmH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,0CACA,eAACkC,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAC9B,KAAK,KAAK7F,QAAQ,OAAhD,UACE,gCACE,+BACE,mCACA,8CAGJ,kCACE,qBACEF,UAAS,UAAKsT,GAAW,cAAhB,YACTtN,QAAS,kBAAMuN,GAAYD,IAF7B,UAIE,mCACA,2CAEF,qBACEtT,UAAS,UAAKwT,GAAW,cAAhB,YACTxN,QAAS,kBAAMyN,GAAYD,IAF7B,UAIE,mCACA,4CAEF,qBACExT,UAAS,UAAK0T,GAAW,cAAhB,YACT1N,QAAS,kBAAM2N,GAAYD,IAF7B,UAIE,mCACA,8CAEF,qBACE1T,UAAS,UAAK4T,GAAW,cAAhB,YACT5N,QAAS,kBAAM6N,GAAYD,IAF7B,UAIE,mCACA,6CAEF,qBACE5T,UAAS,UAAK8T,GAAW,cAAhB,YACT9N,QAAS,kBAAM+N,GAAYD,IAF7B,UAIE,mCACA,2CAEF,qBACE9T,UAAS,UAAKgU,GAAW,cAAhB,YACThO,QAAS,kBAAMiO,IAAYD,IAF7B,UAIE,mCACA,6CAEF,qBACEhU,UAAS,UAAKkU,IAAW,cAAhB,YACTlO,QAAS,kBAAMmO,IAAYD,KAF7B,UAIE,mCACA,sDAMV,cAAC3O,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKxF,UAAU,SAAf,SACE,cAACC,EAAA,EAAD,CACE/C,UACGoW,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,GAEHhU,QAAQ,UACR8F,QA7KoB,4CAkKtB,uBAiBJ,cAACT,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACkC,GAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAC3H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,2CACA,0CACA,iDAGJ,gCACyB,IAAZ,OAAVgT,QAAU,IAAVA,OAAA,EAAAA,EAAY5W,UAAZ,OACC4W,QADD,IACCA,OADD,EACCA,EAAYnP,KAAI,SAACgE,EAAMC,GAAP,OACd,qBACEhC,QAAS,WAnLX,IAACiC,IAoLeF,EAAKpL,GAnLrC0J,EAAiB4B,IAqLCjI,UAAS,UAAKoG,GAAiB2B,EAAKpL,GAAK,cAAgB,WAJ3D,UAOE,6BAAKqL,EAAQ,IACb,oCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAMpG,WACX,6BAAKoG,EAAKrH,YACV,6BAAKqH,EAAKpH,WACV,6BAAKoH,EAAKM,8BAQ1B,eAACrB,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVlG,QAAQ,UACR8F,QAAS,WACP7I,EAAMkM,UAAUjD,EAAe,CAC7BuI,YACAyE,UACAE,UACAE,UACAE,UACAE,UACAE,UACAE,UACAE,cAbN,kCC/LOE,OA/Bf,SAA8BjX,GAAQ,IAAD,MACnC,OACE,eAAC6J,GAAA,EAAD,2BACM7J,GADN,IAEE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,iCAIF,eAACqK,GAAA,EAAMO,KAAP,WAC0C,IAAlC,OAALpK,QAAK,IAALA,GAAA,UAAAA,EAAO4G,IAAP,OAAW5G,QAAX,IAAWA,OAAX,EAAWA,EAAOkX,iBAAlB,eAA6B/X,SAC5B,mEAEsC,IAAlC,OAALa,QAAK,IAALA,GAAA,UAAAA,EAAO4G,IAAP,OAAW5G,QAAX,IAAWA,OAAX,EAAWA,EAAOkX,iBAAlB,eAA6B/X,UAA7B,OACCa,QADD,IACCA,GADD,UACCA,EAAO4G,IAAP,OAAW5G,QAAX,IAAWA,OAAX,EAAWA,EAAOkX,iBADnB,aACC,EAA6BtQ,KAAI,SAACgE,GAAD,OAC/B,cAACS,GAAA,EAAUC,KAAX,UAAiBV,WAGvB,cAACf,GAAA,EAAMmC,OAAP,UACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMmX,YAA3C,0BCqUOC,OAhVf,YAA2C,IAAjBjK,EAAgB,EAAhBA,aAChBpL,EAAaC,sBAAbD,SADgC,EAEJ9B,mBAAS,IAFL,mBAEjCoX,EAFiC,KAErBC,EAFqB,OAGMrX,mBAAS,IAHf,mBAGjCsX,EAHiC,KAGhBC,EAHgB,OAKVvX,mBAAS,IALC,mBAKjCwX,EALiC,KAKxBC,EALwB,OAMEzX,mBAAS,IANX,mBAMjC0X,EANiC,KAMlBC,EANkB,OAQE3X,oBAAU,GARZ,mBAQjCgJ,EARiC,KAQlBC,EARkB,OAUIjJ,oBAAU,GAVd,mBAUjC4X,EAViC,KAUjBC,EAViB,OAYA7X,oBAAS,GAZT,mBAYjCyO,EAZiC,KAYnBC,EAZmB,OAaQ1O,oBAAS,GAbjB,mBAajC8X,EAbiC,KAafC,EAbe,OAgBV/X,mBAAS,IAhBC,mBAgBjCgY,EAhBiC,KAgBxBC,EAhBwB,OAiBFjY,mBAAS,IAjBP,mBAiBjCkY,GAjBiC,KAiBpBC,GAjBoB,QAkBYnY,mBAAS,IAlBrB,qBAkBjCoY,GAlBiC,MAkBbC,GAlBa,oDAoBxC,4BAAAla,EAAA,sEACwBzC,EAAIqK,IAAJ,kCAA0C1B,OAAM,eADxE,cACQrI,EADR,OAEEub,EAAqBvb,EAAUA,EAAQe,KAAO,IAFhD,kBAGSf,GAHT,4CApBwC,+BAoCzBsc,KApCyB,8EAoCxC,4BAAAna,EAAA,sEACwBzC,EACnBqK,IADmB,sCACgBmH,IACnCxK,MAAK,SAAC6V,GACLd,EAAWc,EAAKxb,SACfsH,OAAM,eALb,cACQrI,EADR,yBAOSA,GAPT,4CApCwC,oEA8CxC,WAAyBuD,EAAIsJ,GAA7B,eAAA1K,EAAA,sEACwBzC,EACnB6G,KADmB,gDAC2B2K,EAD3B,YAC2C3N,GAAMsJ,GACpEnG,MAAK,SAACF,GACL8V,KACAxW,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAXpB,cACQ3G,EADR,yBAeSA,GAfT,4CA9CwC,oEAgExC,4BAAAmC,EAAA,sEACwBzC,EACnB4T,OADmB,mDAE0BpC,EAF1B,YAE0ClE,IAE7DtG,MAAK,SAACF,GACL8V,KACAxW,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAbpB,cACQ3G,EADR,yBAgBSA,GAhBT,4CAhEwC,sBA0BxCoE,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAI,kBAAkB1B,OAAM,eADxD,cACQrI,EADR,OAEEqb,EAAgBrb,EAAUA,EAAQe,KAAO,IAF3C,kBAISf,GAJT,4CADc,uBAAC,WAAD,wBAOdwc,KACC,IAiDHpY,qBAAU,gBACYkM,GAAhBY,IACFoL,KArFoC,oCAsFpCG,MAED,CAACvL,IAgDJ9M,qBAAU,WACRkL,OACC,CAACkM,IAGJpX,qBAAU,WACR,GAAqB,MAAjBsX,EAAuBC,EAAiBH,OACvC,CACH,GAA2B,KAAvBY,IAA4C,IAAfF,GAAmB,OAEpD,GAA0B,IAAtBE,GAA0B,CAC5B,IAAMM,EAAShB,EAAcpM,QAAO,SAACsB,GACnC,QAAI0K,EAAgB1K,EAAOA,OAAOrN,IAAIuL,SAASsN,OAI7CV,EAAcxY,QAAUwZ,EAAOxZ,QAAQyY,EAAiBe,GAG9D,GAAmB,IAAfR,GACF,GAAoB,QAAhBA,GAAuB,CACzB,IAAMQ,EAAShB,EAAcpM,QAC3B,SAACsB,GAAD,OAAYA,EAAOA,OAAO3B,SAAW,KAEnCyM,EAAcxY,QAAUwZ,EAAOxZ,QAAQyY,EAAiBe,QACvD,GAAoB,WAAhBR,GAA0B,CACnC,IAAMQ,EAAShB,EAAcpM,QAC3B,SAACsB,GAAD,OAAsC,GAA1BA,EAAOA,OAAO3B,YAExByM,EAAcxY,QAAUwZ,EAAOxZ,QAAQyY,EAAiBe,QACvD,GAAoB,SAAhBR,GAAwB,CACjC,IAAMQ,EAAShB,EAAcpM,QAC3B,SAACsB,GAAD,OAAYA,EAAOA,OAAO3B,SAAW,KAEnCyM,EAAcxY,QAAUwZ,EAAOxZ,QAAQyY,EAAiBe,OAIjE,CAAChB,IAEJ,IAAIpM,GAAS,WACXqM,EAAiB,OAGnB,OACE,eAAC3P,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC5H,EAAA,EAAD,CAAM4B,SA1EK,SAACtB,GAClBA,EAAMuB,iBAEiB,IAAnB2V,EAAQ9Y,OACVoZ,KAEA5c,EACGqK,IADH,gCACgCmH,GAAgB,CAC5C4B,OAAQ,CAAE6J,YAAaX,KAExBtV,MAAK,SAAC6V,GACLd,EAAWc,EAAKxb,SACfsH,OAAM,gBA8DP,SACE,eAAC7D,EAAA,EAAKC,MAAN,CAAYmC,UAAU,WAAW4B,MAAO,CAAEoU,UAAW,QAArD,UACE,cAACpY,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,cACL4D,MAAOgX,EACPnY,SAAU,SAACrD,GAAD,OAAOyb,EAAWzb,EAAEuE,OAAOC,QACrCrB,YAAY,8BAGd,cAACkD,EAAA,EAAD,CAAQjC,KAAK,SAASgC,UAAU,sBAAhC,SACE,cAAC,KAAD,MAEF,eAACC,EAAA,EAAD,CACED,UAAU,+BACVgG,QAzEM,WAClBqP,EAAW,IACXK,MAqEU,mBAIQ,cAAC,KAAD,cAMd,cAAClQ,EAAA,EAAD,UACE,eAAC5H,EAAA,EAAD,CAAM4B,SA7EK,SAACtB,GAClBA,EAAMuB,iBACNiJ,MA2EkC1I,UAAU,kBAAtC,UACE,eAACpC,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,oBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWqX,GAAerX,EAAMC,OAAOC,QACjDpB,aAAa,GAHf,UAKE,wBAAQoB,MAAM,GAAd,0BACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAGJ,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,4BACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWuX,GAAsBvX,EAAMC,OAAOC,QACxDpB,aAAc,GAHhB,UAKE,wBAAQoB,MAAM,GAAd,0BACuB,IAAZ,OAAVoW,QAAU,IAAVA,OAAA,EAAAA,EAAYlY,UAAZ,OACCkY,QADD,IACCA,OADD,EACCA,EAAYzQ,KAAI,SAACgE,EAAMC,GAAP,OACd,wBAAQ5J,MAAO2J,EAAKvN,KAApB,SAA2BuN,EAAKvN,iBAIxC,cAACyF,EAAA,EAAD,CAAQjC,KAAK,SAASgC,UAAU,sBAAhC,SACE,cAAC,KAAD,cAMR,cAACuF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACkC,GAAA,EAAD,CAAOC,UAAQ,EAACE,SAAO,EAACD,OAAK,EAAC1H,QAAQ,OAAtC,UACE,gCACE,+BACE,mCACA,sCACA,2CACA,0CACA,uCACA,uCACA,iDAGJ,kCACG,IACyB,IAAZ,OAAb4U,QAAa,IAAbA,OAAA,EAAAA,EAAexY,UAAf,OACCwY,QADD,IACCA,OADD,EACCA,EAAe/Q,KAAI,SAACgE,EAAMC,GAAP,uBACjB,qBACEhC,QAAS,WA5KT,IAAC0M,EAAW2B,EAAX3B,EA6Ka3K,EAAKpL,GA7KP0X,EA6KWtM,EAAKiC,OAAOrN,GA5KnD0J,EAAiBqM,GACjBuC,EAAkBZ,IA6KFrU,UAAS,UAAKoG,GAAiB2B,EAAKpL,GAAK,cAAgB,UAAhD,KAJX,UAOE,6BAAKqL,EAAQ,IACb,oCAAKD,QAAL,IAAKA,GAAL,UAAKA,EAAMiC,cAAX,aAAK,EAAcrI,WACnB,oCAAKoG,QAAL,IAAKA,GAAL,UAAKA,EAAMiC,cAAX,aAAK,EAActJ,YACnB,oCAAKqH,QAAL,IAAKA,GAAL,UAAKA,EAAMiC,cAAX,aAAK,EAAcrJ,WACnB,oCAAKoH,QAAL,IAAKA,GAAL,UAAKA,EAAMiC,cAAX,aAAK,EAAcpL,QACnB,oCAAKmJ,QAAL,IAAKA,GAAL,UAAKA,EAAMiC,cAAX,aAAK,EAAcnJ,YACnB,oCAAKkH,QAAL,IAAKA,GAAL,UAAKA,EAAMiC,cAAX,aAAK,EAAc3B,wBAM7B,sBAAKrI,UAAU,SAAf,WACoB,GAAjBsK,GACC,gCACE,cAACrK,EAAA,EAAD,CACE+F,QAAS,WACP8F,GAAgB,GAChBzF,GAAkB,IAEpBnG,QAAQ,UALV,wBASA,cAACD,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVJ,QAvMG,YA/FqB,oCAgGtCiQ,GACA5P,GAAkB,GAClB4O,GAAmB,IAqML/U,QAAQ,SAHV,2BAQA,cAAC,GAAD,CACEgW,cAAa,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAStY,OACxBgO,aAAcA,EACdgD,KAAMzB,EACNzC,OAAQ,WACN0C,GAAgB,IAElBzC,UA9MS,SAACmI,EAAoBvL,GAC5C6F,GAAgB,GAtGsB,uCAuGtCqK,CAAU3E,EAAoBvL,SAgNtB,cAAChG,EAAA,EAAD,CACE/C,UAA4B,GAAlBkJ,EACVJ,QA/MK,WACfmP,GAAoB,IA+MVjV,QAAQ,OAHV,6BAOA,cAAC,GAAD,CACE6D,IAAK2Q,EACLL,SAAUW,EACV1H,KAAM4H,EACNZ,YAAa,WACXa,GAAoB,IAEtB/L,OAAQ,WACN+L,GAAoB,kBCxOrBiB,OAnGf,YAAyD,IAA7B9L,EAA4B,EAA5BA,aAAcG,EAAc,EAAdA,WAAc,EACpBrN,mBAAS,IADW,mBAC/CiZ,EAD+C,KACpCC,EADoC,OAERlZ,mBAAS,IAFD,mBAE/CmZ,EAF+C,KAE9BC,EAF8B,OAGZpZ,mBAAS,UAHG,mBAG/CiO,EAH+C,KAGhCC,EAHgC,iDAKtD,4BAAA/P,EAAA,sEACwBzC,EAAIqK,IAAJ,oCACSmH,IAC7B7I,OAAM,eAHV,cACQrI,EADR,OAIEkd,EAAeld,EAAUA,EAAQe,KAAO,IAJ1C,kBAKSf,GALT,4CALsD,sBAatDoE,qBAAU,gBACYkM,GAAhBY,GACFmM,EAAgB,YAEjB,CAACJ,IAEJ7Y,qBAAU,gBACYkM,GAAhBY,GApBgD,mCAqBlDoM,KAED,CAACpM,EAAcG,IAElB,IAAIgM,EAAkB,SAAC/N,GACrB,IAAIoN,EAASO,EAAU3N,QAAO,SAACX,GAC7B,MAAc,UAAVW,EAA2BX,EAAK4O,QACvB5O,EAAK4O,UAGpBH,EAAmBV,IAGrB,OACE,eAAC1Q,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,oBAAItF,UAAU,iBAAd,uBACA,uBACA,eAACuF,EAAA,EAAD,WACG,IACD,eAAC4H,GAAA,EAAD,WACE,eAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,sBACY0O,KAGZ,eAAC8B,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPyQ,EAAgB,UAChBnL,EAAiB,WAHrB,oBAQA,cAAC6B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPyQ,EAAgB,OAChBnL,EAAiB,UAHrB,4BAWN,uBACA,cAAC/F,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACkC,GAAA,EAAD,CAAOG,SAAO,EAACF,UAAQ,EAACzH,QAAQ,OAAhC,UACE,gCACE,+BACE,mCACA,0CACA,sCACA,wCACA,6CAGJ,gCACGqW,GACCA,EAAgBxS,KAAI,SAACgE,EAAMC,GAAP,OAClB,+BACE,6BAAKA,EAAQ,IACb,6BAAKD,EAAKgE,cAAc5D,SAAS3N,OACjC,6BAAKqP,KAAO9B,EAAKY,MAAMoB,OAAO,iBAC9B,+BACGhC,EAAKiC,OAAOtJ,UADf,IAC2BqH,EAAKiC,OAAOrJ,YAEvC,6BAAKoH,EAAK4O,OAAS,OAAS,6B,oBCgMjCC,OAzRf,YAA8C,IAApBzU,EAAmB,EAAnBA,gBAChBjD,EAAaC,sBAAbD,SADmC,EAET9B,mBAAS,MAFA,mBAEpCyZ,EAFoC,KAEzBC,EAFyB,OAID1Z,mBAAS,OAJR,mBAIpC2Z,EAJoC,KAIrBC,EAJqB,OAKC5Z,mBAAS,WALV,mBAKpC6Z,EALoC,KAKpBC,EALoB,OAMD9Z,mBAAS,gBANR,mBAMpC+Z,EANoC,KAMrBC,EANqB,OAQKha,mBAAS,MARd,mBAQpCia,EARoC,KAQlBC,EARkB,OASWla,mBAAS,MATpB,mBASpCma,EAToC,KASfC,EATe,OAUPpa,mBAAS,MAVF,mBAUpCqa,EAVoC,KAUxBC,EAVwB,OAYXta,mBAAS,GAZE,mBAYpC2R,EAZoC,KAY1BC,EAZ0B,KAcrC2I,EAAa,CACjBjK,OAAQ,IACRD,MAAO,IACPvR,QAAS,CACP0b,qBAAqB,EACrBC,OAAQ,CAAEC,MAAO,CAAC,CAAEC,MAAO,CAAEC,aAAa,MAC1CC,QAAS,CACPC,MAAO,CACLhK,SAAS,EACTrL,KAAM,4CAvB6B,4CA6B3C,4BAAAtH,EAAA,sEACwBzC,EAAIqK,IAAJ,yCACOhB,QADP,IACOA,OADP,EACOA,EAAiBxF,GADxB,YAC8Bsa,IAClDxV,OAAM,eAHV,cACQrI,EADR,OAIEke,EAAsBle,EAAUA,EAAQe,KAAO,MAJjD,kBAKSf,GALT,4CA7B2C,kEAqC3C,4BAAAmC,EAAA,sEACwBzC,EAAIqK,IAAJ,kDACgBhB,QADhB,IACgBA,OADhB,EACgBA,EAAiBxF,GADjC,YACuCsa,IAC3DxV,OAAM,eAHV,cACQrI,EADR,OAIEoe,EAAyBpe,EAAUA,EAAQe,KAAO,MAJpD,kBAKSf,GALT,4CArC2C,kEA6C3C,4BAAAmC,EAAA,sEACwBzC,EAAIqK,IAAJ,sCACIhB,QADJ,IACIA,OADJ,EACIA,EAAiBxF,GADrB,YAC2Bsa,EAD3B,YAC6ClI,IACjEtN,OAAM,eAHV,cACQrI,EADR,OAIEse,EAAgBte,EAAUA,EAAQe,KAAO,MAJ3C,kBAKSf,GALT,4CA7C2C,sBAqD3CoE,qBAAU,gBACekM,GAAnBvH,IAtDqC,mCAuDvCgW,GAvDuC,mCAwDvCC,GACqB,iBAAjBjB,GAAgD,GAAZpI,GAzDD,mCA0DrCsJ,MAEH,CAAClW,EAAiB8U,EAAgBE,EAAepI,IAEpDvR,qBAAU,WACgB,MAApB6Z,GAAmD,MAAvBE,IACR,kBAAlBJ,GAAmD,MAAdM,GAAoBa,IACvC,iBAAlBnB,GAAkCmB,OAEvC,CAACjB,EAAkBE,EAAqBE,EAAYV,IAEvD,IAAIuB,EAAY,WACd,IAaIC,EAbAC,EAAW,GACXC,EAASC,OAAOC,KAAKtB,GAErBuB,EAASC,EAAgBJ,EAAOnc,QAChCwc,EAAW,CACbC,MAAO,yBACP5e,KAAMue,OAAOM,OAAO3B,GACpB4B,gBAAiBL,EACjBM,YAAa,QACbC,YAAa,GAEfX,EAASY,KAAKN,GAQZP,EAJkB,QAAlBxB,GACkB,SAAlBA,GACkB,UAAlBA,EAEU8B,EAAgBH,OAAOC,KAAKpB,GAAqBjb,QAC9Csc,EAEf,IAAIS,EAAW,CACbN,MAAO,uBACP5e,KAAMue,OAAOM,OAAOzB,GACpB0B,gBAAiBV,EACjBW,YAAa,QACbC,YAAa,GAKf,GAFAX,EAASY,KAAKC,GAEQ,kBAAlBlC,EAAmC,CACrC,IAAImC,EAMFA,EAJkB,QAAlBvC,GACkB,SAAlBA,GACkB,UAAlBA,EAEU8B,EAAgBH,OAAOC,KAAKlB,GAAYnb,QACrCsc,EAEf,IAAIW,EAAW,CACbR,MAAO,SACP5e,KAAMue,OAAOM,OAAOvB,GACpBwB,gBAAiBK,EACjBJ,YAAa,QACbC,YAAa,GAGfX,EAASY,KAAKG,GAGhBzC,EAAa,CAAE2B,SAAQD,cAGrBK,EAAkB,SAACvc,GACrB,GACoB,QAAlBya,GACkB,SAAlBA,GACkB,UAAlBA,EAEA,MAAO,IAAMnK,KAAKC,MAAsB,SAAhBD,KAAK4M,UAAqB9V,SAAS,IAE7D,IACI2L,EACAoK,EAFA7Q,EAAQ,GAGZ,IAAKyG,EAAI,EAAGA,EAAI/S,EAAQ+S,IACtBoK,EAAc7M,KAAKC,MAAsB,SAAhBD,KAAK4M,UAAqB9V,SAAS,IAC5DkF,EAAMwQ,KAAK,IAAMK,GAEnB,OAAO7Q,GAaT,OACE,eAACxD,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,oBAAItF,UAAU,iBAAd,qBACA,uBACA,eAACuF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKxF,UAAU,SAAf,SACE,wDAAoBmC,QAApB,IAAoBA,OAApB,EAAoBA,EAAiBkG,cAEvC,cAAC7C,EAAA,EAAD,CAAKxF,UAAU,SAAf,SACE,oHAMJ,uBACA,eAACuF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAAC2H,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,OAAOvD,GAAG,iBAAnC,SACGoa,IAGH,cAAC5J,GAAA,EAASE,KAAV,UA3BQ,CAAC,OAAQ,MAAO,QAAS,WAAY,YAAa,OA4B7CtJ,KAAI,SAACgE,GAAD,OACb,cAACoF,GAAA,EAAS1E,KAAV,CACEkO,OAAQI,GAAiBhP,EACzB/B,QAAS,WACPgR,EAAiBjP,IAHrB,SAMGA,cAMX,cAACvC,EAAA,EAAD,UACE,eAAC2H,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,OAAOvD,GAAG,iBAAnC,SACGsa,IAGH,cAAC9J,GAAA,EAASE,KAAV,UA9CM,CAAC,UAAW,YAAa,UA+CpBtJ,KAAI,SAACgE,GAAD,OACX,cAACoF,GAAA,EAAS1E,KAAV,CACEkO,OAAQM,GAAkBlP,EAC1B/B,QAAS,WACPkR,EAAkBnP,GAClBiH,EAAY,IAJhB,SAOGjH,cAMX,cAACvC,EAAA,EAAD,UACE,eAAC2H,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,OAAOvD,GAAG,iBAAnC,SACGwa,IAGH,cAAChK,GAAA,EAASE,KAAV,UAlEK,CAAC,eAAgB,iBAmEZtJ,KAAI,SAACgE,GAAD,OACV,cAACoF,GAAA,EAAS1E,KAAV,CACEkO,OAAQQ,GAAiBpP,EACzB/B,QAAS,WACS,GAAZ+I,GAAkC,gBAAjBoI,EACnBjY,EACE,2DACA,CACEa,WAAY,YAGbqX,EAAiBrP,IAV1B,SAaGA,cAMX,cAACvC,EAAA,EAAD,UACE,eAACkU,GAAA,EAAD,CAAY1Z,UAAU,OAAtB,UACE,cAAC0Z,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,CAAiBjd,GAAG,eAApB,gCAIF,cAACiB,EAAA,EAAKG,QAAN,CACEpB,GAAG,YACHqB,KAAK,SACLI,MAAO2Q,EACP9R,SAAU,SAACiB,GAAD,OACR8Q,EAAYxL,OAAOC,SAASvF,EAAMC,OAAOC,SAE3C2O,IA5Ga,YAAnBkK,EAAqC,GACb,WAAnBA,EAAoC,GACjC,EA2GF1O,IAAI,cAKZ,uBACA,cAAChD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKxF,UAAU,SAAf,UACoB,QAAjB+W,GAA2B,cAAC,KAAD,aAAM5c,KAAM0c,GAAec,IACrC,OAAjBZ,GAA0B,cAAC,KAAD,aAAK5c,KAAM0c,GAAec,IACnC,SAAjBZ,GACC,cAAC,KAAD,aAAO5c,KAAM0c,GAAec,IAEZ,YAAjBZ,GACC,cAAC,KAAD,aAAU5c,KAAM0c,GAAec,IAEf,aAAjBZ,GACC,cAAC,KAAD,aAAW5c,KAAM0c,GAAec,IAEhB,OAAjBZ,GAA0B,cAAC,KAAD,aAAK5c,KAAM0c,GAAec,SAGzD,2BC/HSkC,OAvJf,SAA8B1c,GAAQ,IAC5B+B,EAAaC,sBAAbD,SAD2B,EAGL9B,mBAAS,MAHJ,mBAG5B0c,EAH4B,KAGnBC,EAHmB,OAIH3c,mBAAS,GAJN,mBAI5B4c,EAJ4B,KAIlBC,EAJkB,OAKX7c,mBAAS,IALE,mBAK5ByF,EAL4B,KAKtBC,EALsB,OAMX1F,mBAAS,KANE,mBAM5BY,EAN4B,KAMtBkc,EANsB,OAOO9c,mBAAS,IAPhB,mBAO5B2O,EAP4B,KAObC,EAPa,OAQO5O,mBAAS,GARhB,mBAQ5BgJ,EAR4B,KAQbC,EARa,iDAUnC,4BAAA9K,EAAA,sEACwBzC,EACnBqK,IADmB,yBACGhG,EAAMoN,cAC5BzK,MAAK,SAACF,GACLoM,EAAiBpM,EAAIzF,KAAK4R,kBAE3BtK,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAYSA,GAZT,4CAVmC,sBAiDnC,OAxBAoE,qBAAU,gBACiBkM,GAArBvM,EAAMoN,aA1BuB,mCA2B/B4B,KAED,CAAChP,EAAMoN,cAqBR,eAACvD,GAAA,EAAD,yBACEC,SAAU,WACR8S,EAAW,MACXE,EAAY,GACZ5T,EAAiB,GACjBvD,EAAQ,IACRoX,EAAQ,OAEN/c,GARN,IASE4I,KAAK,KACLmB,kBAAgB,gCAChBC,UAAQ,EAXV,UAaE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,gCAIF,cAACqK,GAAA,EAAMO,KAAP,UACE,cAACC,GAAA,EAAD,UACE,cAACjC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAAC5H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,oBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWgc,EAAQhc,EAAMC,OAAOC,QAC1CpB,aAAa,IAHf,UAKE,wBAAQoB,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,wBAGJ,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,uBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWmI,EAAiBnI,EAAMC,OAAOC,QACnDpB,aAAa,IAHf,UAKE,wBAAQoB,MAAM,IAAd,0BAC0B,IAAZ,OAAb2N,QAAa,IAAbA,OAAA,EAAAA,EAAezP,UAAf,OACCyP,QADD,IACCA,OADD,EACCA,EAAehI,KAAI,SAACgE,EAAMC,GAAP,aACjB,wBAAQ5J,MAAK,OAAE2J,QAAF,IAAEA,OAAF,EAAEA,EAAMpL,GAArB,gBAA0BoL,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMI,gBAAhC,aAA0B,EAAgB3N,iBAIlD,eAACoD,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,uBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLf,SAAU,SAACiB,GAAD,OAvET,SAACyK,GAChB,IAAIC,EAAQD,EAAKjM,MAAM,KACnBmM,EAAI,IAAIC,KACVtF,OAAOC,SAASmF,EAAM,IACtBpF,OAAOC,SAASmF,EAAM,IAAM,EAC5BpF,OAAOC,SAASmF,EAAM,KAExBC,EAAEE,SAAS,EAAG,EAAG,GACjB,IAAIC,EAAM,IAAIF,KACVD,EAAEI,UAAYD,EAAIC,UAAW8Q,EAAWlR,IAE1CkR,EAAW,MACX7a,EAAS,gCAAiC,CACxCa,WAAY,aA0DmBmJ,CAAWhL,EAAMC,OAAOC,aAGjD,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAiByC,IAAE,EAAzC,UACE,cAAC1K,EAAA,EAAKE,MAAN,uBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,SAAkB,KAARc,EACVA,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAW+b,EAAY/b,EAAMC,OAAOC,QAC9C2O,IAAI,MACJxE,IAAI,SAGR,eAAC3K,EAAA,EAAKC,MAAN,CAAYgI,UAAU,gBAAgByC,IAAE,EAAxC,UACE,cAAC1K,EAAA,EAAKE,MAAN,sBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,SAAkB,KAARc,EACVA,KAAK,OACLf,SAAU,SAACiB,GAAD,OAAW4E,EAAQ5E,EAAMC,OAAOC,sBAOtD,eAAC4I,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,mBAGA,cAACnJ,EAAA,EAAD,CACE/C,SAAkB,KAARc,GAAgC,KAAjBoI,GAAmC,MAAX0T,EACjD5Z,QAAQ,UACR8F,QAAS,WACP7I,EAAMkM,UAAU,CACdrL,OACAoI,gBACA0T,QAASA,EAAQ7Q,UACjB+Q,WACAnX,UATN,kCCfOsX,OAhHf,YAA+C,IAApBhY,EAAmB,EAAnBA,gBACjBjD,EAAaC,sBAAbD,SADoC,EAEpB9B,mBAAS,IAFW,mBAErCmG,EAFqC,KAE/B6W,EAF+B,OAGJhd,oBAAS,GAHL,mBAGrCyO,EAHqC,KAGvBC,EAHuB,OAId1O,oBAAS,GAJK,mBAIrCoN,EAJqC,KAI5B0E,EAJ4B,iDAM5C,4BAAA3T,EAAA,sEACwBzC,EACnBqK,IADmB,qBACDhB,EAAgBxF,KAClCmD,MAAK,SAACF,GACLwa,EAAQxa,EAAIzF,SAEbsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAYSA,GAZT,4CAN4C,kEA2B5C,WAAyBe,GAAzB,eAAAoB,EAAA,sEACwBzC,EACnB6G,KADmB,qBACAwC,EAAgBxF,IAAMxC,GACzC2F,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,YAEdmP,GAAY1E,MAEb/I,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aAXpB,cACQ3G,EADR,yBAeSA,GAfT,4CA3B4C,sBAsD5C,OAjCAoE,qBAAU,gBACmBkM,IAAR,OAAfvH,QAAe,IAAfA,OAAA,EAAAA,EAAiBxF,KAtBqB,mCAuBxC0d,KAED,CAAClY,EAAiBqI,IA8BnB,eAACpF,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,oBAAItF,UAAU,iBAAd,0BACA,uBACA,cAACuF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACkC,GAAA,EAAD,CAAOC,UAAQ,EAACE,SAAO,EAAC3H,QAAQ,OAAhC,UACE,gCACE,+BACE,mCACA,0CACA,sCACA,mDACA,4CACA,0CACA,8CAGJ,gCACmB,IAAZ,OAAJqD,QAAI,IAAJA,OAAA,EAAAA,EAAMjH,UAAN,OACCiH,QADD,IACCA,OADD,EACCA,EAAMQ,KAAI,SAACgE,EAAMC,GAAP,OACR,+BACE,6BAAKA,EAAQ,IACb,6BAAKD,EAAKuS,aAAanS,SAAS3N,OAChC,6BAAKuN,EAAK/J,OACV,6BAAK+J,EAAKwS,kBACV,6BAAK1Q,KAAO9B,EAAKjB,WAAWiD,OAAO,iBACnC,6BAAKF,KAAO9B,EAAK+R,SAAS/P,OAAO,iBACjC,6BAAKhC,EAAKyS,oCAOxB,eAACjV,EAAA,EAAD,WACE,cAAC,GAAD,CACE+H,KAAMzB,EACNzC,OA1CkB,WACxB0C,GAAgB,IA0CVzC,UAhDiB,SAAClP,GACxB2R,GAAgB,GA9C0B,oCA+C1C2O,CAAUtgB,IA+CJoQ,YAAW,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAiBoI,cAEhC,cAAC/E,EAAA,EAAD,CAAKxF,UAAU,SAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACR8F,QAAS,WACP8F,GAAgB,IAHpB,sBAUJ,2BC5GA4O,GAAmB,SAACvd,GAAW,IAAD,EACQC,mBAAS,IADjB,mBACzBud,EADyB,KACXC,EADW,OAEAxd,mBAAS,IAFT,mBAEzByB,EAFyB,KAEfgc,EAFe,OAGYzd,mBAAS,IAHrB,mBAGzBwD,EAHyB,KAGTka,EAHS,KAK1Bxf,EAAW0D,cAwBX+b,EAAY,WACd,IAAI5gB,EAAO,CACP6gB,YAAanc,GAEjB/F,EAAIoN,IAAI,2BAA6B1J,IAAkBrC,GAClD2F,MAAK,WACF3C,EAAM8d,mBAETxZ,OAAM,WACHmZ,EAAgB,8CAI5B,OACI,eAAC5T,GAAA,EAAD,2BAAW7J,GAAX,IAAkBiM,OApCF,WAChB9N,EAASD,MAmC8B6f,SAAS,SAAhD,UACI,cAAClU,GAAA,EAAMI,OAAP,CAAcpH,UAAU,yBAAyBkb,SAAS,SAAS7T,aAAW,EAA9E,SACI,oEAEJ,eAACL,GAAA,EAAMO,KAAP,CAAYvH,UAAU,yBAAtB,UACI,eAACpC,EAAA,EAAD,CAAM2B,YAAU,EAACC,SAjCR,SAACtB,GAClBA,EAAMuB,iBACNvB,EAAMwB,kBALCnD,EAAS,SAAasC,IAAatC,EAAS,SAAaqE,KAQxD/B,IAAa+B,EACbga,EAAgB,2BAEhBA,EAAgB,IAChBG,OAwBA,UACI,cAAC,EAAD,CAAmB9d,SAAU,SAACiB,GAAD,OAAW2c,EAAY3c,EAAMC,OAAOC,UACjE,cAAC,EAAD,CAAmB5D,KAAK,kBAAkByC,SAAU,SAACiB,GAAD,OAAW4c,EAAkB5c,EAAMC,OAAOC,UAC9F,cAAC6B,EAAA,EAAD,CAAQD,UAAU,eAAeE,QAAQ,oBAAoBlC,KAAK,SAAlE,6BAEH2c,EAAare,OAAS,GACnB,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACI,mBAAGA,UAAU,cAAb,SAA4B2a,cAQpDD,GAAiBlc,aAAe,CAC5B2c,eAAe,GAGJT,UC2GAU,OA/Jf,WAAkC,IACxBlc,EAAaC,sBAAbD,SADuB,EAEe9B,mBAAS,IAFxB,mBAExB+E,EAFwB,KAEPkZ,EAFO,OAGiBje,oBAAS,GAH1B,mBAGxB4T,EAHwB,KAGNC,EAHM,OAKK7T,mBAAS,MALd,mBAKxBkP,EALwB,KAKZgP,EALY,OAOKle,oBAAS,GAPd,mBAOxBqN,EAPwB,KAOZC,EAPY,OASiBtN,oBAAS,GAT1B,mBASNme,GATM,aAUmBne,oBAAS,GAV5B,mBAUxBoe,EAVwB,KAULC,EAVK,iDAY/B,4BAAAlgB,EAAA,sEACwBzC,EACnBqK,IADmB,6CACuB3G,MAC1CsD,MAAK,SAACF,GACL0b,EAAc1b,EAAIzF,SAEnBsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GACvB,CACE8F,WAAY,aATtB,cACQ3G,EADR,yBAaSA,GAbT,4CAZ+B,+BA4BhBsiB,IA5BgB,2EA4B/B,4BAAAngB,EAAA,sEACwBzC,EACnBqK,IADmB,wBACEmJ,IACrBxM,MAAK,SAACF,GACLyb,EAAmBzb,EAAIzF,SAExBsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAWSA,GAXT,4CA5B+B,sBAgE/B,OAlBAoE,qBAAU,WACU,MAAd8O,GAAoBoP,MACvB,CAACpP,IAEJ9O,qBAAU,YAlDqB,mCAmD7Bme,GAEA7iB,EAAIqK,IAAI,cAAgB3G,KAAkBsD,MAAK,SAACF,GACzCA,EAAIzF,KAAKyhB,iBAIZH,GAAqB,GACrBF,GAAoB,KAJpBE,GAAqB,GACrBF,GAAoB,OAKrB9Z,OAAM,iBACR,IAGD,sBAAKG,MAAO,CAAE8L,OAAQ,SAAtB,UACE,cAACtI,EAAA,EAAIoC,UAAL,CAAe7K,GAAG,oBAAoBkf,iBAAiB,QAAvD,SACE,eAACtW,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACE,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACE,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACE,cAAC8b,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,kCAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,8CAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,wBAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,+BAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,gCAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,uBAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,UAA7C,+BAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,yBAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,iCAMN,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACE,eAACrC,EAAA,EAAI4W,QAAL,WACE,cAAC,GAAD,CACE7Z,gBAAiBA,EACjBC,gBA/EQ,WACpBsZ,OAgFU,cAAC,GAAD,CAAgBpR,aAAY,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAiBxF,KAC/C,cAAC,GAAD,CAAwB2N,aAAY,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAiBxF,KACvD,cAAC,GAAD,CAAgB2N,aAAY,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAiBxF,KAC/C,cAAC,GAAD,CACEsU,oBAAqBA,EACrBD,iBAAkBA,EAClB1G,aAAY,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAiBxF,GAC/B4N,YAAW,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAiBoI,cAEhC,cAAC,GAAD,CACEE,WAAYA,EACZC,cAAeA,EACfF,QAASwG,EACT1G,aAAY,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAiBxF,GAC/B4N,YAAW,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAiBoI,cAEhC,cAAC,GAAD,CACEE,WAAYA,EACZH,aAAY,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAiBxF,KAEjC,cAAC,GAAD,CAAgBwF,gBAAiBA,IACjC,cAAC,GAAD,CAAiBA,gBAAiBA,cAK1C,cAAC,GAAD,CACEmL,KAAMkO,EACNP,cAAe,WACbQ,GAAqB,UCrFhBQ,OArFf,SAA+B9e,GAE7B,IAAM+e,EAAUC,cACRjd,EAAaC,sBAAbD,SAgER,OACE,eAAC8H,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,wCAC8BQ,EAAMkT,YAAY+L,aAGlD,cAACpV,GAAA,EAAMO,KAAP,UACE,eAACC,GAAA,EAAD,WACE,cAACvH,EAAA,EAAD,CAAQ+F,QAvEA,WACd,GAEI6D,KAAOf,KAAKE,OACZa,KAAO1M,EAAMkT,YAAYwC,OAAOwJ,SAAS,GAAI,WAHjD,CAaA,IAAIC,EAAe,IAAIC,SACvBD,EAAaE,OAAO,KAAMrf,EAAMkT,YAAY1T,IAE5C7D,EACG6G,KAAK,qCAAsC2c,GAC3Cxc,MAAK,WACJoc,EAAQ9C,KAAK,CACX5X,SAAU,6BACV3G,MAAO,CAEL4hB,cAAetf,EAAMkT,YAAY1T,SAItC8E,OAAM,kBACLvC,EAAS,oCAAqC,CAAEa,WAAY,kBArB9Db,EAAS,wCAAyC,CAChDa,WAAY,WA8DV,+BACA,cAACE,EAAA,EAAD,CAAQ+F,QAvCC,WACf,GACI6D,KAAOf,KAAKE,OAASa,KAAO1M,EAAMkT,YAAYwC,OAAO6J,IAAI,EAAG,WADhE,CAUA,IAAIJ,EAAe,IAAIC,SACvBD,EAAaE,OAAO,KAAMrf,EAAMkT,YAAY1T,IAE5C7D,EACG6G,KAAK,sCAAuC2c,GAC5Cxc,MAAK,WACJZ,EAAS,iDAAkD,CACzDa,WAAY,SAEd5C,EAAMwf,oBAEPlb,OAAM,kBACLvC,EAAS,yCAA0C,CACjDa,WAAY,kBAnBhBb,EAAS,yCAA0C,CACjDa,WAAY,WAiCV,yCAGJ,cAACiH,GAAA,EAAMmC,OAAP,S,kBC0FSyT,OAjKf,WAA0B,IAAD,EACiBxf,mBAAS,IAD1B,mBAChBqR,EADgB,KACFC,EADE,OAEWtR,oBAAS,GAFpB,mBAEhByf,EAFgB,KAELC,EAFK,OAGW1f,mBAAS,IAHpB,mBAGhB2f,EAHgB,KAGLC,EAHK,OAKyB5f,oBAAS,GALlC,mBAKhB6f,EALgB,KAKE1B,EALF,OAM2Bne,oBAAS,GANpC,mBAMhBoe,EANgB,KAMGC,EANH,OAQiBre,oBAAS,GAR1B,mBAQhB8f,EARgB,KAQFC,EARE,KAUfje,EAAaC,sBAAbD,SAgER,OA9DA1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,yDACMoB,EAAKH,IADX,uBAGI0C,EAAS,gBAAiB,CAAEa,WAAY,UACxC2O,EAAgB,IAJpB,0CAOQ5V,EACHqK,IAAI,wCAA0CxG,EAAK,mBACnDmD,MAAK,SAAC6V,GACLjH,EAAgBiH,EAAKxb,MACrBgjB,GAAgB,MAEjB1b,OAAM,WACLiN,EAAgB,IAChByO,GAAgB,MAftB,4CADc,sBAmBd,IAAIxgB,EAAKH,IACT1D,EAAIqK,IAAI,cAAgBxG,GAAImD,MAAK,SAACF,GAC3BA,EAAIzF,KAAKyhB,iBAIZH,GAAqB,GACrBF,GAAoB,KAJpBE,GAAqB,GACrBF,GAAoB,OAKrB9Z,OAAM,eA5BM,WAAD,wBA6Bd2N,KACC,IAiCD,sBAAKpP,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,gEAAf,SACE,oBAAIA,UAAU,oBAAd,sCAGuB,IAAxByO,EAAanS,SAAiB4gB,GAC7B,cAAC3X,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,wEAIHid,EACC,cAAC1X,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,yDAGF,gCACGyO,EAAa1K,KAAI,SAAC3F,EAAO4J,GACxB,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,gDADZ,SAIE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC8H,GAAA,EAAD,CAAMxN,UAAU,iBAAhB,SACE,eAACwN,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,+BACoB,IACjBuC,KAAOzL,EAAMyU,OAAO9I,OAAO,eAC5B,uBAAMnI,MAAO,CAAEwb,MAAO,SAAtB,mBACSvT,KAAOzL,EAAMyU,OAAO9I,OAAO,WADpC,KACkD,IAC/CF,KAAOzL,EAAM0U,KAAK/I,OAAO,iBAG9B,oBACEnI,MAAO,CACLyb,MAAO,QACPpE,gBAAiB,QACjBvL,OAAQ,KAGZ,eAACF,GAAA,EAAKoM,KAAN,CAAW5Z,UAAU,OAArB,sBACY5B,EAAMge,WAElB,eAAC5O,GAAA,EAAKoM,KAAN,CAAW5Z,UAAU,OAArB,oBACU5B,EAAMwL,SAGhB,cAAC4D,GAAA,EAAKoM,KAAN,CAAWhY,MAAO,CAAE0b,UAAW,UAA/B,SACE,cAAC9P,GAAA,EAAKuO,KAAN,CACEnW,GAAImW,KACJzc,GAAG,IACH0G,QAAS,kBAnFXqK,EAmF8BjS,OAjF9CyL,KAAOf,KAAKE,OAASa,KAAOwG,EAAYwC,OAAOwJ,SAAS,GAAI,YAShEW,EAAa3M,GACbyM,GAAa,IAPX5d,EACE,mEACA,CAAEa,WAAY,WAPC,IAACsQ,GAgFA,yCA5BHrI,MAyCP,OAIR,cAAC,GAAD,CACEsF,KAAMuP,EACNF,eApFiB,WACrBG,GAAa,GACb,IAAIS,EAAU/gB,IACT+gB,EAILzkB,EACGqK,IAAI,oCAAqC,CACxC+I,OAAQ,CAAEvP,GAAI4gB,EAASC,KAAM,EAAGzX,KAAM,MAEvCjG,MAAK,SAAC6V,GAAD,OAAUjH,EAAgBiH,EAAKxb,SACpCsH,OAAM,kBAAMiN,EAAgB,OAR7BxP,EAAS,gBAAiB,CAAEa,WAAY,WAiFtCsQ,YAAa0M,EACb3T,OAAQ,WACN0T,GAAa,GACbE,EAAa,OAIjB,cAAC,GAAD,CACE1P,KAAMkO,EACNP,cAAe,WACbQ,GAAqB,UCShBgC,OApKf,WAAyB,IAAD,EACkBrgB,mBAAS,IAD3B,mBACfqR,EADe,KACDC,EADC,OAEYtR,oBAAS,GAFrB,mBAEfyf,EAFe,KAEJC,EAFI,OAGY1f,mBAAS,IAHrB,mBAGf2f,EAHe,KAGJC,EAHI,OAK0B5f,oBAAS,GALnC,mBAKf6f,EALe,KAKG1B,EALH,OAM4Bne,oBAAS,GANrC,mBAMfoe,EANe,KAMIC,EANJ,OAQkBre,oBAAS,GAR3B,mBAQf8f,EARe,KAQDC,EARC,KAUdje,EAAaC,sBAAbD,SAiER,OA/DA1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,yDACMoB,EAAKH,IADX,uBAGI0C,EAAS,gBAAiB,CAAEa,WAAY,UACxC2O,EAAgB,IAJpB,0CAQQ5V,EACHqK,IAAI,wCAA0CxG,EAAK,mBACnDmD,MAAK,SAAC6V,GACLjH,EAAgBiH,EAAKxb,MACrBgjB,GAAgB,MAEjB1b,OAAM,WACLiN,EAAgB,IAChByO,GAAgB,MAhBtB,4CADc,sBAoBd,IAAIxgB,EAAKH,IACT1D,EAAIqK,IAAI,cAAgBxG,GAAImD,MAAK,SAACF,GAC3BA,EAAIzF,KAAKyhB,iBAIZH,GAAqB,GACrBF,GAAoB,KAJpBE,GAAqB,GACrBF,GAAoB,OAxBT,WAAD,wBA8BdnM,KACC,IAiCD,sBAAKpP,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,gEAAf,SACE,oBAAIA,UAAU,oBAAd,sCAGuB,IAAxByO,EAAanS,SAAiB4gB,GAC7B,cAAC3X,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,wEAIHid,EACC,cAAC1X,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,yDAGF,8BACGyO,EAAa1K,KAAI,SAAC3F,EAAO4J,GACxB,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,gDADZ,SAIE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC8H,GAAA,EAAD,CAAMxN,UAAU,iBAAhB,SACE,eAACwN,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,+BACoB,IACjBuC,KAAOzL,EAAMyU,OAAO9I,OAAO,eAC5B,uBAAMnI,MAAO,CAAEwb,MAAO,SAAtB,mBACSvT,KAAOzL,EAAMyU,OAAO9I,OAAO,WADpC,KACkD,IAC/CF,KAAOzL,EAAM0U,KAAK/I,OAAO,iBAG9B,oBACEnI,MAAO,CACLyb,MAAO,QACPpE,gBAAiB,QACjBvL,OAAQ,KAGZ,eAACF,GAAA,EAAKoM,KAAN,CAAW5Z,UAAU,OAArB,uBACa5B,EAAMsf,YAEnB,eAAClQ,GAAA,EAAKoM,KAAN,CAAW5Z,UAAU,OAArB,sBACY5B,EAAMge,WAElB,eAAC5O,GAAA,EAAKoM,KAAN,CAAW5Z,UAAU,OAArB,oBACU5B,EAAMwL,SAGhB,cAAC4D,GAAA,EAAKoM,KAAN,CAAWhY,MAAO,CAAE0b,UAAW,UAA/B,SACE,cAAC9P,GAAA,EAAKuO,KAAN,CACEnW,GAAImW,KACJzc,GAAG,IACH0G,QAAS,kBAtFXqK,EAsF8BjS,OApF9CyL,KAAOf,KAAKE,OAASa,KAAOwG,EAAYwC,OAAOwJ,SAAS,GAAI,YAShEW,EAAa3M,GACbyM,GAAa,IAPX5d,EACE,mEACA,CAAEa,WAAY,WAPC,IAACsQ,GAmFA,yCA/BHrI,QA+Cf,cAAC,GAAD,CACEsF,KAAMuP,EACNF,eAtFiB,WACrBG,GAAa,GACb,IAAIa,EAAUnhB,IACTmhB,EAIL7kB,EACGqK,IAAI,oCAAqC,CACxC+I,OAAQ,CAAEvP,GAAIghB,EAASH,KAAM,EAAGzX,KAAM,MAEvCjG,MAAK,SAAC6V,GAAD,OAAUjH,EAAgBiH,EAAKxb,SACpCsH,OAAM,kBAAMiN,EAAgB,OAR7BxP,EAAS,gBAAiB,CAAEa,WAAY,WAmFtCsQ,YAAa0M,EACb3T,OAAQ,WACN0T,GAAa,GACbE,EAAa,OAIjB,cAAC,GAAD,CACE1P,KAAMkO,EACNP,cAAe,WACbQ,GAAqB,U,oBC6ShBmC,OAlcf,WAA2B,IAAD,EACYxgB,mBAAS,IADrB,mBACjBoX,EADiB,KACLC,EADK,OAEIrX,mBAAS,IAFb,mBAEjBygB,EAFiB,KAETC,EAFS,OAGW1gB,mBAAS,GAHpB,mBAGjB6N,EAHiB,KAGNC,EAHM,OAII9N,mBAAS,GAJb,mBAIjB+N,EAJiB,KAITC,EAJS,OAKwBhO,mBAAS,IALjC,mBAKjB2gB,EALiB,KAKCC,EALD,OAMM5gB,mBAAS,IANf,mBAMjBgY,EANiB,KAMRC,EANQ,OAOcjY,mBAAS,IAPvB,mBAOjBkY,EAPiB,KAOJC,EAPI,OAQoBnY,mBAAS,IAR7B,mBAQjB6gB,EARiB,KAQDC,EARC,OASI9gB,mBAAS,QATb,mBASjB+gB,EATiB,KASTC,EATS,OAUMhhB,mBAAS,QAVf,mBAUjBihB,EAViB,KAURC,EAVQ,OAWIlhB,oBAAS,GAXb,mBAWjBmhB,GAXiB,KAWTC,GAXS,QAYUphB,mBAAS,QAZnB,qBAYjBqhB,GAZiB,MAYNC,GAZM,MAapBC,GAAM/a,SAASC,eAAe,uBAC9B+a,GAAUhb,SAASC,eAAe,eAEtCrG,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAI,kBAAkB1B,OAAM,eADxD,cACQrI,EADR,OAEEqb,EAAgBrb,EAAUA,EAAQe,KAAO,IACzC2jB,EAAY1kB,EAAUA,EAAQe,KAAO,IAHvC,kBAKSf,GALT,4CADc,uBAAC,WAAD,wBAQdwc,KACC,IAEH,IAwFMiJ,GAAoB,SAACnd,EAASod,EAAMC,GACxC,IAAIC,EAAOtd,EAAQiC,SAASf,SACxBqc,EAAOvd,EAAQiC,SAAShB,UAE5B,GAAIqc,GAAQD,GAAQE,GAAQH,EAC1B,OAAO,EAEP,IAAII,EAAWtS,KAAKuS,GAAKH,EAAQ,IAC7BI,EAAWxS,KAAKuS,GAAKJ,EAAQ,IAC7BM,EAAQJ,EAAOH,EACfQ,EAAY1S,KAAKuS,GAAKE,EAAS,IAC/BE,EACF3S,KAAK4S,IAAIN,GAAWtS,KAAK4S,IAAIJ,GAC7BxS,KAAK6S,IAAIP,GAAWtS,KAAK6S,IAAIL,GAAWxS,KAAK6S,IAAIH,GAQnD,OAPIC,EAAO,IACTA,EAAO,GAITA,EAAc,IADdA,EAAe,KADfA,EAAO3S,KAAK8S,KAAKH,IACK3S,KAAKuS,IACR,OAAS,SAC5B3jB,QAAQ4U,IAAImP,GACLA,GAeX/hB,qBAAU,WACR,IAAImP,EAAYC,KAAKC,OAAgB,OAAV2H,QAAU,IAAVA,OAAA,EAAAA,EAAYlY,QAAS,IAAM,GACxC,OAAVkY,QAAU,IAAVA,OAAA,EAAAA,EAAYlY,QAAS,GAAK,EAAIqQ,IAChCA,GAAwB,GAE1BvB,EAAUuB,KACT,CAAC6H,EAAY+J,KAEhB/gB,qBAAU,WACR,IAAIsP,EAAoB,GAAZ7B,EACR8B,EAAMyH,EAAWlY,OAASwQ,EAAQ,GAA5B,OAAiC0H,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAYlY,OAASwQ,EAAQ,GACxEkR,EAAmB,OAACxJ,QAAD,IAACA,OAAD,EAACA,EAAYla,MAAMwS,EAAOC,MAC5C,CAACyH,EAAYvJ,EAAWsT,KAE3B,IAYMoB,GAAY,SAAC3hB,EAAMI,GACV,WAATJ,EAAmBogB,EAAUhgB,GAC5BkgB,EAAWlgB,GAEF,SAAVA,IACS,WAATJ,GAAiC,SAAZqgB,GACZ,YAATrgB,GAAiC,SAAXmgB,IAE1B3J,EAAWoL,MAAK,SAAUC,EAAKC,GAAM,IAAD,IAClC,MACY,WAAT9hB,GAA+B,UAAVI,GACZ,YAATJ,GAAiC,UAAXmgB,GAEb,OAAH0B,QAAG,IAAHA,OAAA,EAAAA,EAAKxX,WAAL,OAAgByX,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAKzX,UAElB,WAATrK,GAA+B,kBAAVI,GACZ,YAATJ,GAAiC,kBAAXmgB,EAEvB,OAAO0B,QAAP,IAAOA,OAAP,EAAOA,EAAKrlB,KAAKkV,cAAV,OAAwBoQ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAKtlB,MAE1B,WAATwD,GAA+B,cAAVI,GACZ,YAATJ,GAAiC,cAAXmgB,EAEvB,OAAO0B,QAAP,IAAOA,GAAP,UAAOA,EAAKne,eAAZ,aAAO,EAAcZ,KAAK4O,cAAnB,OAAiCoQ,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAKpe,eAAtC,aAAiC,EAAcZ,WAJxD,MAOU,YAAT9C,GAAgC,eAAVI,GACb,WAATJ,GAAiC,eAAZqgB,IAEtB7J,EAAWuL,UACbvB,IAAWD,OAQb,OACE,eAACnZ,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,UACE,qBAAK3I,GAAG,cAAcqJ,QAAS,kBANjC4Y,GAAQoB,UAAUC,OAAO,gBACzBtB,GAAIqB,UAAUC,OAAO,gCAMnB,sBAAKtjB,GAAG,sBAAsBqD,UAAU,WAAxC,UACE,cAACpC,EAAA,EAAD,CACE4B,SAjMW,SAACtB,GAClBA,EAAMuB,iBAEiB,IAAnB2V,EAAQ9Y,OACVxD,EAAIqK,IAAI,kBAAkBrD,MAAK,SAAC6V,GAC9BlB,EAAckB,EAAKxb,MACnB2jB,EAAUnI,EAAKxb,SACdsH,OAAM,eAET3I,EACGqK,IAAI,uBAAwB,CAC3B+I,OAAQ,CAAE6J,YAAaX,KAExBtV,MAAK,SAAC6V,GACLlB,EAAckB,EAAKxb,MACnB2jB,EAAUnI,EAAKxb,SACdsH,OAAM,gBAkLPG,MAAO,CACLsM,QAAuB,WAAduQ,GAAyB,QAAU,OAC5ChR,MAAO,OAJX,SAOE,eAAC7P,EAAA,EAAKC,MAAN,CAAYmC,UAAU,WAAtB,UACE,cAACpC,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,cACL4D,MAAOgX,EACPnY,SAAU,SAACrD,GAAD,OAAOyb,EAAWzb,EAAEuE,OAAOC,QACrCrB,YAAY,2BAGd,cAACkD,EAAA,EAAD,CAAQjC,KAAK,SAASgC,UAAU,sBAAhC,SACE,cAAC,KAAD,MAEF,eAACC,EAAA,EAAD,CACED,UAAU,+BACVgG,QApGQ,WAClBlN,EACGqK,IAAI,kBACJrD,MAAK,SAAC6V,GACLlB,EAAckB,EAAKxb,MACnB2jB,EAAUnI,EAAKxb,SAEhBsH,OAAM,kBAAMgT,EAAc,OAC7BY,EAAW,KA0FH,mBAIQ,cAAC,KAAD,YAIZ,sBACErV,UAAU,WACV4B,MAAO,CAAEsM,QAAuB,WAAduQ,GAAyB,OAAS,QAFtD,UAIE,cAAC7gB,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,sBACA,eAAC/S,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CACEpN,UAAU,sBACVrD,GAAG,iBAFL,SAIGwhB,IAGH,eAAChR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,SAAU,SAFxB,kBAOA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,SAAU,kBAFxB,2BAOA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,SAAU,cAFxB,uBAOA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,SAAU,UAFxB,yBASJ,eAACxS,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CACEpN,UAAU,sBACVrD,GAAG,iBAFL,SAIG0hB,IAGH,eAAClR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,UAAW,SAFzB,kBAOA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,UAAW,cAFzB,uBAOA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP2Z,GAAU,UAAW,eAFzB,iCAUN,qBAAK/d,MAAO,CAAEsM,QAAuB,WAAduQ,GAAyB,QAAU,QAA1D,SACE,eAAC7gB,EAAA,EAAD,CAAM4B,SArRK,SAACtB,GAGlB,GAFAA,EAAMuB,iBAEc,KAAhB6V,GAAyC,KAAnB2I,EAA1B,CAKA,IAAIkC,EAAW,GAEf,GAAoB,KAAhB7K,EAAoB,CACtB,IAAK,IAAIjG,EAAI,EAAGA,EAAIwO,EAAOvhB,OAAQ+S,KACb,SAAhBiG,GAA0BuI,EAAOxO,GAAGhH,SAAW,GAExB,WAAhBiN,GAAmD,IAAvBuI,EAAOxO,GAAGhH,UAEtB,QAAhBiN,GAAyBuI,EAAOxO,GAAGhH,SAAW,IAHvD8X,EAAS/G,KAAKyE,EAAOxO,IASzB,GADAoF,EAAc0L,GACU,IAApBA,EAAS7jB,OAAc,OAGN,KAAnB2hB,GACEmC,UAAUC,aAEZD,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAIC,EAAoC,IAApBL,EAAS7jB,OAAT,aAA4B6jB,GAAYtC,EAC5DsC,EAAW,GACX,IAAK,IAAI9Q,EAAI,EAAGA,EAAImR,EAAclkB,OAAQ+S,KAEnB,UAAnB4O,GACAY,GACE2B,EAAcnR,GAAG3N,QACjB6e,EAASzb,OAAOnC,UAChB4d,EAASzb,OAAOlC,WACb,GAIc,WAAnBqb,GACAY,GACE2B,EAAcnR,GAAG3N,QACjB6e,EAASzb,OAAOnC,UAChB4d,EAASzb,OAAOlC,WACb,IAIc,aAAnBqb,GACAY,GACE2B,EAAcnR,GAAG3N,QACjB6e,EAASzb,OAAOnC,UAChB4d,EAASzb,OAAOlC,UACd,KAhBJud,EAAS/G,KAAKoH,EAAcnR,IAsBhCoF,EAAc0L,WA1DlB1L,EAAcoJ,IAiRkB7d,UAAU,kBAAtC,UACE,eAACpC,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,oBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWqX,EAAerX,EAAMC,OAAOC,QACjDpB,aAAa,GAHf,UAKE,wBAAQoB,MAAM,GAAd,0BACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAGJ,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,uBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWggB,EAAkBhgB,EAAMC,OAAOC,QACpDpB,aAAc,GAHhB,UAKE,wBAAQoB,MAAO,GAAf,0BACA,wBAAQA,MAAM,QAAd,uBACA,wBAAQA,MAAM,SAAd,wBACA,wBAAQA,MAAM,WAAd,gCAGJ,cAAC6B,EAAA,EAAD,CAAQjC,KAAK,SAASgC,UAAU,sBAAhC,SACE,cAAC,KAAD,cAMR,sBAAKA,UAAU,WAAW4B,MAAO,CAAE6e,WAAY,QAA/C,UACE,cAACxgB,EAAA,EAAD,CACED,UAAU,sBACVgG,QAAS,WACP2Y,GAAIqB,UAAUtD,IAAI,6BAClBkC,GAAQoB,UAAUtD,IAAI,WACtBgC,GAAa,WALjB,oBAUA,cAACze,EAAA,EAAD,CACED,UAAU,sBACVgG,QAAS,WACP2Y,GAAIqB,UAAUtD,IAAI,6BAClBkC,GAAQoB,UAAUtD,IAAI,WACtBgC,GAAa,WALjB,oBAUA,cAACze,EAAA,EAAD,CACED,UAAU,sBACVgG,QAAS,WACP2Y,GAAIqB,UAAUtD,IAAI,6BAClBkC,GAAQoB,UAAUtD,IAAI,WACtBgC,GAAa,WALjB,uBAWF,eAAClX,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,UACE,eAACnb,EAAA,EAAD,WAC+B,IAA5BwY,EAAiBzhB,QAChB,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,8CAGH+d,GACCA,EAAiBha,KAAI,SAAC2Z,EAAU1V,GAC9B,OACE,cAACxC,EAAA,EAAD,CAAKxF,UAAU,WAAuByF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAxD,SACE,cAACmW,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJ/b,UAAU,sBACVV,GAAE,oBAAeoe,EAAS/gB,IAH5B,SAKE,eAAC6Q,GAAA,EAAD,CAAMxN,UAAU,WAAW4B,MAAO,CAAE6L,MAAO,SAA3C,UACE,eAACD,GAAA,EAAKjG,KAAN,WACE,cAACiG,GAAA,EAAKlG,MAAN,UAAaoW,EAASljB,OACtB,cAACgT,GAAA,EAAKoM,KAAN,UAAY8D,EAAShb,iBAEvB,eAAC8F,GAAA,EAAD,CAAWxI,UAAU,mBAArB,UACE,cAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACG,aAAI4gB,MAAMhU,KAAKiU,KAAKnD,EAASrV,YAAYtE,KAAI,kBAC5C,cAAC,KAAD,CAAU/D,UAAU,kBAGxB,cAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACG0d,EAAShc,QAAQX,OAChB,KACA2c,EAAShc,QAAQZ,gBApBEkH,SA8BvC,cAACzC,EAAA,EAAD,CAAKvF,UAAU,sBAAf,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QA9QQ,WACF,IAAdiF,GACFC,EAAcD,EAAY,MA8QlB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QA7QS,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,oB,SCzGjB6V,GAtFiB,SAAC3jB,GAAW,IAAD,EACCC,mBAAS,IADV,mBAChC2jB,EADgC,KAClBC,EADkB,OAEC5jB,mBAAS,IAFV,mBAEhC6jB,EAFgC,KAElBC,EAFkB,OAGP9jB,mBAAS,IAHF,mBAGhC+jB,EAHgC,KAGtBC,EAHsB,OAIPhkB,mBAAS,IAJF,mBAIhCikB,EAJgC,KAItBC,EAJsB,OAKTlkB,mBAAS,IALA,mBAKhCmkB,EALgC,KAKvBC,EALuB,KAOvChkB,qBAAU,WACN1E,EAAIqK,IAAJ,wBAAgCrD,MAAK,SAACF,GAClCwhB,EAAYxhB,EAAIzF,SACjBsH,OAAM,eACT3I,EAAIqK,IAAJ,wBAAgCrD,MAAK,SAACF,GAClC0hB,EAAY1hB,EAAIzF,SACjBsH,OAAM,iBACV,IAEH,IAOMggB,EAAuB,WAEzB,MADe,eAAWF,EAAX,yBAAmCR,EAAnC,yBAAgEE,IAInF,OACI,cAACrjB,EAAA,EAAD,CAAM4B,SAbW,SAACtB,GAClBA,EAAMuB,iBACNvB,EAAMwB,kBAENvC,EAAMukB,aAAaD,MASnB,SACI,eAACja,GAAA,EAAD,CAAW5F,MAAO,CAAE+f,aAAc,QAAlC,UACI,eAACpc,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9H,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKE,MAAN,wBAGR,cAAC0H,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9H,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKE,MAAN,wBAGR,cAAC0H,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9H,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKE,MAAN,2BAKZ,eAACyH,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9H,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLf,SAAU,SAACiB,GAAYsjB,EAAWtjB,EAAMC,OAAOC,cAG3D,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9H,EAAA,EAAKC,MAAN,UACI,eAACD,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAY8iB,EAAgB9iB,EAAMC,OAAOC,QAArF,UACI,wBAAQA,MAAM,GAAd,sBACC+iB,EAASpd,KAAI,SAAC8d,GACX,OAAO,wBAAQzjB,MAAOyjB,EAAGrnB,KAAlB,SAAyBqnB,EAAGrnB,iBAKnD,cAACgL,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC9H,EAAA,EAAKC,MAAN,UACI,eAACD,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAYgjB,EAAgBhjB,EAAMC,OAAOC,QAArF,UACI,wBAAQA,MAAM,GAAd,sBACCijB,EAAStd,KAAI,SAAC+d,GACX,OAAO,wBAAQ1jB,MAAO0jB,EAAGtnB,KAAlB,SAAyBsnB,EAAGtnB,iBAKnD,cAACgL,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAACzF,EAAA,EAAD,CAAQjC,KAAK,SAAb,+BCqDT+jB,OAnHf,WAA0B,IAAD,EACW3kB,mBAAS,IADpB,mBAChB4kB,EADgB,KACLC,EADK,OAEY7kB,mBAAS,GAFrB,mBAEhB6N,EAFgB,KAELC,EAFK,OAGK9N,mBAAS,GAHd,mBAGhB+N,EAHgB,KAGRC,EAHQ,OAIuBhO,mBAAS,IAJhC,mBAIhB8kB,EAJgB,KAICC,EAJD,OAKiB/kB,mBAAS,IAL1B,mBAKhBglB,EALgB,KAKFC,EALE,KA2DvB,OApDA7kB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAI,kBAAkB1B,OAAM,eADxD,cACQrI,EADR,OAEE6oB,EAAe7oB,EAAUA,EAAQe,KAAO,IAF1C,kBAISf,GAJT,4CADc,uBAAC,WAAD,wBAOdkpB,KACC,IAEH9kB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAJ,+BAAgCif,IAAgB3gB,OAAM,eAD9E,cACQrI,EADR,OAEE6oB,EAAe7oB,EAAUA,EAAQe,KAAO,IAF1C,kBAISf,GAJT,4CADc,sBAORgpB,GAPS,WAAD,wBAQZE,KAED,CAACF,IAMJ5kB,qBAAU,WACR,IAAImP,EAAYC,KAAKC,OAAe,OAATmV,QAAS,IAATA,OAAA,EAAAA,EAAW1lB,QAAS,IAAM,GACxC,OAAT0lB,QAAS,IAATA,OAAA,EAAAA,EAAW1lB,QAAS,GAAK,EAAIqQ,IAC/BA,GAAwB,GAE1BvB,EAAUuB,KACT,CAACqV,IAEJxkB,qBAAU,WACR,IAAIsP,EAAoB,GAAZ7B,EACR8B,EAAMiV,EAAU1lB,OAASwQ,EAAQ,GAA3B,OAAgCkV,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAW1lB,OAASwQ,EAAQ,GACtEqV,EAAkB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAW1nB,MAAMwS,EAAOC,MAC1C,CAACiV,EAAW/W,IAeb,cAAC7F,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,SACE,eAACkC,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,UACE,cAAC,GAAD,CACEgB,aAAc,SAACa,IAlCvB,SAA4BA,GAC1BF,EAAgBE,GAkCRC,CAAmBD,MAGvB,cAAChd,EAAA,EAAD,UACG2c,GACCA,EAAgBne,KAAI,SAACoE,EAAUH,GAAX,OAClB,cAACxC,EAAA,EAAD,CAAKxF,UAAU,WAAuByF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAxD,SACE,cAACmW,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJ/b,UAAU,sBACVV,GAAE,oBAAe6I,EAASxL,GAAxB,yBAHJ,SAKE,eAAC6Q,GAAA,EAAD,CAAMxN,UAAU,WAAW4B,MAAO,CAAE6L,MAAO,SAA3C,UACE,eAACD,GAAA,EAAKjG,KAAN,WACE,cAACiG,GAAA,EAAKlG,MAAN,UAAaa,EAAS3N,OACtB,eAACgT,GAAA,EAAKoM,KAAN,eAAazR,EAASC,QACtB,cAACoF,GAAA,EAAKoM,KAAN,UAAYzR,EAASwI,aAEvB,cAACnI,GAAA,EAAD,CAAWxI,UAAU,mBAArB,SACE,cAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACG,aAAI4gB,MAAMhU,KAAKiU,KAAK1Y,EAASE,YAAYtE,KAAI,kBAC5C,cAAC,KAAD,CAAU/D,UAAU,0BAfDgI,QAyBrC,cAACzC,EAAA,EAAD,CAAKvF,UAAU,sBAAf,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QArDQ,WACF,IAAdiF,GACFC,EAAcD,EAAY,MAqDlB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QApDS,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,mBCpBjBwX,OA7Cf,WACE,IAAM/nB,EAAOuE,aAAY,SAACpE,GAAD,OAAWA,EAAMH,QACtCmC,EAAWD,IAKf,OAJAY,qBAAU,WACRX,EAAWD,MACV,CAAClC,IAGF,sBAAMsF,UAAU,aAAhB,SACE,cAACoF,EAAA,EAAIoC,UAAL,CAAe7K,GAAG,oBAAoBkf,iBAAiB,QAAvD,SACE,eAACtW,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACE,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACE,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACE,cAAC8b,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,0BAIY,YAAbzI,GACC,cAACif,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,6CAKJ,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,8BAMN,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACE,eAACrC,EAAA,EAAI4W,QAAL,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACc,YAAbnf,GAA0B,cAAC,GAAD,CAAgByN,cAAe,iB,UCqCzDoY,GA7Ee,SAACvlB,GAAW,IAAD,EACOC,mBAAS,IADhB,mBAChCulB,EADgC,KACfC,EADe,OAEXxlB,mBAAS,GAFE,mBAEhCoJ,EAFgC,KAExBC,EAFwB,OAGTrJ,mBAAS,IAHA,mBAGhClB,EAHgC,KAGvB2mB,EAHuB,KAI/B3jB,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAJ,kBAA0B1B,OAAM,eADzD,OACQvH,EADR,OAEE2oB,EAAa3oB,EAAWA,EAASC,KAAO,IAF1C,4CADc,uBAAC,WAAD,wBAKdsW,KACC,IAqBH,OACE,eAACzJ,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,qCAKF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAAC3J,EAAA,EAAD,CAAM4B,SA5BS,SAAC5F,GACpBA,EAAE6F,iBACF7F,EAAE8F,kBAEF,IAAIvF,EAAO,GACNwoB,EAAgB,IAIrBxoB,EAAK8N,WAAa0a,EAAgB,GAAGhmB,GACrCxC,EAAK2oB,aAAeH,EAAgB,GAAGnoB,KACvCL,EAAKqM,OAASA,EACd1N,EAAI6G,KAAJ,+BAAiCnD,KAAoBrC,GAAM2F,MAAK,WAC9DZ,EAAS,8BAA+B,CAAEa,WAAY,YACtD5C,EAAM4lB,YACN5lB,EAAMiM,aATNlK,EAAS,wBAAyB,CAAEa,WAAY,aAsB9C,UACE,eAACnC,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,uBACA,cAAC,KAAD,CACEklB,SAAU,SAACC,GAAD,gBAAeA,EAAO7a,KAAtB,eAAiC6a,EAAOzoB,OAClDyC,SAAU2lB,EACV1mB,QAASA,EACTa,YAAY,uBACZmmB,SAAUP,OAGd,eAAC/kB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,qBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWuI,EAAUvI,EAAMC,OAAOC,QAC5CpB,aAAc,EACduL,IAAK,EACLwE,IAAK,IACLoW,KAAM,EACNxnB,UAAQ,OAGZ,cAACsE,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,qBAGA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,8BCzBKga,GA3CO,WAAO,IAAD,EACAhmB,mBAAS,IADT,mBACnBimB,EADmB,KACZC,EADY,OAEElmB,oBAAS,GAFX,mBAEnBmhB,EAFmB,KAEXC,EAFW,OAGsBphB,oBAAS,GAH/B,mBAGnBmmB,EAHmB,KAGDC,EAHC,KAK1BhmB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAJ,+BACG3G,MACxBiF,OAAM,eAHV,OACQvH,EADR,OAIEopB,EAAWppB,EAAWA,EAASC,KAAO,IAJxC,4CADc,uBAAC,WAAD,wBAOdspB,KACC,CAAClF,IAMJ,OACE,eAAC/V,GAAA,EAAD,CAAW5G,MAAO,CAAE8hB,OAAQ,QAA5B,UACGL,GACCA,EAAMtf,KAAI,SAAC4f,GACT,OACE,eAACnb,GAAA,EAAUC,KAAX,CACE7G,MAAO,CAAE8hB,OAAQ,QADnB,UAIG,IAJH,UAKMC,EAAUb,aALhB,iBAKqCa,EAAUnd,UAHxCmd,EAAU1b,eAOvB,cAAChI,EAAA,EAAD,CAAQ+F,QAAS,kBAAMwd,GAAoB,IAA3C,iBACA,cAAC,GAAD,CACElW,KAAMiW,EACNna,OAAQ,kBAAMoa,GAAoB,IAClCT,UAtBc,WAClBvE,GAAWD,U,oBCgHAqF,GAhIW,SAACzmB,GAAW,IAgEhC0mB,EAhE+B,EACCzmB,mBACjCD,EAAM2mB,MAAY3mB,EAAM2mB,MAAMla,MAAhB,GAFkB,mBAC5Bma,EAD4B,KAChBC,EADgB,OAIK5mB,mBACrCD,EAAM2mB,MAAqB,IAAIhb,KAAK3L,EAAM2mB,MAAMG,cAAchb,UAAhDH,KAAKE,OALa,mBAI5Bkb,EAJ4B,KAIdC,EAJc,KAO3BjlB,EAAaC,sBAAbD,SAoBFklB,EAAW,SAACjqB,GAChBrB,EACG6G,KADH,gCACiCnD,KAAoBrC,GAClD2F,MAAK,WACJ3C,EAAM4lB,YACN5lB,EAAMiM,SACNlK,EAAS,qBAAsB,CAAEa,WAAY,eAE9C0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAI7CskB,EAAY,SAAClqB,GACjBA,EAAKwC,GAAKQ,EAAM2mB,MAAMnnB,GACtB7D,EACGoN,IADH,gCACgC1J,KAAoBrC,GACjD2F,MAAK,WACJZ,EAAS,uBAAwB,CAAEa,WAAY,YAC/C5C,EAAM4lB,YACN5lB,EAAMiM,YAEP3H,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAI7CukB,EAAc,SAACC,GACnB,IAAI5b,EAAO,IAAIG,KAAKyb,GAChBC,EAAO7b,EAAK8b,cACZC,EAAQ/b,EAAKgc,WAAa,EAC1BC,EAAMjc,EAAKkc,UAGf,OAFAH,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,EACnCE,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EACvB,GAAN,OAAUJ,EAAV,YAAkBE,EAAlB,YAA2BE,IAc7B,OAVMznB,EAAMgN,OAAWhN,EAAMgN,MAAMkE,YACjCwV,EAAgB1mB,EAAMgN,MAAMkE,UAAUtK,KAAI,SAAC+gB,GACzC,OACE,8BACE,sCAAOA,EAAG3c,SAASC,KAAnB,eAA8B0c,EAAG3c,SAAS3N,KAA1C,uBAA6DsqB,EAAGte,WADxDse,EAAGnoB,QAQjB,eAACqK,GAAA,EAAD,2BAAW7J,GAAX,cACE,cAAC6J,GAAA,EAAMI,OAAP,CACEpH,UAAU,yBACVkb,SAAS,SACT9R,OAnEc,aAoEd/B,aAAW,EAJb,SAME,8BAAKlK,EAAM2mB,MAAyB,aAAjB,eAAnB,SAEF,eAAC9c,GAAA,EAAMO,KAAP,CAAYvH,UAAU,yBAAtB,UACG6jB,EACD,eAACjmB,EAAA,EAAD,CAAM4B,SAxES,SAAC5F,GACpBA,EAAE6F,iBACF7F,EAAE8F,kBAEF,IAAIvF,EAAO,GACXA,EAAKyP,MAAQma,EACb5pB,EAAK8pB,aAAeC,EACpB/pB,EAAK4qB,WAAa5nB,EAAM2mB,MAAQ3mB,EAAM2mB,MAAMiB,WAAa,UACzD5qB,EAAKsP,QAAUtM,EAAMgN,MAAMxN,GAC3BQ,EAAM2mB,MAAQO,EAAUlqB,GAAQiqB,EAASjqB,IA+DrC,UACE,eAACyD,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAW8lB,EAAc9lB,EAAMC,OAAOC,QAChDpB,aAAeG,EAAM2mB,MAAY3mB,EAAM2mB,MAAMla,MAAhB,EAC7BrB,IAAK,EACL4a,KAAM,EACNxnB,UAAQ,OAGZ,eAACiC,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,kBAEA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLf,SAAU,SAACiB,GAAD,OA/FI8mB,EA+FwB9mB,EAAMC,OAAOC,WA9F7D+lB,EAAgB,IAAIrb,KAAKkc,GAAY/b,WADd,IAAC+b,GAgGdhoB,aACGG,EAAM2mB,MAEHQ,EAAYnnB,EAAM2mB,MAAMG,cADxBK,EAAYxb,KAAKE,OAGvBT,IAAK+b,EAAYxb,KAAKE,OACtB+D,IAAO5P,EAAMgN,MAAQma,EAAYnnB,EAAMgN,MAAMoC,UAAY,GACzD5Q,UAAQ,OAGZ,cAACsE,EAAA,EAAD,CACED,UAAU,eACVE,QAAQ,oBACRlC,KAAK,SAHP,6BCvHJinB,GAAoB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OACI,cAAC1c,GAAA,EAAD,CAAW5G,MAAO,CAAE+f,aAAc,QAAlC,SACKuD,EAAWnhB,KAAI,SAAC+gB,GACb,OAAO,cAACtc,GAAA,EAAUC,KAAX,0BAA0Bqc,EAAG3c,SAASC,KAAtC,eAAiD0c,EAAG3c,SAAS3N,KAA7D,qBAA8EsqB,EAAGte,OAAjF,gBAMvBye,GAAkBzmB,aAAe,CAC7B0mB,WAAY,IAGDD,UCyBAE,GArCG,SAAC,GAA0B,IAAxBhb,EAAuB,EAAvBA,MAAO4Y,EAAgB,EAAhBA,UAAgB,EACU3lB,oBAAS,GADnB,mBACjCgoB,EADiC,KACdC,EADc,KAGxC,OACI,eAAC7d,GAAA,EAAD,CAAWxH,UAAU,wBAAwB4B,MAAO,CAAE0jB,aAAc,OAAQxjB,QAAS,OAAQkU,UAAW,OAAQ2L,aAAc,OAAQ1I,gBAAiB,SAAvJ,UACI,eAAC1T,EAAA,EAAD,CAAKvF,UAAU,0BAAf,UACI,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,sBACarb,EAAMsb,kBAI3B,cAACjgB,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,wBACe,IAAI1c,KAAKqB,EAAMoC,UAAUmZ,mBAAmB,mBAKvE,cAACngB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,GAAD,CAAmB0f,WAAY/a,EAAMkE,gBAG7C,cAAC9I,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEigB,OAAQ,EAAGC,KAAM,GAA5B,SACI,cAAC3lB,EAAA,EAAD,CAAQ+F,QAAS,WAAQqf,GAAqB,IAASzjB,MAAO,CAAE6L,MAAO,QAAvE,8BAGR,cAAC,GAAD,CAAmBH,KAAM8X,EAAmBjb,MAAOA,EAAOf,OAAQ,kBAAMic,GAAqB,IAAQtC,UAAW,WAAQA,WCarH8C,GA1CG,WAAO,IAAD,EACMzoB,mBAAS,IADf,mBACfsJ,EADe,KACPC,EADO,OAEMvJ,oBAAS,GAFf,mBAEfmhB,EAFe,KAEPC,EAFO,OAGQphB,mBAAS,IAHjB,mBAGfhD,EAHe,KAGN0rB,EAHM,KAKtBtoB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAJ,qCACS3G,MAC9BiF,OAAM,eAHV,OACQvH,EADR,OAIEyM,EAAYzM,EAAWA,EAASC,KAAO,IAJzC,4CADc,uBAAC,WAAD,wBAOd8R,KACC,CAACsS,IAYJ,OANA/gB,qBAAU,WACRsoB,EACElF,MAAMmF,QAAQrf,IAAWA,EAAOpK,OAAS,GAAK,uBAE/C,CAACoK,IAGF,gCACGA,GACCA,EAAO3C,KAAI,SAACiiB,GACV,OACE,cAAC,GAAD,CAEE7b,MAAO6b,EACPjD,UAAW,WAjBrBvE,GAAWD,KAeIyH,EAAErpB,OAMf,4BAAIvC,QCqDK6rB,GArFG,SAAC9oB,GAAW,IAAD,EACyBC,oBAAS,GADlC,mBACpB8oB,EADoB,KACAC,EADA,OAED/oB,mBAAS,IAFR,mBAEpB+M,EAFoB,KAEbic,EAFa,KAI3B5oB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACoBzC,EAAIqK,IAAJ,sBAAuBhG,EAAM2mB,MAAMra,UAAWhI,OAAM,eADxE,OACQ7B,EADR,OAEEwmB,EAAWxmB,EAAMA,EAAIzF,KAAO,IAF9B,4CADc,uBAAC,WAAD,wBAKdksB,KACC,IAMH,OACE,eAAC7e,GAAA,EAAD,CACExH,UAAU,wBACV4B,MAAO,CACL0jB,aAAc,OACdxjB,QAAS,OACTkU,UAAW,OACX2L,aAAc,OACd1I,gBAAiB,SAPrB,UAUE,eAAC1T,EAAA,EAAD,CAAKvF,UAAU,0BAAf,UACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC6f,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,qBAAmBroB,EAAM2mB,MAAMiB,kBAGnC,cAACvf,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC6f,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,qBAAmBroB,EAAM2mB,MAAMla,aAGnC,cAACpE,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC6f,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,4BACiB,IACd,IAAI1c,KAAK3L,EAAM2mB,MAAMG,cAAcyB,mBAAmB,gBAI7D,cAAClgB,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC6f,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,uBACY,IACPrb,EACC,IAAIrB,KAAKqB,EAAMoC,UAAUmZ,mBAAmB,SAC5C,aAKZ,cAACngB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEigB,OAAQ,EAAGC,KAAM,GAA5B,SACE,cAAC3lB,EAAA,EAAD,CACE/C,WAlD0B,YAA3BC,EAAM2mB,MAAMiB,YAA4B5a,EAAMoC,SAAWzD,KAAKE,OAmD7DhD,QAAS,WACPmgB,GAAsB,IAH1B,sBAUJ,cAAC,GAAD,CACE7Y,KAAM4Y,EACN/b,MAAOA,EACP2Z,MAAO3mB,EAAM2mB,MACb1a,OAAQ,kBAAM+c,GAAsB,IACpCpD,UAAW,WACT5lB,EAAM4lB,mBClCDuD,GAlDQ,WAAO,IAAD,EACClpB,mBAAS,IADV,mBACpBmM,EADoB,KACZC,EADY,OAECpM,oBAAS,GAFV,mBAEpBmhB,EAFoB,KAEZC,EAFY,OAGqBphB,mBAAS,YAH9B,mBAGpBmpB,EAHoB,KAGFC,EAHE,KAK3BhpB,qBAAU,WACR,IAAIb,EAAKH,IADK,4CAEd,4BAAAjB,EAAA,sEACyBzC,EAAIqK,IAAJ,gCACIxG,EADJ,kBACgB4pB,IACrC9kB,OAAM,eAHV,OACQvH,EADR,OAIEsP,EAAYtP,EAAWA,EAASC,KAAO,IAJzC,4CAFc,0DAQdssB,KACC,CAAClI,EAAQgI,IAUZ,OACE,gCACE,eAAC3oB,EAAA,EAAKC,MAAN,CAAYgI,UAAU,cAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,0BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAAS3I,SARD,SAACiB,GAC9BsoB,EAAoBtoB,EAAMC,OAAOC,QAO8BC,K,WAA3D,UACE,wBAAQD,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,0BAGHmL,GACCA,EAAOxF,KAAI,SAACiiB,GACV,OACE,cAAC,GAAD,CAEElC,MAAOkC,EACPjD,UAAW,WAvBrBvE,GAAWD,KAqBIyH,EAAErpB,WCsBN+pB,GAxDU,WAAO,IAAD,EACuBtpB,oBAAS,GADhC,mBACpBoe,EADoB,KACDC,EADC,KAW3B,OARAje,qBAAU,WACN,IAAIb,EAAKH,IACT1D,EAAIqK,IAAI,cAAgBxG,GACnBmD,MAAK,SAACF,GACH6b,GAAsB7b,EAAIzF,KAAKyhB,oBAChCna,OAAM,iBACd,IAGC,gCACI,sBAAMzB,UAAU,aAAhB,SACI,cAACoF,EAAA,EAAIoC,UAAL,CAAemf,eAAa,EAA5B,SACI,eAACphB,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACI,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACI,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACI,cAAC8b,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,0BAIJ,cAACwW,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,yBAIJ,cAACwW,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,0BAMZ,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACI,eAACrC,EAAA,EAAI4W,QAAL,WACI,cAAC4K,GAAA,EAAD,CAASthB,SAAS,QAAlB,SACI,cAAC,GAAD,MAEJ,cAACshB,GAAA,EAAD,CAASthB,SAAS,SAAlB,SACI,cAAC,GAAD,MAEJ,cAACshB,GAAA,EAAD,CAASthB,SAAS,QAAlB,SACI,cAAC,GAAD,kBAOxB,cAAC,GAAD,CAAkBgI,KAAMkO,EAAmBP,cAAe,kBAAMQ,GAAqB,UCElFoL,OApDf,WAA0B,IAAD,EAC2BzpB,oBAAS,GADpC,mBAChBoe,EADgB,KACGC,EADH,KAWvB,OARAje,qBAAU,WACR,IAAIb,EAAKH,IACT1D,EAAIqK,IAAI,cAAgBxG,GACrBmD,MAAK,SAACF,GACL6b,GAAsB7b,EAAIzF,KAAKyhB,oBAC9Bna,OAAM,iBACV,IAGD,gCACE,sBAAMzB,UAAU,aAAhB,SACE,cAACoF,EAAA,EAAIoC,UAAL,CAAe7K,GAAG,oBAAoBkf,iBAAiB,QAAvD,SACE,eAACtW,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACE,eAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,UACE,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACE,cAAC8b,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,0BAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,4BAKJ,cAACwW,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,SACE,cAAC8b,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,qCAMN,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACE,eAACrC,EAAA,EAAI4W,QAAL,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAwB1R,cAAe,gBAMjD,cAAC,GAAD,CAAkBgD,KAAMkO,EAAmBP,cAAe,kBAAMQ,GAAqB,UCV5EqL,GAtCE,WACf,IAMIC,EANErsB,EAAOuE,aAAY,SAACpE,GAAD,OAAWA,EAAMH,QACtCmC,EAAWD,IAMf,OALAY,qBAAU,WACRX,EAAWD,MACV,CAAClC,IAGImC,GACN,IAAK,QACHkqB,EAAW,cAAC,GAAD,IACX,MACF,IAAK,aACHA,EAAW,cAAC,GAAD,IACX,MACF,IAAK,gBACHA,EAAW,cAAC,GAAD,IACX,MACF,IAAK,WACHA,EAAW,cAAC,GAAD,IACX,MACF,IAAK,UACHA,EACE,cAAC,GAAD,IAEF,MACF,IAAK,iBACHA,EAAW,cAAC,GAAD,IACX,MACF,QACEA,EACE,cAAC,GAAD,IAIN,OAAO,8BAAMA,KC3BAC,I,OAfI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC7B,OACE,+BACE,6BAAKD,EAAQ7e,OACb,6BAAK6e,EAAQzsB,OACb,6BAAKysB,EAAQtW,UACb,6BACE,cAAC1Q,EAAA,EAAD,CAAQC,QAAQ,SAAS8F,QAASkhB,EAAlC,wBALKD,EAAQtqB,M,iBCsKNwqB,OAjKf,WAAsB,IAAD,EACS/pB,oBAAS,GADlB,mBACZmhB,EADY,KACJC,EADI,OAEephB,mBAAS,IAFxB,mBAEZgqB,EAFY,KAEDC,EAFC,OAGejqB,mBAAS,IAHxB,mBAGZ4kB,EAHY,KAGDC,EAHC,OAI6B7kB,mBAAS,IAJtC,mBAIZkqB,EAJY,KAIMC,EAJN,OAKqBnqB,oBAAS,GAL9B,mBAKZoqB,EALY,KAKEC,EALF,KAMXvoB,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IACzB,+BAAiC3G,KACjCiF,OAAM,eAHV,OACQvH,EADR,OAIEmtB,EAAentB,EAAWA,EAASC,KAAO,IACrB,IAAjBD,EAASC,MAAYktB,EAAa,MALxC,4CADc,uBAAC,WAAD,wBAQdK,KACC,CAACnJ,IAEJ/gB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAI,kBAAkB1B,OAAM,eADzD,OACQvH,EADR,OAEE+nB,EAAe/nB,EAAWA,EAASC,KAAO,IACrB,IAAjBD,EAASC,MAAY8nB,EAAa,MAHxC,4CADc,uBAAC,WAAD,wBAMdyF,KACC,CAACnJ,IAEJ,IAgBMoJ,EAAc,WAClBnJ,GAAWD,IAsBb,OACE,gCACE,oBAAIve,UAAU,sBAAd,uBACA,eAAC0H,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACR6F,KAAK,KACLnE,MAAO,CAAEsM,QAAsB,MAAbkZ,EAAoB,QAAU,QALlD,UAOE,gCACE,+BACE,sCACA,sCACA,yCACA,4BAGJ,uBAAOpnB,UAAU,kBAAjB,SACGonB,GACCA,EAAUrjB,KAAI,SAACxI,GAAD,OACZ,cAAC,GAAD,CAEE0rB,QAAS1rB,EACT2rB,YAAa,kBA3DJvqB,EA2DwBpB,EAAEoB,QA1D/C7D,EACG4T,OAAO,2BAA6BlQ,IAAmB,IAAMG,GAC7DmD,MAAK,SAACF,GACL+nB,IACAzoB,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,eAElC0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,aAR7B,IAACpD,IAyDJpB,EAAEoB,YAOjB,eAACsD,EAAA,EAAD,CAAQC,QAAQ,UAAU8F,QAAS,kBAAMyhB,GAAgB,IAAzD,UACE,cAAC,KAAD,CAAM7lB,MAAO,CAAE6L,MAAO,QAASC,OAAQ,WADzC,SAIA,eAAC1G,GAAA,EAAD,CACEE,kBAAgB,gCAChBC,UAAQ,EACRiC,OAAQ,WACNqe,GAAgB,GAChBF,EAAoB,KAEtBja,KAAMka,EAPR,UASE,cAACxgB,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,+BAIF,eAACqK,GAAA,EAAMO,KAAP,WACE,eAACG,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACR6F,KAAK,KACLnE,MAAO,CAAEsM,QAAsB,MAAb8T,EAAoB,QAAU,QALlD,UAOE,gCACE,+BACE,sCACA,sCACA,8CAGJ,uBAAOhiB,UAAU,kBAAjB,SACGgiB,GACCA,EAAUje,KAAI,SAAC6jB,GAAD,OACZ,qBACE5hB,QAAS,kBAzGI,SAACshB,GAC9BC,EAAoBD,GAwGWO,CAAuBD,IAEtC5nB,UACEsnB,EAAiB3qB,KAAOirB,EAAEjrB,GACtB,mCACA,iBANR,UASE,6BAAKirB,EAAEptB,OACP,6BAAKotB,EAAExf,OACP,6BAAKwf,EAAEjX,YATFiX,EAAEjrB,YAcjB,cAACsD,EAAA,EAAD,CACEC,QAAQ,OACR8F,QAtGS,WACjBlN,EACG6G,KACC,2BACAnD,IACA,IACA8qB,EAAiB3qB,IAElBmD,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjC4nB,IACAF,GAAgB,GAChBF,EAAoB,OAErB9lB,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAwFzC7C,SAAmD,IAAzCwb,OAAOC,KAAK2O,GAAkBhrB,OAH1C,2BCtGKwrB,OApDf,WAA4B,IAAD,EACG1qB,mBAAS,GADZ,mBAClB2qB,EADkB,KACVC,EADU,OAEO5qB,mBAAS,IAFhB,mBAElB6qB,EAFkB,KAERC,EAFQ,KA4BzB,OAxBA1qB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IACxB,iBAAmB3G,IAAmB,WACtCiF,OAAM,eAHV,cACQrI,EADR,OAIE4uB,EAAY5uB,EAAUA,EAAQe,KAAO,GAJvC,kBAMSf,GANT,4CADc,uBAAC,WAAD,wBASd+uB,KACC,IAEH3qB,qBAAU,WACFuqB,GAAQ,uCACZ,4BAAAxsB,EAAA,sEACwBzC,EAAIqK,IAAI,gCAAkC4kB,GAAQtmB,OAAM,eADhF,cACQrI,EADR,OAEE8uB,EAAc9uB,EAAUA,EAAQe,KAAO,IAFzC,kBAISf,GAJT,2CADY,oDAOZgvB,KAED,CAACL,IAGF,gCACE,oBAAInmB,MAAO,CAAE0b,UAAW,UAAxB,sBACA,oBAAG1b,MAAO,CAAE0b,UAAW,UAAvB,8BAAqDyK,EAArD,OACA,sBAAKnmB,MAAO,CAAEsM,QAAqB,IAAZ+Z,EAAiB,OAAS,SAAjD,UACE,oBAAGrmB,MAAO,CAAE0b,UAAW,UAAvB,uBAA8C2K,EAASztB,KAAvD,OACA,oBAAGoH,MAAO,CAAE0b,UAAW,UAAvB,6BACmB2K,EAASI,eAAgB,OAE5C,oBAAGzmB,MAAO,CAAE0b,UAAW,UAAvB,uBAA8C2K,EAASjO,SAAvD,UAEF,oBACEpY,MAAO,CACLsM,QAAqB,IAAZ+Z,EAAiB,QAAU,OACpCK,WAAY,OACZhL,UAAW,UAJf,sCCRSiL,OA/Bf,WAA6B,IAAD,EACQnrB,qBADR,mBACnBorB,EADmB,KACRC,EADQ,KAe1B,OAZAjrB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IACxB,iBAAmB3G,IAAmB,cACtCiF,OAAM,eAHV,cACQrI,EADR,OAIEqvB,EAAervB,EAAUA,EAAQe,KAAO,MAJ1C,kBAMSf,GANT,4CADc,uBAAC,WAAD,wBASdsvB,KACC,IAGD,gCACE,oBAAI9mB,MAAO,CAAE0b,UAAW,UAAxB,uBACA,oBAAG1b,MAAO,CAAE0b,UAAW,UAAvB,8BACoBkL,EADpB,eAGA,mBAAG5mB,MAAO,CAAE0b,UAAW,UAAvB,+EAGA,mBAAG1b,MAAO,CAAE0b,UAAW,UAAvB,0E,UCmRSqL,GAvSU,SAACxrB,GAAW,IAAD,EACVC,mBAAS,IADC,mBAC3B1C,EAD2B,KACrBkuB,EADqB,OAEFxrB,mBAAS,IAFP,mBAE3ByrB,EAF2B,KAEjBC,EAFiB,OAGI1rB,mBAAS,CAC7C2rB,YAAa,GACb/N,YAAa,GACbpa,eAAgB,KANgB,mBAG3BooB,EAH2B,KAGdC,EAHc,OAQR7rB,oBAAS,GARD,mBAQ3B8rB,EAR2B,KAQnBC,EARmB,OASgB/rB,oBAAS,GATzB,mBAS3BgsB,EAT2B,KASRC,EATQ,OAUAjsB,mBAAS,YAVT,mBAU3BksB,EAV2B,KAUhBC,EAVgB,KAW1BrqB,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACd,gDAAAjC,EAAA,sEACwBzC,EAAIqK,IAAI,cAAgB3G,KAAkBiF,OAAM,eADxE,cACQrI,EADR,OAEEwvB,EAAUxvB,EAAUA,EAAQe,KAAO,IACnC2uB,EAAY,CACVlqB,MAAK,UAAExF,EAAQe,YAAV,aAAE,EAAcyE,MACrB8B,UAAS,UAAEtH,EAAQe,YAAV,aAAE,EAAcuG,UACzBC,SAAQ,UAAEvH,EAAQe,YAAV,aAAE,EAAcwG,SACxBE,UAAS,UAAEzH,EAAQe,YAAV,aAAE,EAAc0G,UACzBE,OAAM,UAAE3H,EAAQe,YAAV,iBAAE,EAAcuH,eAAhB,aAAE,EAAuBX,OAC/BD,KAAI,UAAE1H,EAAQe,YAAV,iBAAE,EAAcuH,eAAhB,aAAE,EAAuBZ,KAC7BE,QAAO,UAAE5H,EAAQe,YAAV,iBAAE,EAAcuH,eAAhB,aAAE,EAAuBV,UAVpC,kBAYS5H,GAZT,4CADc,uBAAC,WAAD,wBAedowB,KACC,IAEH,IAiBIC,EAAc,SAACvrB,GACjB,IAAI8E,EAAM9E,EAAMC,OAAO3D,KACnB4D,EAAQF,EAAMC,OAAOC,MACzB0qB,EAAY,2BAAKD,GAAN,kBAAiB7lB,EAAM5E,MAGhCsrB,EAAe,SAACxrB,GAClB,IAAI8E,EAAM9E,EAAMC,OAAO3D,KACnB4D,EAAQF,EAAMC,OAAOC,MACzB6qB,EAAe,2BAAKD,GAAN,kBAAoBhmB,EAAM5E,MA2D1C,OACE,eAACoJ,GAAA,EAAD,WACE,cAACjC,EAAA,EAAD,UACE,eAACyB,GAAA,EAAD,CACEsG,KAAM8b,EACNhgB,OAAQ,kBAAMigB,GAAqB,IAFrC,UAIE,cAACriB,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,gCAEF,eAAC1J,EAAA,EAAD,CAAM4B,SAlCS,SAACtB,GAGtB,GAFAA,EAAMuB,iBAEFupB,EAAYhO,cAAgBgO,EAAYpoB,eAA5C,CAKA,IAAI+oB,EAAO,eAAQX,UACZW,EAAQ/oB,eACf9H,EACGoN,IAAI,8BAAgC1J,IAAkBmtB,GACtD7pB,MAAK,WACJZ,EAAS,iCAAkC,CAAEa,WAAY,YACzDipB,EAAYD,YAAc,GAC1BC,EAAYhO,YAAc,GAC1BgO,EAAYpoB,eAAiB,GAC7ByoB,GAAqB,MAEtB5nB,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,kBAhB/Cb,EAAS,yBAA0B,CAAEa,WAAY,aA8B7C,UACE,eAACiH,GAAA,EAAMO,KAAP,WACE,cAAC3J,EAAA,EAAKE,MAAN,2BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAMsrB,EACN9uB,KAAK,cACLmB,UAAQ,EACRyC,MAAO4qB,EAAYD,YACnB9rB,SAAUysB,EACV5tB,UAAW,KAGb,cAAC8B,EAAA,EAAKE,MAAN,2BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAMsrB,EACN9uB,KAAK,cACLmB,UAAQ,EACRyC,MAAO4qB,EAAYhO,YACnB/d,SAAUysB,EACV5tB,UAAW,KAGb,cAAC8B,EAAA,EAAKE,MAAN,8BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAMsrB,EACN9uB,KAAK,iBACLmB,UAAQ,EACRyC,MAAO4qB,EAAYpoB,eACnB3D,SAAUysB,EACV5tB,UAAW,QAGf,eAACkL,GAAA,EAAMmC,OAAP,WACE,cAAClJ,EAAA,EAAD,CACEC,QAAQ,YACR0B,MAAO,CACL0jB,aAAc,MACd/E,SAAU,WACVqJ,KAAM,QAER5jB,QAAS,kBACPujB,EAA2B,SAAdD,EAAuB,WAAa,SARrD,SAWE,cAAC,KAAD,MAEF,cAACrpB,EAAA,EAAD,CACEC,QAAQ,YACR8F,QAAS,kBAAMqjB,GAAqB,IAFtC,mBAMA,cAACppB,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAAQ,UAA9B,+BAOR,cAACqF,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,6BAAK7C,EAAM+a,UAEb,cAAC3S,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAAC9H,EAAA,EAAD,CAAM4B,SAlIK,SAACtB,GAClBA,EAAMuB,iBACN0pB,GAASD,GAGPxuB,EAAKgG,YAAcmoB,EAASnoB,WAC5BhG,EAAKiG,WAAakoB,EAASloB,UAC3BjG,EAAKmG,YAAcgoB,EAAShoB,WAC5BnG,EAAKgH,QAAQX,SAAW8nB,EAAS9nB,QACjCrG,EAAKgH,QAAQZ,OAAS+nB,EAAS/nB,MAC/BpG,EAAKgH,QAAQV,UAAY6nB,EAAS7nB,UAIpCtG,EAAKgG,UAAYmoB,EAASnoB,UAC1BhG,EAAKiG,SAAWkoB,EAASloB,SACzBjG,EAAKmG,UAAYgoB,EAAShoB,UAC1BnG,EAAKgH,QAAQX,OAAS8nB,EAAS9nB,OAC/BrG,EAAKgH,QAAQZ,KAAO+nB,EAAS/nB,KAC7BpG,EAAKgH,QAAQV,QAAU6nB,EAAS7nB,QAEhClI,EACGoN,IAAI,cAAgB1J,IAAkB9B,GACtCoF,MAAK,SAACF,GACLV,EAAS,6BAA8B,CAAEa,WAAY,YACrD6oB,EAAQhpB,EAAIzF,SAEbsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,eAsG3C,UACE,cAACnC,EAAA,EAAKE,MAAN,oBACA,cAACF,EAAA,EAAKG,QAAN,CAAcb,UAAQ,EAACc,KAAK,QAAQI,MAAOyqB,EAASjqB,QAEpD,cAAChB,EAAA,EAAKE,MAAN,yBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,UAAWgsB,EACXlrB,KAAK,OACLxD,KAAK,YACLmB,UAAQ,EACRyC,MAAOyqB,EAASnoB,UAChBzD,SAAUwsB,IAGZ,cAAC7rB,EAAA,EAAKE,MAAN,wBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,UAAWgsB,EACXlrB,KAAK,OACLxD,KAAK,WACLmB,UAAQ,EACRyC,MAAOyqB,EAASloB,SAChB1D,SAAUwsB,IAGZ,cAAC7rB,EAAA,EAAKE,MAAN,wBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,UAAWgsB,EACXlrB,KAAK,SACLxD,KAAK,YACLoB,QAAQ,YACRD,UAAQ,EACRyC,MAAOyqB,EAAShoB,UAChB5D,SAAUwsB,IAGZ,cAAC7rB,EAAA,EAAKE,MAAN,qBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,UAAWgsB,EACXlrB,KAAK,OACLxD,KAAK,SACLmB,UAAQ,EACRyC,MAAK,OAAEyqB,QAAF,IAAEA,OAAF,EAAEA,EAAU9nB,OACjB9D,SAAUwsB,IAGZ,cAAC7rB,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,UAAWgsB,EACXlrB,KAAK,OACLxD,KAAK,OACLmB,UAAQ,EACRyC,MAAK,OAAEyqB,QAAF,IAAEA,OAAF,EAAEA,EAAU/nB,KACjB7D,SAAUwsB,IAGZ,cAAC7rB,EAAA,EAAKE,MAAN,sBACA,cAACF,EAAA,EAAKG,QAAN,CACEb,UAAWgsB,EACXlrB,KAAK,OACLxD,KAAK,UACLmB,UAAQ,EACRyC,MAAK,OAAEyqB,QAAF,IAAEA,OAAF,EAAEA,EAAU7nB,QACjB/D,SAAUwsB,IAGZ,cAAClkB,EAAA,EAAD,CAAK3D,MAAO,CAAEoU,UAAW,OAAQuK,SAAU,YAA3C,SACE,cAACtgB,EAAA,EAAD,CACE/C,UAAWgsB,EACXhpB,QAAQ,OACRlC,KAAK,SACLgI,QAAS,kBAAMqjB,GAAqB,IACpCznB,MAAO,CAAE2e,SAAU,WAAYsJ,MAAO,OALxC,+BAWF,eAACjsB,EAAA,EAAKC,MAAN,CAAYmC,UAAU,qBAAqB6F,UAAU,UAArD,UACE,cAAC5F,EAAA,EAAD,CAAQ/C,UAAWgsB,EAAQhpB,QAAQ,YAAYlC,KAAK,SAApD,kBAGA,cAACiC,EAAA,EAAD,CACE+F,QAjPK,WACjBmjB,GAASD,IAiPGhsB,SAAUgsB,EACVhpB,QAAQ,YACRlC,KAAK,SAJP,kBAQA,cAACiC,EAAA,EAAD,CACE+F,QArPK,WAAO,IAAD,MACvBmjB,GAASD,GACTJ,EAAY,CACVlqB,MAAK,OAAElE,QAAF,IAAEA,OAAF,EAAEA,EAAMkE,MACb8B,UAAS,OAAEhG,QAAF,IAAEA,OAAF,EAAEA,EAAMgG,UACjBC,SAAQ,OAAEjG,QAAF,IAAEA,OAAF,EAAEA,EAAMiG,SAChBE,UAAS,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAMmG,UACjBE,OAAM,OAAErG,QAAF,IAAEA,GAAF,UAAEA,EAAMgH,eAAR,aAAE,EAAeX,OACvBD,KAAI,OAAEpG,QAAF,IAAEA,GAAF,UAAEA,EAAMgH,eAAR,aAAE,EAAeZ,KACrBE,QAAO,OAAEtG,QAAF,IAAEA,GAAF,UAAEA,EAAMgH,eAAR,aAAE,EAAeV,WA6Od9D,UAAWgsB,EACXhpB,QAAQ,YACRlC,KAAK,SAJP,kCCvQC8rB,OAhBf,SAAkB3sB,GAChB,OACE,eAACqK,GAAA,EAAD,WACE,cAAC,GAAD,CAAkB0Q,MAAO/a,EAAM+a,QAC/B,uBACA,cAAC3S,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,cAAC,GAAD,MAEF,uBACA,cAAC,GAAD,IACA,uBACA,cAAC,GAAD,QCNS+pB,OARf,WACE,OACE,+BACE,cAAC,GAAD,CAAU7R,MAAM,wBAAwB8R,UAAW,O,uCCkB1C7gB,OArBf,WACE,OACE,yBAAQnJ,UAAU,aAAlB,UACE,oDACA,8GAGE,cAACC,EAAA,EAAD,CAAQD,UAAU,kBAAlB,SACE,cAAC,KAAD,MAEF,cAACC,EAAA,EAAD,CAAQD,UAAU,kBAAlB,SACE,cAAC,KAAD,MAEF,cAACC,EAAA,EAAD,CAAQD,UAAU,kBAAlB,SACE,cAAC,KAAD,aCgGKiqB,OAjGf,YAAqC,IAAD,MAAXC,EAAW,EAAXA,QAAW,EACc9sB,oBAAS,GADvB,mBAC3B+sB,EAD2B,KACTC,EADS,KAGlC5sB,qBAAU,WAAO,IAAD,QAGd,OAFA6sB,IACAzmB,SAASC,eAAe,UAAUC,UAAY,GACvC,IAAIE,KAAI,CACb7F,OAAQ,SACR8F,OAAQ,CACN,IAAIC,KAAU,CACZC,OAAQ,IAAIC,QAIhBC,KAAM,IAAIC,KAAK,CACbC,OAAQC,aAAW,QACjB0lB,QADiB,IACjBA,GADiB,UACjBA,EAASxoB,eADQ,iBACjB,EAAkBiC,gBADD,aACjB,EAA4BhB,UADX,OAEjBunB,QAFiB,IAEjBA,GAFiB,UAEjBA,EAASxoB,eAFQ,iBAEjB,EAAkBiC,gBAFD,aAEjB,EAA4Bf,WAE9B6B,KAAM,GACNC,QAAS,EACTC,QAAS,SAGZ,CAACulB,IAGJ,IA2BMG,EAA0B,WACxB7tB,KACJ1D,EACGqK,IADH,wBACwB+mB,EAAQvtB,GADhC,sBACgDH,MAC7CsD,MAAK,SAACF,GACLwqB,EAAoBxqB,EAAIzF,SACvBsH,OAAM,gBAIf,OACE,cAAC2D,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,SACE,eAACkC,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,UACE,eAACnb,EAAA,EAAD,CAAKvF,UAAU,cAAf,UACE,eAACwF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI3F,UAAU,yBAArC,UACE,oCAAKkqB,QAAL,IAAKA,OAAL,EAAKA,EAAS1vB,OACd,qBAAKwF,UAAU,SAAf,SACGkqB,EAAQ7hB,UACP,aAAIuY,MAAMhU,KAAKiU,KAAKqJ,EAAQ7hB,YAAYtE,KAAI,kBAC1C,cAAC,KAAD,CAAU/D,UAAU,kBAG1B,2CAAOkqB,QAAP,IAAOA,OAAP,EAAOA,EAASxnB,YAAhB,QACA,sCACGwnB,QADH,IACGA,GADH,UACGA,EAASxoB,eADZ,aACG,EAAkBX,OADrB,YAC+BmpB,QAD/B,IAC+BA,GAD/B,UAC+BA,EAASxoB,eADxC,aAC+B,EAAkBZ,KADjD,IACwD,IADxD,OAEGopB,QAFH,IAEGA,GAFH,UAEGA,EAASxoB,eAFZ,aAEG,EAAkBV,WAErB,cAACf,EAAA,EAAD,CACEC,QAAQ,UACRoqB,OAAmC,YAA3B1tB,IACRoJ,QAzDM,WACVxJ,MACA2tB,EACFrxB,EACG6G,KADH,wBACyBuqB,EAAQvtB,GADjC,wBACmDH,MAChDsD,MAAK,WACJyqB,MAAM,WACNF,OAED5oB,OAAM,WACL8oB,MAAM,YAGVzxB,EACG6G,KADH,wBACyBuqB,EAAQvtB,GADjC,sBACiDH,MAC9CsD,MAAK,WACJyqB,MAAM,WACNF,OAED5oB,OAAM,WACL8oB,MAAM,cAkCN,SAKGJ,EAAmB,cAAgB,iBAGxC,cAAC3kB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIhJ,GAAG,SAASqD,UAAU,cAEnD,6BCyBO+hB,OA9Gf,YAAqD,IAA5BxX,EAA2B,EAA3BA,YAAa+B,EAAc,EAAdA,WAC5BpN,EAAaC,sBAAbD,SAD0C,EAGhB9B,mBAAS,IAHO,mBAG3C4kB,EAH2C,KAGhCC,EAHgC,OAIf7kB,mBAAS,GAJM,mBAI3C6N,EAJ2C,KAIhCC,EAJgC,OAKtB9N,mBAAS,GALa,mBAK3C+N,EAL2C,KAKnCC,EALmC,OAMJhO,mBAAS,IANL,mBAM3C8kB,EAN2C,KAM1BC,EAN0B,KAuDlD,OA/CA3kB,qBAAU,gBACWkM,GAAfa,GAA0B,uCAC5B,4BAAAhP,EAAA,sEACwBzC,EACnBqK,IADmB,yBACGoH,IACtBzK,MAAK,SAACF,GACLqiB,EAAariB,EAAIzF,KAAK4R,kBAEvBtK,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAWSA,GAXT,2CAD4B,oDAc5B+S,KAED,CAAC5B,IAEJ/M,qBAAU,WACR,GAAwB,GAApBwkB,EAAU1lB,OAAa,CACzB,IAAIqQ,EAAYC,KAAKC,OAAe,OAATmV,QAAS,IAATA,OAAA,EAAAA,EAAW1lB,QAAS,IAAM,GACxC,OAAT0lB,QAAS,IAATA,OAAA,EAAAA,EAAW1lB,QAAS,GAAK,EAAIqQ,IAC/BA,GAAwB,GAE1BvB,EAAUuB,MAEX,CAACqV,IAEJxkB,qBAAU,WACR,IAAIsP,EAAoB,GAAZ7B,EACR8B,GAAe,OAATiV,QAAS,IAATA,OAAA,EAAAA,EAAW1lB,QAASwQ,EAAQ,GAA5B,OAAiCkV,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAW1lB,OAASwQ,EAAQ,GACvEqV,EAAkB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAW1nB,MAAMwS,EAAOC,MAC1C,CAACiV,EAAW/W,IAeb,cAAC7F,EAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,SACE,eAACkC,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,UACE,cAACnb,EAAA,EAAD,UACG2c,GACCA,EAAgBne,KAAI,SAACoE,EAAUH,GAAX,qBAClB,cAACxC,EAAA,EAAD,CAAKxF,UAAU,WAAuByF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAxD,SACE,cAACmW,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJ/b,UAAU,sBACVV,GAAE,2BAAe6I,QAAf,IAAeA,GAAf,UAAeA,EAAUA,gBAAzB,aAAe,EAAoBxL,GAAnC,qBAAkD2P,EAAlD,yBAAsEnE,QAAtE,IAAsEA,OAAtE,EAAsEA,EAAUyB,OAHpF,SAKE,eAAC4D,GAAA,EAAD,CAAMxN,UAAU,WAAW4B,MAAO,CAAE6L,MAAO,SAA3C,UACE,eAACD,GAAA,EAAKjG,KAAN,WACE,cAACiG,GAAA,EAAKlG,MAAN,iBAAaa,QAAb,IAAaA,GAAb,UAAaA,EAAUA,gBAAvB,aAAa,EAAoB3N,OACjC,eAACgT,GAAA,EAAKoM,KAAN,sBAAazR,QAAb,IAAaA,GAAb,UAAaA,EAAUA,gBAAvB,aAAa,EAAoBC,QACjC,cAACoF,GAAA,EAAKoM,KAAN,iBAAYzR,QAAZ,IAAYA,GAAZ,UAAYA,EAAUA,gBAAtB,aAAY,EAAoBwI,aAElC,eAACnI,GAAA,EAAD,CAAWxI,UAAU,mBAArB,UACE,eAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,iBACGmI,QADH,IACGA,OADH,EACGA,EAAUyB,MADb,OAGA,cAAC+W,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACGgiB,GACC,aACKpB,MAAMhU,KAAKiU,KAAL,OAAU1Y,QAAV,IAAUA,GAAV,UAAUA,EAAUA,gBAApB,aAAU,EAAoBE,YACvCtE,KAAI,kBAAM,cAAC,KAAD,CAAU/D,UAAU,2BApBbgI,QA6BrC,cAACzC,EAAA,EAAD,CAAKvF,UAAU,sBAAf,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QApDQ,WACF,IAAdiF,GACFC,EAAcD,EAAY,MAoDlB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QAnDS,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,mBCuNjBuf,OA5Qf,YAA0C,IAAfle,EAAc,EAAdA,WAAc,EACXlP,oBAAS,GADE,mBAChCmhB,EADgC,KACxBC,EADwB,OAEGphB,mBAAS,IAFZ,mBAEhCqtB,EAFgC,KAEjBC,EAFiB,OAGJttB,mBAAS,GAHL,mBAGhC6N,EAHgC,KAGrBC,EAHqB,OAIX9N,mBAAS,GAJE,mBAIhC+N,EAJgC,KAIxBC,EAJwB,OAKehO,mBAAS,IALxB,mBAKhCutB,EALgC,KAKXC,EALW,OAMXxtB,mBAAS,QANE,mBAMhC+gB,EANgC,KAMxBC,EANwB,OAOXhhB,mBAAS,GAPE,mBAOhC2qB,EAPgC,KAOxBC,EAPwB,OAQP5qB,mBAAS,IARF,mBAQhC6qB,EARgC,KAQtBC,EARsB,KAS/BhpB,EAAaC,sBAAbD,SAmHR,OAjHA1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,yDAC0B,MAApBiB,IADN,iEAEwB1D,EAAIqK,IACxB,iBAAmB3G,IAAmB,WACtCiF,OAAM,eAJV,cAEQrI,EAFR,OAKE4uB,EAAY5uB,EAAUA,EAAQe,KAAO,GALvC,kBAMSf,GANT,4CADc,uBAAC,WAAD,wBASd+uB,KACC,IAEH3qB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,yDAC0B,MAApBiB,IADN,iEAEwB1D,EAAIqK,IAAI,gCAAkC4kB,GAAQtmB,OAAM,eAFhF,cAEQrI,EAFR,OAGE8uB,EAAc9uB,EAAUA,EAAQe,KAAO,IAHzC,kBAKSf,GALT,4CADc,uBAAC,WAAD,wBAQdgvB,KACC,CAACL,IAEJvqB,qBAAU,gBACUkM,GAAd4C,GAAyB,uCAC3B,4BAAA/Q,EAAA,sEACwBzC,EAAIqK,IAAJ,wCACamJ,IACjC7K,OAAM,eAHV,cACQrI,EADR,OAIEsxB,EAAmBtxB,EAAUA,EAAQe,KAAO,IAJ9C,kBAMSf,GANT,2CAD2B,oDAS3ByxB,KAED,CAACve,EAAYiS,IAEhB/gB,qBAAU,WACR,IAAImP,EAAYC,KAAKC,OAAmB,OAAb4d,QAAa,IAAbA,OAAA,EAAAA,EAAenuB,QAAS,IAAM,GACxC,OAAbmuB,QAAa,IAAbA,OAAA,EAAAA,EAAenuB,QAAS,GAAK,EAAIqQ,IACnCA,GAAwB,GAE1BvB,EAAUuB,KACT,CAAC8d,EAAelM,IAEnB/gB,qBAAU,WACR,IAAIsP,EAAoB,GAAZ7B,EACR8B,EACF0d,EAAcnuB,OAASwQ,EAAQ,GAA/B,OAAoC2d,QAApC,IAAoCA,OAApC,EAAoCA,EAAenuB,OAASwQ,EAAQ,GACtE8d,EAAsB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAenwB,MAAMwS,EAAOC,MAClD,CAAC0d,EAAexf,EAAWsT,IAgE5B,cAACnZ,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,SACE,eAACkC,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,UACE,cAACnb,EAAA,EAAD,CACEvF,UAAU,6BACV4B,MAAO,CAAEsM,QAAiC,GAAxBuc,EAAcnuB,OAAc,OAAS,QAFzD,SAIE,cAACsB,EAAA,EAAD,CAAM4B,SAvCK,SAACtB,GAGlB,GAFAA,EAAMuB,iBAES,SAAX0e,EAAJ,CAEA,IAAI2M,EAAgB,IAAIC,gBAET,aAAX5M,GACF2M,EAActO,OAAO,OAAQ,aAEhB,cAAX2B,GACF2M,EAActO,OAAO,OAAQ,cAEhB,aAAX2B,GACF2M,EAActO,OAAO,OAAQ,uBAEhB,cAAX2B,GACF2M,EAActO,OAAO,OAAQ,wBAG/B1jB,EACGqK,IADH,wCACwCmJ,EADxC,SAC2D,CACvDJ,OAAQ4e,IAEThrB,MAAK,SAAC6V,GAAD,OAAU+U,EAAiB/U,EAAKxb,SACrCsH,MAAMipB,EAAiB,OAcpB,SACE,eAAC9sB,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKvF,UAAU,qBAA/B,UACE,eAACwF,EAAA,EAAD,WACE,cAAC5H,EAAA,EAAKE,MAAN,8BACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAO+f,EACPlhB,SAlBM,SAACiB,GACrBkgB,EAAUlgB,EAAMC,OAAOC,QAiBeC,KAAKC,MAC7B9D,KAAK,SAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,+BACA,wBAAQA,MAAM,YAAd,gCACA,wBAAQA,MAAM,WAAd,6CAGA,wBAAQA,MAAM,YAAd,oDAKJ,eAACoH,EAAA,EAAD,CAAKxF,UAAU,yBAAf,UACE,eAACC,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAAQ,UAA9B,UACG,IADH,OAEO,OAEP,eAACD,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,WACPwY,GAAWD,IAHf,UAMG,IANH,QAOQ,iBAMhB,cAAChZ,EAAA,EAAD,UACGolB,GACCA,EAAoB5mB,KAAI,SAACinB,EAAchjB,GAAf,eACtB,cAACxC,EAAA,EAAD,CAAKxF,UAAU,WAAuByF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAxD,SACE,eAAC6H,GAAA,EAAD,CAAMxN,UAAU,WAAW4B,MAAO,CAAE6L,MAAO,SAA3C,UACE,eAACD,GAAA,EAAKjG,KAAN,WACE,cAACiG,GAAA,EAAKlG,MAAN,iBAAa0jB,QAAb,IAAaA,OAAb,EAAaA,EAAcC,kBAC3B,cAACzd,GAAA,EAAKoM,KAAN,UACG/P,KAAOmhB,EAAajb,WAAWhG,OAAO,iBAEzC,eAACyD,GAAA,EAAKoM,KAAN,WACG/P,KAAOmhB,EAAajb,WAAWhG,OAAO,WADzC,KACuD,IACpDF,KAAOmhB,EAAahb,SAASjG,OAAO,iBAGzC,eAACvB,GAAA,EAAD,CAAWxI,UAAU,mBAArB,UACE,cAAC2gB,GAAA,EAAD,CACE3gB,UAAU,WACV4B,MAAO,CACLsM,QACe,KAAb+Z,GAAoD,IAAjCvP,OAAOC,KAAKsP,GAAU3rB,OACrC,OACA,QANV,SASG0uB,EAAaphB,QAEhB,eAAC+W,GAAA,EAAD,CACE3gB,UAAU,WACV4B,MAAO,CACLsM,QACe,KAAb+Z,GAAoD,IAAjCvP,OAAOC,KAAKsP,GAAU3rB,OACrC,OACA,QANV,UASE,sBAAMsF,MAAO,CAAEspB,eAAgB,gBAA/B,SACGF,EAAaphB,QAEf,WACCohB,EAAaphB,OAAS,IAAMqe,EAASjO,UAAa,OAEtD,eAAC2G,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,iBACGgrB,QADH,IACGA,GADH,UACGA,EAAchhB,cADjB,aACG,EAAsBrJ,SAAU,IADnC,OAEGqqB,QAFH,IAEGA,GAFH,UAEGA,EAAchhB,cAFjB,aAEG,EAAsBtJ,aAEzB,cAACigB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACR8F,QAAS,kBAhJHzK,EAgJ4ByvB,OA/ItDlyB,EACG6G,KAAK,4BAA8BpE,EAAEoB,GAAK,YAAcH,KACxDsD,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCye,GAAWD,MAEZ9c,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GACvB,CACE8F,WAAY,UAGhBye,GAAWD,MAbU,IAAChjB,GAiJNqG,MAAO,CACLsM,QAC6B,YAA3BtR,IACI,QACA,QAPV,8BA5CuBoL,QA+DrC,cAACzC,EAAA,EAAD,CACEvF,UAAU,sBACV4B,MAAO,CAAEsM,QAAiC,GAAxBuc,EAAcnuB,OAAc,OAAS,QAFzD,SAIE,cAACkJ,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QArLQ,WACF,IAAdiF,GACFC,EAAcD,EAAY,MAqLlB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QApLS,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,aAuLxB,oBACErJ,MAAO,CACLsM,QAAiC,GAAxBuc,EAAcnuB,OAAc,QAAU,OAC/CghB,UAAW,SACXtH,UAAW,QAJf,8CClKOmV,OAjGf,YAAsC,IAAf7e,EAAc,EAAdA,WAAc,EACLlP,mBAAS,IADJ,mBAC5BwX,EAD4B,KACnBC,EADmB,OAEAzX,mBAAS,GAFT,mBAE5B6N,EAF4B,KAEjBC,EAFiB,OAGP9N,mBAAS,GAHF,mBAG5B+N,EAH4B,KAGpBC,EAHoB,OAIOhO,mBAAS,IAJhB,mBAI5B0X,EAJ4B,KAIbC,EAJa,KA8CnC,OAxCAvX,qBAAU,gBACUkM,GAAd4C,GAAyB,uCAC3B,4BAAA/Q,EAAA,sEACwBzC,EAAIqK,IAAJ,sCACWmJ,IAC/B7K,OAAM,eAHV,cACQrI,EADR,OAIEyb,EAAazb,EAAUA,EAAQe,KAAO,IAJxC,kBAMSf,GANT,2CAD2B,oDAS3Bsc,KAED,CAACpJ,IAEJ9O,qBAAU,WACR,IAAImP,EAAYC,KAAKC,OAAa,OAAP+H,QAAO,IAAPA,OAAA,EAAAA,EAAStY,QAAS,IAAM,GACxC,OAAPsY,QAAO,IAAPA,OAAA,EAAAA,EAAStY,QAAS,GAAK,EAAIqQ,IAC7BA,GAAwB,GAE1BvB,EAAUuB,KACT,CAACiI,IAEJpX,qBAAU,WACR,IAAIsP,EAAoB,GAAZ7B,EACR8B,EAAM6H,EAAQtY,OAASwQ,EAAQ,GAAzB,OAA8B8H,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAStY,OAASwQ,EAAQ,GAClEiI,EAAgB,OAACH,QAAD,IAACA,OAAD,EAACA,EAASta,MAAMwS,EAAOC,MACtC,CAAC6H,EAAS3J,IAeX,cAAC7F,EAAA,EAAIC,KAAL,CAAUC,SAAS,QAAnB,SACE,eAACkC,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,UACE,cAACnb,EAAA,EAAD,UACGuP,GACCA,EAAc/Q,KAAI,SAACiG,EAAQhC,GAAT,uBAChB,cAACxC,EAAA,EAAD,CAAKxF,UAAU,WAAuByF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAxD,SACE,eAAC6H,GAAA,EAAD,CAAMxN,UAAU,WAAW4B,MAAO,CAAE6L,MAAO,SAA3C,UACE,eAACD,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,kBACG0C,QADH,IACGA,GADH,UACGA,EAAQA,cADX,aACG,EAAgBrJ,SADnB,WAC8BqJ,QAD9B,IAC8BA,GAD9B,UAC8BA,EAAQA,cADtC,aAC8B,EAAgBtJ,aAE9C,cAAC8M,GAAA,EAAKoM,KAAN,iBAAY5P,QAAZ,IAAYA,GAAZ,UAAYA,EAAQA,cAApB,aAAY,EAAgBpL,QAC5B,cAAC4O,GAAA,EAAKoM,KAAN,iBAAY5P,QAAZ,IAAYA,GAAZ,UAAYA,EAAQA,cAApB,aAAY,EAAgBnJ,eAE9B,eAAC2H,GAAA,EAAD,CAAWxI,UAAU,mBAArB,UACE,cAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,gBACGgK,QADH,IACGA,GADH,UACGA,EAAQA,cADX,aACG,EAAgBrI,WAEnB,cAACgf,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACGgK,GACC,aAAI4W,MAAMhU,KAAKiU,KAAL,OAAU7W,QAAV,IAAUA,GAAV,UAAUA,EAAQA,cAAlB,aAAU,EAAgB3B,YAAYtE,KAC9C,kBAAM,cAAC,KAAD,CAAU/D,UAAU,yBAhBPgI,QAyBrC,cAACzC,EAAA,EAAD,CAAKvF,UAAU,sBAAf,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QAhDQ,WACF,IAAdiF,GACFC,EAAcD,EAAY,MAgDlB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QA/CS,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,mBC4BjBmgB,GAjFiB,SAAC,GAAoB,IAAlB9e,EAAiB,EAAjBA,WACzBpN,EAAaC,sBAAbD,SAD0C,EAEpB9B,mBAAS,IAFW,mBAE3CiuB,EAF2C,KAElCC,EAFkC,OAGdluB,mBAAS,IAHK,mBAG3CmuB,EAH2C,KAG/BC,EAH+B,KAqDlD,OArBAhuB,qBAAU,WACR,IAAIrD,EAAOoxB,EACc,GAArB7S,OAAOC,KAAKxe,IAEhBrB,EAAI,CACF2yB,OAAQ,OACRC,IAAI,0BAAD,OAA4Bpf,GAC/BnS,KAAMA,IAEL2F,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CACjB4F,WAAY,eAGf0B,OAAM,WACLvC,EAAS,mCAAoC,CAC3Ca,WAAY,eAGjB,CAACwrB,IAGF,qBAAKvrB,UAAU,iCAAf,SACE,cAACwH,GAAA,EAAD,UACE,cAAC5J,EAAA,EAAD,CACE4B,SAAU,SAAC5F,IAhDE,SAACA,GACpBA,EAAE6F,iBACF7F,EAAE8F,kBAEF,IAAIisB,EAAW,IAAIpP,SACnBoP,EAASnP,OAAO,OAAQ6O,GAExBvyB,EAAI,CACF2yB,OAAQ,OACRC,IAAI,4BAAD,OAA8BlvB,KACjCrC,KAAMwxB,EACNzyB,QAAS,CAAE,eAAgB,yBAE1B4G,MAAK,SAACF,GACL4rB,EAAc5rB,EAAIzF,SAEnBsH,OAAM,WACLvC,EAAS,kBAAmB,CAC1Ba,WAAY,aA+BV6rB,CAAahyB,IAFjB,SAKE,cAAC4N,GAAA,EAAD,CAAW5F,MAAO,CAAE+f,aAAc,QAAlC,SACE,eAACpc,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKxF,UAAU,UAAU0F,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAAhD,SACE,eAAC/nB,EAAA,EAAKiuB,KAAN,WACE,cAACjuB,EAAA,EAAKiuB,KAAK/tB,MAAX,6BACA,cAACF,EAAA,EAAKiuB,KAAKC,MAAX,CAAiB7uB,SAAU,SAACrD,GAAD,OA7DlB,SAACA,GACxB0xB,EAAW1xB,EAAEuE,OAAO4tB,MAAM,IA4DsBC,CAAiBpyB,WAIvD,cAAC4L,EAAA,EAAD,CAAKxF,UAAU,UAAU0F,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAAhD,SACE,cAAC1lB,EAAA,EAAD,CAAQjC,KAAK,SAAb,kCC4BDiuB,OAhFf,WAA4B,IAClB/sB,EAAaC,sBAAbD,SADiB,EAGa9B,mBAAS,IAHtB,mBAGlB8sB,EAHkB,KAGT7O,EAHS,KAKnB1e,EAAOuvB,cAAPvvB,GAoBN,OAlBAa,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EACnBqK,IADmB,wBACExG,IACrBmD,MAAK,SAACF,GACLyb,EAAmBzb,EAAIzF,SAExBsH,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAC7B8F,WAAY,aARpB,cACQ3G,EADR,yBAYSA,GAZT,4CADc,uBAAC,WAAD,wBAedsiB,KACC,CAAC/e,IAGF,qBAAKiF,MAAO,CAAE8L,OAAQ,SAAtB,SACE,cAACtI,EAAA,EAAIoC,UAAL,CAAe7K,GAAG,oBAAoBkf,iBAAiB,QAAvD,SACE,eAACtW,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACE,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACE,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACE,cAAC8b,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,kCAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,yBAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,6BAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,8CAI0B,YAA3B1I,KACC,cAACkf,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,uCAOR,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACE,eAACrC,EAAA,EAAI4W,QAAL,WACE,cAAC,GAAD,CAAekO,QAASA,IACxB,cAAC,GAAD,CACE3f,YAAW,OAAE2f,QAAF,IAAEA,OAAF,EAAEA,EAAS3f,YACtB+B,WAAU,OAAE4d,QAAF,IAAEA,OAAF,EAAEA,EAASvtB,KAEvB,cAAC,GAAD,CAAiB2P,WAAY3P,IAC7B,cAAC,GAAD,CAAa2P,WAAY3P,IACzB,cAACiqB,GAAA,EAAD,CAASthB,SAAS,QAAlB,SACE,cAAC,GAAD,CAAyBgH,WAAY3P,mB,sCCsKtCwvB,OAnPf,WAA4B,IAAD,EACO/uB,mBAAS,IADhB,mBAClB+K,EADkB,KACRikB,EADQ,OAEWhvB,mBAAS,IAFpB,mBAElBoX,EAFkB,KAENC,EAFM,OAGWrX,mBAAS,MAHpB,mBAGlBivB,EAHkB,KAGNC,EAHM,OAIuBlvB,mBAAS,IAJhC,mBAIlBmvB,EAJkB,KAIAC,EAJA,KAKjBttB,EAAaC,sBAAbD,SALiB,EAOEgtB,cAArBvvB,EAPmB,EAOnBA,GAAI8vB,EAPe,EAOfA,IAAKC,EAPU,EAOVA,QAPU,EASGtvB,mBAAS,GATZ,mBASlB2qB,EATkB,KASVC,EATU,OAUO5qB,mBAAS,IAVhB,mBAUlB6qB,EAVkB,KAURC,EAVQ,KAsFzB,OA1EA1qB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IACxB,iBAAmB3G,IAAmB,WACtCiF,OAAM,eAHV,cACQrI,EADR,OAIE4uB,EAAY5uB,EAAUA,EAAQe,KAAO,GAJvC,kBAKSf,GALT,4CADc,uBAAC,WAAD,wBAQd+uB,KACC,IAEH3qB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAI,gCAAkC4kB,GAAQtmB,OAAM,eADhF,cACQrI,EADR,OAEE8uB,EAAc9uB,EAAUA,EAAQe,KAAO,IAFzC,kBAISf,GAJT,4CADc,uBAAC,WAAD,wBAOdgvB,KACC,CAACL,IAEJvqB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAJ,wBAAyBxG,IAAM8E,OAAM,eAD7D,cACQrI,EADR,OAEEgzB,EAAchzB,EAAUA,EAAQe,KAAO,IAFzC,kBAGSf,GAHT,4CADc,uBAAC,WAAD,wBAMdqX,KACC,CAAC9T,IAEJa,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAJ,iCAAkCxG,IAAM8E,OAAM,eADtE,cACQrI,EADR,OAEEqb,EAAgBrb,EAAUA,EAAQe,KAAO,IAF3C,kBAGSf,GAHT,4CADc,uBAMF,GAARqzB,GANW,WAAD,wBAOZ7W,KAED,CAACjZ,EAAI8vB,IAoCN,qBAAKzsB,UAAU,+BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAGA,UAAU,uBAAb,UACE,6BAAKmI,EAAS3N,OACd,mBAAGmyB,KAAI,6DAAwDhwB,EAAxD,YAAsEwB,OAAO,SAASyuB,IAAI,sBAAjG,SACE,6BAAI,cAAC,KAAD,WAGR,oBAAG5sB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,oBACCmI,EAASC,QAEZ,oBAAGpI,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,sBAAsD,IACrDmI,EAASwI,WAEZ,oBAAG3Q,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,2BAA2D,IAC1DmI,EAAS0kB,eAEZ,oBAAG7sB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,4BACCmI,EAAS2kB,eAEZ,oBAAG9sB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,qBAAqD,IACxB,aAA5BmI,EAAS4kB,eAAgC,WAAa,kBAEzD,oBAAG/sB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,gCACCmI,EAAS6kB,mBAEZ,oBAAGhtB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,6BAA6D,IAC5DmI,EAASE,YAEZ,oBAAGrI,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,sBACCmI,EAAS4f,UAEZ,oBAAG/nB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,oBACCmI,EAAS4Y,gBAEZ,oBAAG/gB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,oBACCmI,EAAS8Y,gBAEZ,oBAAGjhB,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,4BACCmI,EAAS8kB,gBAEZ,gCACE,eAACvlB,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACR0B,MAAO,CACLsM,QAA+B,IAAtBsG,EAAWlY,SAAwB,GAARmwB,EAAY,QAAU,QAE5DzsB,UAAU,wBAPZ,UASE,gCACE,+BACE,sCACA,yCACA,4CAGJ,gCACGwU,GACCA,EAAWzQ,KAAI,SAACmpB,GAAD,OACb,qBAEElnB,QAAS,kBA5GI,SAACumB,GAC9BC,EAAoBD,GA2GWY,CAAuBD,IACtCltB,UACEusB,EAAiB5vB,KAAOuwB,EAAEvwB,GACtB,mCACA,iBANR,UASE,6BAAKuwB,EAAE1yB,OACP,6BAAK0yB,EAAExrB,UACP,6BAAKwrB,EAAEtjB,UAVFsjB,EAAEvwB,YAejB,sBAAKiF,MAAO,CAAEsM,QAAoC,YAA3BtR,IAAuC,QAAU,QAAxE,UACE,oBAAGoD,UAAU,0BAAb,UACE,sBAAMA,UAAU,sBAAhB,+BACA,cAAC,KAAD,CACEotB,eAAe,EACflK,SAAUmJ,EACVgB,WAAW,aACXpwB,SAAU,SAAC0L,GAAD,OAAU2jB,EAAc3jB,IAClC2kB,aAAW,OAGf,oBACE1rB,MAAO,CACL0b,UAAW,SACXpP,QAAqB,IAAZ+Z,EAAiB,OAAS,SAHvC,oCAM0BA,EAASjO,SANnC,OAQA,oBACEpY,MAAO,CACL0b,UAAW,SACXiQ,SAAU,SACVrf,SACU,GAARue,GAAqD,GAAxC/T,OAAOC,KAAK4T,GAAkBjwB,OACvC,QACA,QAPV,yBAUe,IACb,sBAAMsF,MAAO,CAAEspB,eAAgB,gBAA/B,SACGqB,EAAiB3iB,QAEnB,WACC2iB,EAAiB3iB,OAAS,IAAMqe,EAASjO,UAAa,OAE1D,oBACEpY,MAAO,CACL0b,UAAW,SACXiQ,SAAU,SACVrf,SAAiB,GAARue,EAAY,QAAU,QAJnC,yBAOe,IACb,sBAAM7qB,MAAO,CAAEspB,eAAgB,gBAA/B,SAAkDwB,IACjD,WACCA,GAAW,IAAMzE,EAASjO,UAAa,OAE3C,cAAC/Z,EAAA,EAAD,CACEC,QAAQ,OACR8F,QAxKc,WACxB,GAAIqmB,GACEA,EAAa,IAAIvjB,KACnB5J,EAAS,+BAAgC,CAAEa,WAAY,gBAF3D,CAOA,IAAI4pB,EAAU,CACZ0C,WAAYA,EAAWpjB,UACvBhB,WAAYtL,EACZ2P,YAAoB,GAARmgB,EAAYF,EAAiB5vB,GAAK8vB,EAC9Ce,OAAQhxB,IACRoN,OAAmB,GAAZ8iB,EAAgBH,EAAiB3iB,MAAQ8iB,GAGlD5zB,EACG6G,KAAK,6BAA8BgqB,GACnC7pB,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,eAElC0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,aAGjDysB,EAAoB,IACpBF,EAAc,QA+IJpvB,SACgB,MAAdmvB,GAC0C,IAAzC3T,OAAOC,KAAK4T,GAAkBjwB,SAAwB,GAARmwB,EAEjD7qB,MAAO,CACL+f,aAAc,QARlB,iCCzNG8L,OArBf,SAAqBtwB,GACjB,OACI,eAAC6J,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACI,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,SACKQ,EAAM+a,UAIf,cAAClR,GAAA,EAAMO,KAAP,UACI,mBAAGmmB,MAAM,cAAT,SAAwBvwB,EAAMwwB,SAAWxwB,EAAMwwB,SAAW,wBAG9D,eAAC3mB,GAAA,EAAMmC,OAAP,WACI,cAAClJ,EAAA,EAAD,CAAQC,QAAQ,SAAS8F,QAAS7I,EAAMywB,SAAxC,qBACA,cAAC3tB,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,4B,4DC+JDykB,GArKI,SAAC,GAA8B,IAA5B5wB,EAA2B,EAA3BA,SAAU6wB,EAAiB,EAAjBA,WAAiB,EACvB1wB,qBADuB,mBACtC2G,EADsC,KACjCgqB,EADiC,OAEH3wB,qBAFG,mBAEtC4wB,EAFsC,KAEvBC,EAFuB,OAGH7wB,mBAAW0wB,GAAgBA,EAAWnqB,SAAW,CAACmqB,EAAWnqB,SAAShB,UAAWmrB,EAAWnqB,SAASf,UAAY,CAAC,WAAY,aAH3H,mBAGtCsrB,EAHsC,KAGvBC,EAHuB,OAIf/wB,mBAAS,IAJM,mBAItCsE,EAJsC,KAI7B0sB,EAJ6B,OAKbhxB,mBAAS,IALI,mBAKtCuG,EALsC,KAK5B0qB,EAL4B,KAOvCC,EAAaptB,mBAEJA,mBACRI,QAAUyC,EAEjBvG,qBAAU,WACN,IAAI+wB,EAAgB,IAAIC,KAAQ,CAC5BxwB,KAAM,OACNywB,SAAU,IAAIC,KAAMlqB,aAAW0pB,MAG/BS,EAAY,IAAIC,KAAM,CACtBC,MAAO,IAAIC,KAAM,CACbC,OAAQ,CAAC,GAAK,GACdC,IAAK,kEAIbT,EAAcU,SAASN,GAEvB,IAAIO,EAAe,IAAIC,KAAa,CAChCC,SAAU,CAACb,KAGTc,EAAmB,IAAIC,KAAY,CACrCnrB,OAAQ+qB,IAGNK,EAAU,IAAIvrB,KAAI,CACpB7F,OAAQmwB,EAAWhtB,QACnB2C,OAAQ,CACJ,IAAIC,KAAU,CACVC,OAAQ,IAAIC,OAEhBirB,GAEJhrB,KAAM,IAAIC,KAAK,CACXC,OAAQC,aAAW0pB,GACnBzpB,KAAM,GACN8D,IAAK,EACLwE,IAAK,OAIbwiB,EAAQ3qB,GAAG,QAAS4qB,GACpBvB,EAAiBoB,GACjBtB,EAAOwB,KACR,IAEH,IAAMC,EAAiB,SAACtxB,GAEpB,IAAIuxB,EAAiBvxB,EAAM8G,WACvB0qB,EAAcC,aAAUF,EAAgB,YAAa,aAEzDtB,EAAiBuB,GACjBE,EAAaF,GACbl0B,QAAQ4U,IAAIsf,IAGVE,EAAe,SAAC9qB,GAClB,IAAI4mB,EAAM,iEAAmE5mB,EAAO,GAAK,QAAUA,EAAO,GAC1GhM,EACKqK,IAAIuoB,GACJ5rB,MAAK,SAAC5F,GACH,IAAI21B,EAAW31B,EAASC,KACxB21B,EAAcD,MACfpuB,OAAM,gBAGXquB,EAAgB,SAAC31B,GACnB,IAAI41B,EAAc51B,EAAI,QAElB61B,EAAI,CACJ,UAAa71B,GAAQA,EAAI,IAAUA,EAAI,IAAU,GACjD,SAAYA,GAAQA,EAAI,IAAUA,EAAI,IAAU,IAGhDoB,EAAI,CACJ,KAAQw0B,GAAiBA,EAAW,KAAWA,EAAW,KAAW,GACrE,OAAUA,GAAiBA,EAAW,KAA5B,UAA0CA,EAAW,KAArD,YAAmEA,EAAW,aAAmBA,EAAW,aAAmB,IAAO,GAChJ,QAAWA,GAAiBA,EAAW,QAAcA,EAAW,QAAc,GAC9E,SAAYC,GAGhB/yB,EAAS1B,GAET8yB,EAAY2B,GACZ5B,EAAW7yB,IAoCf,OAjCAiC,qBAAU,WAEN,GAAM0wB,GAAmBnqB,EAAK,CAE1B,IAAIwqB,EAAgB,IAAIC,KAAQ,CAC5BxwB,KAAM,OACNywB,SAAU,IAAIC,KAAMlqB,aAAW0pB,MAG/BS,EAAY,IAAIC,KAAM,CACtBC,MAAO,IAAIC,KAAM,CACbC,OAAQ,CAAC,GAAK,GACdC,IAAK,kEAIbT,EAAcU,SAASN,GAEvB,IAAIO,EAAe,IAAIC,KAAa,CAChCC,SAAU,CAACb,KAGT0B,EAAkB,IAAIX,KAAY,CACpCnrB,OAAQ+qB,IAGZnrB,EAAImsB,YAAYlC,GAChBjqB,EAAIosB,SAASF,GACbhC,EAAiBgC,MAGtB,CAAC/B,IAGA,sBAAKluB,UAAU,kBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,YAAY4B,MAAO,CAAE8L,OAAQ,QAASD,MAAO,SAA5D,SACI,qBAAKzN,UAAU,cAAcrD,GAAG,cAAcqF,IAAKssB,QAG3D,sBAAKtuB,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOowB,IAAI,eAAX,uBACA,uBAAOpwB,UAAU,eAAerD,GAAG,eAAeyB,MAAOuF,EAAShB,UAAW3F,aAAc8wB,EAAaA,EAAWnqB,SAAShB,UAAY,GAAIzF,UAAQ,OAExJ,sBAAK8C,UAAU,WAAf,UACI,uBAAOowB,IAAI,cAAX,sBACA,uBAAOpwB,UAAU,eAAerD,GAAG,cAAcyB,MAAOuF,EAASf,SAAU5F,aAAc8wB,EAAaA,EAAWnqB,SAASf,SAAW,GAAI1F,UAAQ,UAGzJ,sBAAK8C,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOowB,IAAI,iBAAX,oBACA,uBAAOpwB,UAAU,eAAerD,GAAG,iBAAiByB,MAAOsD,EAAQX,OAAQ/D,aAAc8wB,EAAaA,EAAW/sB,OAAS,GAAI7D,UAAQ,OAE1I,sBAAK8C,UAAU,WAAf,UACI,uBAAOowB,IAAI,eAAX,kBACA,uBAAOpwB,UAAU,eAAerD,GAAG,eAAeyB,MAAOsD,EAAQZ,KAAM9D,aAAc8wB,EAAaA,EAAWhtB,KAAO,GAAI5D,UAAQ,OAEpI,sBAAK8C,UAAU,WAAf,UACI,uBAAOowB,IAAI,kBAAX,qBACA,uBAAOpwB,UAAU,eAAerD,GAAG,kBAAkByB,MAAOsD,EAAQV,QAAShE,aAAc8wB,EAAaA,EAAW9sB,QAAU,GAAI9D,UAAQ,cCsC9ImzB,OAxMf,SAA0BlzB,GAAQ,IAAD,EAELC,mBAAS,CAC7BkzB,cAAe,CACX3zB,IAAK,EACLnC,KAAM,IAEVA,KAAM,GACNkI,YAAa,GACb6tB,qBAAsB,EACtB7uB,QAAS,CACLZ,KAAM,GACNC,OAAQ,GACRC,QAAS,GACT2C,SAAU,CACNf,SAAU,EACVD,UAAW,MAhBM,mBAEtB7D,EAFsB,KAEhBC,EAFgB,OAoBC3B,mBAAS,IApBV,mBAoBtBsE,EApBsB,KAoBb0sB,EApBa,OAqBDhxB,mBAAS,IArBR,mBAqBtBC,EArBsB,KAqBdC,EArBc,OAsBeF,mBAAS,IAtBxB,mBAsBtBozB,EAtBsB,KAsBNC,EAtBM,OAuBiBrzB,mBAAS,IAvB1B,mBAuBtBszB,EAvBsB,KAuBLC,EAvBK,KAwBrBzxB,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACZ,sBAAAjC,EAAA,sEACUzC,EACDqK,IAAI,mCACJrD,MAAK,SAACF,GACH6wB,EAAkB7wB,EAAIzF,SACvBsH,OAAM,eALjB,4CADY,uBAAC,WAAD,wBAQZimB,KACD,IAEH,IAAMtoB,EAAW,SAACC,EAAOjB,GACrBW,EAAQ,2BACDD,GADA,kBAEFO,EAAQjB,KAGPf,EAAOgC,IAAQ/B,EAAU,2BACxBD,GADuB,kBAEzBgC,EAAQ,SAmDX8B,EAAkB,WACpB,IAAIhH,EAAOkH,IACXvI,EACK6G,KAAK,iBAAkBxF,GACvB2F,MAAK,WACFf,EAAQ,IACR5B,EAAM4lB,YACN5lB,EAAMiM,SACNlK,EAAS,+BAAgC,CAAEa,WAAY,eAE1D0B,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAInDsB,EAAc,WAChB,IAAIlH,EAAO,GAKX,OAJAA,EAAKK,KAAOsE,EAAKtE,KACjBL,EAAKuI,YAAc5D,EAAK4D,YACxBvI,EAAKuH,QAAUA,EACfvH,EAAKy2B,OAASF,EAAgB3sB,KAAI,SAAA8sB,GAAQ,MAAO,CAAE,GAAMA,EAAGl0B,GAAI,KAAO,GAAP,OAAWk0B,EAAGnwB,UAAd,YAA2BmwB,EAAGlwB,cACvFxG,GAGX,OACI,eAAC6M,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgC4pB,gBAAgB,YAAY3pB,UAAQ,EAAtG,UACI,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,gCAIJ,cAACqK,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,qBAGA,cAAC,KAAD,CACInB,GAAG,kCACHqmB,SAAU,SAACC,GAAD,gBAAeA,EAAOviB,UAAtB,YAAmCuiB,EAAOtiB,WACpDowB,UAAQ,EACR9zB,SAAU0zB,EACVz0B,QAASs0B,EACTzzB,YAAY,mBACZmmB,SAAUwN,EACVM,YAAa,SAAC/N,EAAD,EAAuBjb,GAAvB,IAAWipB,EAAX,EAAWA,SAAX,OACT,cAAC,KAAD,CAEIA,SAAUA,EACVhO,OAAQA,EAHZ,mBAIQA,EAAOviB,UAJf,YAI4BuiB,EAAOtiB,WAH1BqH,SAQrB,eAACpK,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLjB,YAAY,OACZkB,YAAaZ,EAAO7C,KACpByC,SAAU,SAAArD,GAAC,OAAIwF,EAAS,OAAQxF,EAAEuE,OAAOC,UAE7C,cAACR,EAAA,EAAKG,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SACKX,EAAO7C,UAIhB,eAACoD,EAAA,EAAKC,MAAN,CAAYgI,UAAU,sBAAtB,UACI,cAACjI,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLjB,YAAY,cACZkB,YAAaZ,EAAOqF,YACpBzF,SAAU,SAAArD,GAAC,OAAIwF,EAAS,cAAexF,EAAEuE,OAAOC,UAEpD,cAACR,EAAA,EAAKG,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SACKX,EAAOqF,iBAIhB,eAAC9E,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,qCACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWkB,EAAS,uBAAwBlB,EAAMC,OAAOC,QACnEpB,aAAc,EACduL,IAAK,EACLwE,IAAK,IACLoW,KAAM,OAId,cAAC,GAAD,CAAKlmB,SAAU,SAACyE,GAAD,OAAa0sB,EAAW1sB,MAEvC,cAACzB,EAAA,EAAD,CAAQC,QAAQ,UAAU8F,QAhHrB,SAAApM,GACjBA,EAAE6F,iBACF7F,EAAE8F,kBACF,IAAMwxB,EAjCO,WAAO,IACZ12B,EAAsBsE,EAAtBtE,KAAMkI,EAAgB5D,EAAhB4D,YACRwuB,EAAY,GAQlB,OANK12B,GAAiB,KAATA,EACJA,EAAK8B,OAAS,KAAI40B,EAAU12B,KAAO,qBADlB02B,EAAU12B,KAAO,wBAGtCkI,GAA+B,KAAhBA,EACXA,EAAYpG,OAAS,MAAK40B,EAAUxuB,YAAc,4BADnBwuB,EAAUxuB,YAAc,+BAGzDwuB,EAuBWC,GAEdzY,OAAOC,KAAKuY,GAAW50B,OAAS,EAChCgB,EAAU4zB,IAvBM,WAAO,IACnBpwB,EAA0BY,EAA1BZ,KAAMC,EAAoBW,EAApBX,OAAQC,EAAYU,EAAZV,QAGtB,SAAKF,GAAiB,KAATA,OAERC,GAAqB,KAAXA,OAEVC,GAAuB,KAAZA,GAiBPowB,GACDlyB,EAAS,8BAA+B,CAAEa,WAAY,YAZpD2wB,GAA8C,IAA3BA,EAAgBp0B,OAgBrC6E,IAFAjC,EAAS,gCAAiC,CAAEa,WAAY,aAqGpD,yBAGR,cAACiH,GAAA,EAAMmC,OAAP,SCLGkoB,OA9Lf,SAA2Bl0B,GAAQ,IAAD,EAENC,mBAAS,CAC7B5C,KAAM2C,EAAMugB,SAASljB,MAAQ,GAC7BkI,YAAavF,EAAMugB,SAAShb,aAAe,GAC3C6tB,qBAAsBpzB,EAAMugB,SAAS6S,sBAAwB,GAC7D7uB,QAASvE,EAAMugB,SAAShc,UANE,mBAEvB5C,EAFuB,KAEjBC,EAFiB,OAQF3B,mBAAS,IARP,mBAQvBC,EARuB,KAQfC,EARe,OASAF,mBAAS,IATT,mBASvBsE,EATuB,KASd0sB,EATc,OAUchxB,mBAAS,IAVvB,gCAWEA,sBAXF,mBAWvB8lB,EAXuB,KAWboO,EAXa,KAYtBpyB,EAAaC,sBAAbD,SAyBFE,EAAW,SAACC,EAAOjB,GACrBW,EAAQ,2BACDD,GADA,kBAEFO,EAAQjB,KAGPf,EAAOgC,IAAQ/B,EAAU,2BACxBD,GADuB,kBAEzBgC,EAAQ,SAmDXkyB,EAAiB,WACnB,IAAIp3B,EAAOkH,IACXvI,EACKoN,IAAI,iBAAmB/I,EAAMugB,SAAS/gB,GAAIxC,GAC1C2F,MAAK,WACFf,EAAQ,IACRG,EAAS,iCAAkC,CAAEa,WAAY,YACzD5C,EAAM4lB,YACN5lB,EAAMiM,YAET3H,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAInDsB,EAAc,WAChB,IAAIlH,EAAO,GAOX,OANAA,EAAKwC,GAAKQ,EAAMugB,SAAS/gB,GACzBxC,EAAKm2B,cAAgBpN,EACrB/oB,EAAKK,KAAOsE,EAAKtE,KACjBL,EAAKuI,YAAc5D,EAAK4D,YACxBvI,EAAKo2B,qBAAuBzxB,EAAKyxB,qBACjCp2B,EAAKuH,QAAUA,EACRvH,GAGX,OACI,eAAC6M,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgC4pB,gBAAgB,YAAY3pB,UAAQ,EAACqqB,OAlGvF,WAChBzyB,EAAQ,2BACDD,GADA,IAEHtE,KAAM2C,EAAMugB,SAASljB,MAAQ,GAC7BkI,YAAavF,EAAMugB,SAAShb,aAAe,GAC3C6tB,qBAAsBpzB,EAAMugB,SAAS6S,sBAAwB,GAC7D7uB,QAASvE,EAAMugB,SAAShc,WAE5B0sB,EAAWjxB,EAAMugB,SAAShc,SAC1B4vB,EAAY,KAyFZ,UACI,cAACtqB,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,6BAIJ,cAACqK,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,6BAGA,cAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAhC,WACOzkB,EAAMugB,SAASkT,QAAUzzB,EAAMugB,SAASkT,OAAO7sB,KAAI,SAAC8sB,GACnD,OAAO,wBAAQzyB,MAAOyyB,EAAGl0B,GAAlB,SAAuBk0B,EAAGr2B,eAI7C,eAACoD,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLhB,aAAcG,EAAMugB,SAASljB,KAC7ByD,YAAaZ,EAAO7C,KACpByC,SAAU,SAAArD,GAAC,OAAIwF,EAAS,OAAQxF,EAAEuE,OAAOC,UAE7C,cAACR,EAAA,EAAKG,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SACKX,EAAO7C,UAIhB,eAACoD,EAAA,EAAKC,MAAN,CAAYgI,UAAU,sBAAtB,UACI,cAACjI,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLhB,aAAcG,EAAMugB,SAAShb,YAC7BzE,YAAaZ,EAAOqF,YACpBzF,SAAU,SAAArD,GAAC,OAAIwF,EAAS,cAAexF,EAAEuE,OAAOC,UAEpD,cAACR,EAAA,EAAKG,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SACKX,EAAOqF,iBAIhB,eAAC9E,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,qCACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWkB,EAAS,uBAAwBlB,EAAMC,OAAOC,QACnEpB,aAAcG,EAAMugB,SAAS6S,qBAC7BhoB,IAAK,EACLwE,IAAK,IACLoW,KAAM,SAId,cAAC,GAAD,CAAKlmB,SAAU,SAACyE,GAAD,OAAa0sB,EAAW1sB,IAAUosB,WAAY3wB,EAAMugB,SAAShc,UAE5E,cAACzB,EAAA,EAAD,CAAQC,QAAQ,UAAU8F,QAtGrB,SAAApM,GACjBA,EAAE6F,iBACF7F,EAAE8F,kBACF,IAAMwxB,EAjCO,WAAO,IACZ12B,EAAsBsE,EAAtBtE,KAAMkI,EAAgB5D,EAAhB4D,YACRwuB,EAAY,GAQlB,OANK12B,GAAiB,KAATA,EACJA,EAAK8B,OAAS,KAAI40B,EAAU12B,KAAO,qBADlB02B,EAAU12B,KAAO,wBAGtCkI,GAA+B,KAAhBA,EACXA,EAAYpG,OAAS,MAAK40B,EAAUxuB,YAAc,4BADnBwuB,EAAUxuB,YAAc,+BAGzDwuB,EAuBWC,GAEdzY,OAAOC,KAAKuY,GAAW50B,OAAS,EAChCgB,EAAU4zB,IAvBM,WAAO,IACnBpwB,EAA0BY,EAA1BZ,KAAMC,EAAoBW,EAApBX,OAAQC,EAAYU,EAAZV,QAGtB,SAAKF,GAAiB,KAATA,OAERC,GAAqB,KAAXA,OAEVC,GAAuB,KAAZA,GAiBPowB,GACDlyB,EAAS,8BAA+B,CAAEa,WAAY,YAItDwxB,KAyFI,yBAGR,cAACvqB,GAAA,EAAMmC,OAAP,SCnGGsoB,OAnFf,SAAuBt0B,GAAQ,IAAD,EACAC,oBAAS,GADT,mBACrBmhB,EADqB,KACbC,EADa,OAEIphB,mBAAS,IAFb,mBAErB8lB,EAFqB,KAEXoO,EAFW,OAIQl0B,mBAAS,IAJjB,mBAIrBoX,EAJqB,KAITC,EAJS,OAKYrX,oBAAS,GALrB,mBAKrBoqB,EALqB,KAKPC,EALO,OAMcrqB,oBAAS,GANvB,mBAMrBs0B,EANqB,KAMNC,EANM,OAOkBv0B,oBAAS,GAP3B,mBAOrBw0B,EAPqB,KAOJC,EAPI,KAQpB3yB,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAI,sBAAsB1B,OAAM,eAD7D,OACQvH,EADR,OAEEua,EAAgBva,EAAWA,EAASC,KAAO,IAF7C,4CADc,uBAAC,WAAD,wBAKdutB,KACC,CAACnJ,IAEJ,IAAMoJ,EAAc,WAClBnJ,GAAWD,IAoBb,OACE,eAAC/W,GAAA,EAAD,CAAW5F,MAAO,CAAEoU,UAAW,QAA/B,UACE,cAACzQ,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACR0B,MAAO,CAAEwb,MAAO,QAASsG,OAAQ,QACjC1d,QAAS,kBAAMyhB,GAAgB,IAHjC,gCAQF,eAAC/f,GAAA,EAAD,CAAOG,SAAO,EAACF,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,8CACA,8CAGJ,gCACG4M,EAAWzQ,KAAI,SAAC2Z,GAAD,OACd,qBAAI1X,QAAS,WAxBrBsrB,EAwB0C5T,IAAlC,UACE,6BAAKA,EAASljB,OACd,6BAAKkjB,EAAShb,cACd,+BACE,cAACzC,EAAA,EAAD,CAAQ+F,QAAS,kBAAM2rB,GAAiB,IAAxC,kBACA,cAAC1xB,EAAA,EAAD,CACEC,QAAQ,SACR8F,QAAS,kBAAM6rB,GAAmB,IAFpC,yBAL8CnU,EAAS/gB,YAgBjE,cAAC,GAAD,CAAkB2Q,KAAMka,EAAcpe,OAAQ,kBAAMqe,GAAgB,IAAQ1E,UAAW4E,IACvF,cAAC,GAAD,CAAmBra,KAAMokB,EAAehU,SAAUwF,EAAU9Z,OAAQ,kBAAMuoB,GAAiB,IAAQ5O,UAAW4E,IAC9G,cAAC,GAAD,CAAazP,MAAO,UAAYgL,EAAS1oB,KAAM8S,KAAMskB,EAAiBxoB,OAAQ,kBAAMyoB,GAAmB,IAAQjE,SAxD5F,WACrB90B,EACG4T,OAAO,iBAAmBwW,EAASvmB,IACnCmD,MAAK,WACJ6nB,IACAkK,GAAmB,GACnB3yB,EAAS,iCAAkC,CAAEa,WAAY,eAE1D0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,oBC/BtC+xB,GAPa,SAAA30B,GACxB,OACI,yBCSO40B,GATM,SAAA50B,GACjB,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,oBCCG60B,OAPf,WACI,OACI,yBCiCOC,GAjCK,SAAC,GAMd,IALL9pB,EAKI,EALJA,SACAnC,EAII,EAJJA,QACAksB,EAGI,EAHJA,UAEAhL,GACI,EAFJiL,aAEI,EADJjL,aAEA,OACE,qBAAIlhB,QAASA,EAAb,UACE,6BAAKmC,EAAS3N,OACd,6BAAK2N,EAASC,OACd,6BAAKD,EAASwI,UACd,6BACE,iCACE,cAAC1Q,EAAA,EAAD,CAAQ+F,QAASksB,EAAjB,kBACA,cAACjyB,EAAA,EAAD,CAAQC,QAAQ,SAAS8F,QAASkhB,EAAlC,oBAGA,eAACjnB,EAAA,EAAD,CACEC,QAAQ,OACR8F,QAAS,kBACPosB,OAAOC,KAAP,6DAAkElqB,EAASxL,GAA3E,YAAyF,WAH7F,UAMG,IANH,oBAVqBwL,EAASxL,KCMzB21B,OAff,SAA+Bn1B,GAE3B,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,kBACNuC,YAAa,yBACblB,UAAW,EACXC,UAAW,GACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP42B,OAff,SAA+Bp1B,GAE3B,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,kBACNuC,YAAa,yBACblB,UAAW,EACXC,UAAW,GACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP62B,OAff,SAAkCr1B,GAE9B,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,qBACNuC,YAAa,4BACblB,UAAW,EACXC,UAAW,IACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP82B,OAff,SAA8Bt1B,GAE1B,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,iBACNuC,YAAa,wBACblB,UAAW,EACXC,UAAW,IACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,MCKP+2B,OAff,SAAkCv1B,GAE9B,OACI,cAAC,EAAD,2BACQA,GADR,IAEI3C,KAAM,mBACNuC,YAAa,sBACblB,UAAW,EACXC,UAAW,IACXmB,SAAU,SAACiB,GAAYf,EAAMF,SAASiB,IACtCvC,UAAU,M,OC6OPg3B,OA5Of,SAA0Bx1B,GAAQ,IAAD,EACLC,mBAAS,IADJ,mBACtB0B,EADsB,KAChBC,EADgB,OAgBiB3B,mBAAS,IAhB1B,mBAgBtBszB,EAhBsB,KAgBLC,EAhBK,OAiBKvzB,mBAAS,IAjBd,mBAiBtB4kB,EAjBsB,KAiBXC,EAjBW,OAkBG7kB,mBAAS,IAlBZ,mBAkBtB+jB,EAlBsB,KAkBZC,EAlBY,OAmBahkB,mBAAS,IAnBtB,mBAmBtBw1B,EAnBsB,KAmBPC,EAnBO,OAoBGz1B,mBAAS,IApBZ,mBAoBtBikB,EApBsB,KAoBZC,EApBY,KAqBrBpiB,EAAaC,sBAAbD,SAEFE,EAAW,SAACC,EAAOjB,GACrBW,EAAQ,2BACDD,GADA,kBAEFO,EAAQjB,MAgBjB,SAASqS,IACL3X,EAAIqK,IAAJ,kBACKrD,MAAK,SAACF,GACHqiB,EAAariB,EAAIzF,SAClBsH,OAAM,eARjBjE,qBAAU,WACNiT,MACD,IA+BH,IAwBMtP,EAAkB,WACpB,IAAIhH,EAAI,2BACD2E,GADC,IAEJg0B,oBAAqBpC,IAGpB5xB,EAAI,kBAAyBA,EAAI,kBAAyBA,EAAI,kBAAyBA,EAAI,eAIhGhG,EACK6G,KAAK,iBAAkBxF,GACvB2F,MAAK,WACFf,EAAQ,IACR5B,EAAM4lB,YACN5lB,EAAMiM,SACNlK,EAAS,+BAAgC,CAAEa,WAAY,eAE1D0B,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,aAZjDb,EAAS,8BAA+B,CAAEa,WAAY,WAgB9D,OACI,eAACiH,GAAA,EAAD,2BAAW7J,GAAX,IAAkBgK,UAAQ,EAACqqB,OAhDX,WAChBzyB,EAAQ,2BACDD,GADA,IAEHiuB,eAAgB,WAChBD,YAAa,EACb/E,OAAQ,EACR+K,oBAAqB,MAEzBriB,IA7BA3X,EAAIqK,IAAJ,wBACKrD,MAAK,SAACF,GACHwhB,EAAYxhB,EAAIzF,MAChBiF,EAAS,mBAAoBQ,EAAIzF,KAAK,GAAGK,MAAQ,OAClDiH,OAAM,eACb3I,EAAIqK,IAAJ,wBACKrD,MAAK,SAACF,GACH0hB,EAAY1hB,EAAIzF,MAChBiF,EAAS,mBAAoBQ,EAAIzF,KAAK,GAAGK,MAAQ,OAClDiH,OAAM,eAIb3I,EAAIqK,IAAJ,uBACKrD,MAAK,SAACF,GACHizB,EAAiBjzB,EAAIzF,MACrBiF,EAAS,eAAgBQ,EAAIzF,KAAK,GAAGK,MAAQ,OAC9CiH,OAAM,eAebkvB,EAAmB,KAqCnB,UACI,cAAC3pB,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,iCAIJ,cAACN,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,CAAM4B,SAzCG,SAACtB,GAClBA,EAAMuB,iBACNvB,EAAMwB,kBAxDCnD,EAAS,aAAiBuC,EAAI,OAC9BvC,EAAS,aAAiBuC,EAAI,OAC9BvC,EAAS,gBAAoBuC,EAAI,UACjCvC,EAAS,YAAgBuC,EAAI,cAC7BvC,EAAS,gBAAoBuC,EAAI,iBAAqB,IAuDzDqC,KAoCI,UACI,eAACoE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC,GAAD,CAAuBzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,OAAQlB,EAAMC,OAAOC,YAE9E,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC,GAAD,CAAuBzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,OAAQlB,EAAMC,OAAOC,eAGlF,cAAC,GAAD,CAA0BnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,UAAWlB,EAAMC,OAAOC,UAChF,eAACmH,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC5H,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,mBAAoBlB,EAAMC,OAAOC,QAAQpB,aAAc8B,EAAI,iBAA1H,UACI,wBAAQV,MAAM,GAAd,uBACC+iB,EAASpd,KAAI,SAAC8d,GACX,OAAO,wBAAQzjB,MAAOyjB,EAAGrnB,KAAlB,SAAyBqnB,EAAGrnB,kBAKnD,cAACgL,EAAA,EAAD,UACI,eAAC5H,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,mBAAoBlB,EAAMC,OAAOC,QAAQpB,aAAc8B,EAAI,iBAA1H,UACI,wBAAQV,MAAM,GAAd,uBACCijB,EAAStd,KAAI,SAAC+d,GACX,OAAO,wBAAQ1jB,MAAO0jB,EAAGtnB,KAAlB,SAAyBsnB,EAAGtnB,qBAMvD,cAAC,GAAD,CAAsByC,SAAU,SAACiB,GAAD,OAAWkB,EAAS,cAAelB,EAAMC,OAAOC,UAChF,eAACmH,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACI,cAACjI,EAAA,EAAKE,MAAN,gCACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAAS3I,SAAU,SAACiB,GAAD,OAAWkB,EAAS,iBAAkBlB,EAAMC,OAAOC,QAAvF,UACI,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,cAAd,kCAIZ,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACI,cAACjI,EAAA,EAAKE,MAAN,2BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWkB,EAAS,cAAelB,EAAMC,OAAOC,QAC1DpB,aAAc,EACdmmB,KAAK,MACL5a,IAAI,IACJwE,IAAI,YAIhB,cAACvH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9H,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,qBACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWkB,EAAS,SAAUlB,EAAMC,OAAOC,QACrDpB,aAAc,EACduL,IAAK,EACLwE,IAAK,IACLoW,KAAM,YAKtB,eAACvlB,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,6BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,mBAAoBlB,EAAMC,OAAOC,QAAQA,MAAOU,EAAI,iBAAnH,UACI,wBAAQV,MAAM,GAAd,wBACCw0B,EAAc7uB,KAAI,SAAC8d,GAChB,OAAO,wBAAQzjB,MAAOyjB,EAAGrnB,KAAlB,SAAyBqnB,EAAGrnB,gBAI/C,cAAC,GAAD,CAA0ByC,SAAU,SAACiB,GAAD,OAAWkB,EAAS,kBAAmBlB,EAAMC,OAAOC,UACxF,eAACR,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,mCACA,cAAC,KAAD,CACInB,GAAG,2BACHqmB,SAAU,SAACC,GAAD,gBAAeA,EAAO7a,KAAtB,eAAiC6a,EAAOzoB,OAClDu2B,UAAQ,EACR9zB,SAAU0zB,EACVz0B,QAAS8lB,EACTjlB,YAAY,wBACZmmB,SAAUwN,EACVM,YAAa,SAAC/N,EAAD,EAAuBjb,GAAvB,IAAWipB,EAAX,EAAWA,SAAX,OACT,cAAC,KAAD,CAEIA,SAAUA,EACVhO,OAAQA,EAHZ,mBAIQA,EAAOzoB,OAHNwN,SAQrB,cAAC/H,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,8BC2BL+0B,OAjQf,SAA2B51B,GAAQ,IAAD,IACNC,qBADM,mBACvBgL,EADuB,KACjB4qB,EADiB,OAEN51B,qBAFM,mBAEvB5C,EAFuB,KAEjBy4B,EAFiB,OAGA71B,qBAHA,mBAGvBuT,EAHuB,KAGduiB,EAHc,OAIkB91B,qBAJlB,mBAIvB+1B,EAJuB,KAILC,EAJK,OAKkBh2B,qBALlB,mBAKvBi2B,EALuB,KAKLC,EALK,OAMQl2B,qBANR,mBAMvByvB,EANuB,KAMV0G,EANU,OAOcn2B,qBAPd,mBAOvB2vB,EAPuB,KAOPyG,EAPO,OAQQp2B,qBARR,mBAQvB0vB,EARuB,KAQV2G,EARU,OASFr2B,qBATE,mBASvB2qB,EATuB,KASfC,EATe,OAUkB5qB,qBAVlB,mBAUvBs2B,EAVuB,KAULC,GAVK,QAWgBv2B,qBAXhB,qBAWvB4vB,GAXuB,MAWN4G,GAXM,SAYwBx2B,qBAZxB,qBAYvB01B,GAZuB,MAYFe,GAZE,SAcgBz2B,mBAAS,IAdzB,qBAcvBszB,GAduB,MAcNC,GAdM,SAeIvzB,mBAAS,IAfb,qBAevB4kB,GAfuB,MAeZC,GAfY,SAgBE7kB,mBAAS,IAhBX,qBAgBvB+jB,GAhBuB,MAgBbC,GAhBa,SAiBEhkB,mBAAS,IAjBX,qBAiBvBikB,GAjBuB,MAiBbC,GAjBa,SAkBYlkB,mBAAS,IAlBrB,qBAkBvBw1B,GAlBuB,MAkBRC,GAlBQ,MAmBtB3zB,GAAaC,sBAAbD,SAER1B,qBAAU,WA4BN1E,EAAIqK,IAAJ,kBACKrD,MAAK,SAACF,GACHqiB,GAAariB,EAAIzF,SAClBsH,OAAM,eAIb3I,EAAIqK,IAAJ,wBACKrD,MAAK,SAACF,GACHwhB,GAAYxhB,EAAIzF,SACjBsH,OAAM,eACb3I,EAAIqK,IAAJ,wBACKrD,MAAK,SAACF,GACH0hB,GAAY1hB,EAAIzF,SACjBsH,OAAM,eAIb3I,EAAIqK,IAAJ,uBACKrD,MAAK,SAACF,GACHizB,GAAiBjzB,EAAIzF,SA5C7Bw2B,GAAmBxzB,EAAMgL,SAAN,aAAiC,IACpD8qB,EAAQ91B,EAAMgL,SAAS3N,MACvBw4B,EAAQ71B,EAAMgL,SAASC,MACvB8qB,EAAW/1B,EAAMgL,SAASwI,SAC1ByiB,EAAoBj2B,EAAMgL,SAAS4Y,aAAe5jB,EAAMgL,SAAS4Y,aAAavmB,KAAO,IACrF84B,EAAoBn2B,EAAMgL,SAAS8Y,aAAe9jB,EAAMgL,SAAS8Y,aAAazmB,KAAO,IACrF+4B,EAAep2B,EAAMgL,SAAS0kB,aAC9B2G,EAAkBr2B,EAAMgL,SAAS4kB,gBACjC0G,EAAet2B,EAAMgL,SAAS2kB,aAC9B9E,EAAU7qB,EAAMgL,SAAS4f,QACzB4L,GAAoBx2B,EAAMgL,SAAS8kB,aAAe9vB,EAAMgL,SAAS8kB,aAAazyB,KAAO,IACrFo5B,GAAmBz2B,EAAMgL,SAAS6kB,iBAClC6G,GAAuB12B,EAAMgL,SAAS2qB,uBACvC,CAAC31B,EAAMgL,WAmCV,IAaMopB,GAAiB,WACnB,IAAIp3B,EAAO,CACPiO,KAAMA,EACN5N,KAAMA,EACNmW,QAASA,EACTwiB,iBAAkBA,EAClBE,iBAAkBA,EAClBxG,YAAaA,EACbE,eAAgBA,EAChBD,YAAaA,EACb/E,OAAQA,EACR2L,iBAAkBA,EAClB1G,gBAAiBA,GACjB8F,oBAAqBpC,IAEzB53B,EACKoN,IAAI,iBAAmB/I,EAAMgL,SAASxL,GAAIxC,GAC1C2F,MAAK,WACF3C,EAAM4lB,YACN5lB,EAAMiM,SACNlK,GAAS,iCAAkC,CAAEa,WAAY,eAE5D0B,OAAM,SAACxH,GACJiF,GAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAKzD,OACI,eAACiH,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAACqqB,OA1C3D,WACXr0B,EAAMugB,UAyCX,UACI,cAAC1W,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,kBACUQ,EAAMgL,SAAS3N,UAG7B,cAACwM,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,CAAM4B,SA7CG,SAACtB,GAClBA,EAAMuB,iBACNvB,EAAMwB,kBAtCCnD,EAAS,aAAiB/B,IAC1B+B,EAAS,aAAiB6L,IAC1B7L,EAAS,gBAAoBoU,IAC7BpU,EAAS,YAAgBswB,IACzBtwB,EAAS,gBAAoBywB,IAAiB,IAqCjDuE,MAwCI,UACI,eAAChsB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC,GAAD,CACIzI,SAAU,SAACiB,GAAD,OAAW+0B,EAAQ/0B,EAAMC,OAAOC,QAC1CpB,aAAgBG,EAAMgL,SAAS3N,KAAO2C,EAAMgL,SAAS3N,KAAO,GAAI4D,MAAO5D,MAE/E,cAACgL,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC,GAAD,CACIzI,SAAU,SAACiB,GAAD,OAAW80B,EAAQ90B,EAAMC,OAAOC,QAC1CpB,aAAgBG,EAAMgL,SAASC,KAAOjL,EAAMgL,SAASC,KAAO,GAAIhK,MAAOgK,SAGnF,cAAC,GAAD,CACInL,SAAU,SAACiB,GAAD,OAAWg1B,EAAWh1B,EAAMC,OAAOC,QAC7CpB,aAAgBG,EAAMgL,SAASwI,QAAUxT,EAAMgL,SAASwI,QAAU,KACtE,eAACpL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC5H,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAD,OAAWk1B,EAAoBl1B,EAAMC,OAAOC,QAAQpB,aAAgBG,EAAMgL,UAAchL,EAAMgL,SAAS4Y,aAAe5jB,EAAMgL,SAAS4Y,aAAavmB,KAAO,GAAI4D,MAAO+0B,EAA/M,UACI,wBAAQ/0B,MAAM,GAAd,wBACC+iB,GAASpd,KAAI,SAAC8d,GACX,OAAO,wBAAoBzjB,MAAOyjB,EAAGrnB,KAA9B,SAAqCqnB,EAAGrnB,MAA3BqnB,EAAGllB,eAKvC,cAAC6I,EAAA,EAAD,UACI,eAAC5H,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAD,OAAWo1B,EAAoBp1B,EAAMC,OAAOC,QAAQpB,aAAgBG,EAAMgL,SAAS8Y,aAAe9jB,EAAMgL,SAAS8Y,aAAazmB,KAAO,GAAI4D,MAAOi1B,EAA3L,UACI,wBAAQj1B,MAAM,GAAd,wBACCijB,GAAStd,KAAI,SAAC+d,GACX,OAAO,wBAAoB1jB,MAAO0jB,EAAGtnB,KAA9B,SAAqCsnB,EAAGtnB,MAA3BsnB,EAAGnlB,kBAM3C,cAAC,GAAD,CACIM,SAAU,SAACiB,GAAD,OAAWq1B,EAAer1B,EAAMC,OAAOC,QACjDpB,aAAgBG,EAAMgL,SAAS0kB,YAAc1vB,EAAMgL,SAAS0kB,YAAc,GAAIzuB,MAAOyuB,IACzF,eAACtnB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACI,cAACjI,EAAA,EAAKE,MAAN,8BACA,eAACF,EAAA,EAAKG,QAAN,CACI6H,GAAG,SACH3I,SAAU,SAACiB,GAAD,OAAWs1B,EAAkBt1B,EAAMC,OAAOC,QACpDpB,aAAcG,EAAMgL,SAAS4kB,eAC7B3uB,MAAO2uB,EAJX,UAMI,wBAAQ3uB,MAAM,WAAd,sBACA,wBAAQA,MAAM,cAAd,kCAIZ,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9H,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACI,cAACjI,EAAA,EAAKE,MAAN,2BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWu1B,EAAev1B,EAAMC,OAAOC,QACjD+kB,KAAK,MACL5a,IAAI,IACJwE,IAAI,KACJ/P,aAAcG,EAAMgL,SAAS2kB,YAC7B1uB,MAAO0uB,SAInB,cAACtnB,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC9H,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,qBACA,cAACF,EAAA,EAAKG,SAAN,GACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAW8pB,EAAU9pB,EAAMC,OAAOC,QAC5CpB,aAAcG,EAAMgL,SAAS4f,OAC7Bxf,IAAK,EACLwE,IAAK,IACLoW,KAAM,GANV,6BAOkBhmB,EAAMgL,SAAS2kB,aAPjC,sBAQW/E,GARX,YAaZ,eAACnqB,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,6BACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAASgc,QAAM,EAAC3kB,SAAU,SAACiB,GAAD,OAAWy1B,GAAoBz1B,EAAMC,OAAOC,QAAQpB,aAAgBG,EAAMgL,SAAS8kB,aAAe9vB,EAAMgL,SAAS8kB,aAAe,GAAI7uB,MAAOs1B,EAAtL,UACI,wBAAQt1B,MAAM,GAAd,wBACCw0B,GAAc7uB,KAAI,SAAC8d,GAChB,OAAO,wBAAoBzjB,MAAOyjB,EAAGrnB,KAA9B,SAAqCqnB,EAAGrnB,MAA3BqnB,EAAGllB,aAInC,cAAC,GAAD,CACIM,SAAU,SAACiB,GAAD,OAAW01B,GAAmB11B,EAAMC,OAAOC,QACrDpB,aAAcG,EAAMgL,SAAS6kB,kBACjC,eAACpvB,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACGg1B,IAAuBA,GAAoB/uB,KAAI,SAAC8d,GAC/C,MAAM,IAAN,OAAWA,EAAGrnB,KAAd,WAGR,eAACoD,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,mCACA,cAAC,KAAD,CACInB,GAAG,2BACHqmB,SAAU,SAACC,GAAD,gBAAeA,EAAO7a,KAAtB,eAAiC6a,EAAOzoB,OAClDu2B,UAAQ,EACR9zB,SAAU0zB,GACVz0B,QAAS8lB,GACTjlB,YAAY,wBACZmmB,SAAUwN,GACVM,YAAa,SAAC/N,EAAD,EAAuBjb,GAAvB,IAAWipB,EAAX,EAAWA,SAAX,OACT,cAAC,KAAD,CAEIA,SAAUA,EACVhO,OAAQA,EAHZ,mBAIQA,EAAOzoB,OAHNwN,SAQrB,cAAC/H,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,yBAGR,cAACgJ,GAAA,EAAMmC,OAAP,SCtNG2qB,GA5Cc,SAAC32B,GAAW,IAAD,EACZC,mBAAS,IADG,mBAC7BY,EAD6B,KACvBkc,EADuB,KAE5Bhb,EAAaC,sBAAbD,SAgBR,OACI,eAAC8H,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACI,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,iCAKJ,cAACqK,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,CAAM4B,SAvBG,SAAC5F,GAClBA,EAAE6F,iBACF7F,EAAE8F,kBAEF5G,EAAI6G,KAAJ,8BAAgC3B,IAC3B8B,MAAK,WACFZ,EAAS,mCAAoC,CAAEa,WAAY,YAC3D5C,EAAMiM,YAET3H,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAa7C,UACI,eAACnC,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,4BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLf,SAAU,SAACiB,GAAD,OAAWgc,EAAQhc,EAAMC,OAAOC,QAC1CzC,UAAQ,OAGhB,cAACsE,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,qBACA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,8BCOL2qB,GA5Cc,SAAC52B,GAAW,IAAD,EACZC,mBAAS,IADG,mBAC7B0B,EAD6B,KACvBC,EADuB,KAE5BG,EAAaC,sBAAbD,SAgBR,OACI,eAAC8H,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACI,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,iCAKJ,cAACqK,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,CAAM4B,SAvBG,SAAC5F,GAClBA,EAAE6F,iBACF7F,EAAE8F,kBAEF5G,EAAI6G,KAAJ,8BAAgCb,IAC3BgB,MAAK,WACFZ,EAAS,mCAAoC,CAAEa,WAAY,YAC3D5C,EAAMiM,YAET3H,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAa7C,UACI,eAACnC,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,4BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLf,SAAU,SAACiB,GAAD,OAAWa,EAAQb,EAAMC,OAAOC,QAC1CzC,UAAQ,OAGhB,cAACsE,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,qBACA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,8BCOL4qB,GA5Cc,SAAC72B,GAAW,IAAD,EACIC,mBAAS,IADb,mBAC7B6vB,EAD6B,KACfgH,EADe,KAE5B/0B,EAAaC,sBAAbD,SAgBR,OACI,eAAC8H,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACI,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,yCAKJ,cAACqK,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,CAAM4B,SAvBG,SAAC5F,GAClBA,EAAE6F,iBACF7F,EAAE8F,kBAEF5G,EAAI6G,KAAJ,6BAA+BstB,IAC1BntB,MAAK,WACFZ,EAAS,kCAAmC,CAAEa,WAAY,YAC1D5C,EAAMiM,YAET3H,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAa7C,UACI,eAACnC,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,2BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,OACLf,SAAU,SAACiB,GAAD,OAAW+1B,EAAgB/1B,EAAMC,OAAOC,QAClDzC,UAAQ,OAGhB,cAACsE,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,qBACA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAAS7I,EAAMiM,OAA3C,8BCmGL8qB,OAjIf,WAA0B,IAAD,EACK92B,oBAAS,GADd,mBAChBmhB,EADgB,KACRC,EADQ,OAESphB,mBAAS,IAFlB,mBAEhB8lB,EAFgB,KAENoO,EAFM,OAISl0B,mBAAS,IAJlB,mBAIhB+K,EAJgB,KAINikB,EAJM,OAMiBhvB,oBAAS,GAN1B,mBAMhBoqB,EANgB,KAMFC,EANE,OAOyCrqB,oBAAS,GAPlD,mBAOhB+2B,EAPgB,KAOUC,EAPV,OAQyCh3B,oBAAS,GARlD,mBAQhBi3B,EARgB,KAQUC,EARV,OASyCl3B,oBAAS,GATlD,mBAShBm3B,EATgB,KASUC,EATV,OAUmBp3B,oBAAS,GAV5B,mBAUhBs0B,EAVgB,KAUDC,EAVC,OAWuBv0B,oBAAS,GAXhC,mBAWhBw0B,EAXgB,KAWCC,EAXD,KAYf3yB,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAI,sBAAsB1B,OAAM,eAD7D,OACQvH,EADR,OAEEkyB,EAAclyB,EAAWA,EAASC,KAAO,IAF3C,4CADc,uBAAC,WAAD,wBAKdutB,KACC,CAACnJ,IAEJ,IAAMoJ,EAAc,WAClBnJ,GAAWD,IAoBb,OACE,eAAC/W,GAAA,EAAD,CAAW5F,MAAO,CAAEoU,UAAW,QAAUhW,UAAU,yBAAnD,UACE,eAACuF,EAAA,EAAD,CAAKvF,UAAU,6BAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACR0B,MAAO,CAAEwb,MAAO,QAASsG,OAAQ,QACjC1d,QAAS,kBAAMyhB,GAAgB,IAHjC,8BAOA,cAACxnB,EAAA,EAAD,CACEC,QAAQ,YACR0B,MAAO,CAAEwb,MAAO,QAASsG,OAAQ,QACjC1d,QAAS,kBAAMouB,GAA4B,IAH7C,mCAOA,cAACn0B,EAAA,EAAD,CACEC,QAAQ,YACR0B,MAAO,CAAEwb,MAAO,QAASsG,OAAQ,QACjC1d,QAAS,kBAAMsuB,GAA4B,IAH7C,mCAOA,cAACr0B,EAAA,EAAD,CACEC,QAAQ,YACR0B,MAAO,CAAEwb,MAAO,QAASsG,OAAQ,QACjC1d,QAAS,kBAAMwuB,GAA4B,IAH7C,8CAQF,eAAC9sB,GAAA,EAAD,CAAOG,SAAO,EAACF,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,sCACA,6CACA,8CAGJ,gCACGO,EAASpE,KAAI,SAAC0wB,GAAD,OACZ,cAAC,GAAD,CAEEtsB,SAAUssB,EACVzuB,QAAS,WA9DnBsrB,EA8DwCmD,IAC9BvC,UAAW,kBAAMP,GAAiB,IAClCzK,YAAa,kBAAM2K,GAAmB,KAJjC4C,EAAK93B,YASlB,cAAC,GAAD,CACE2Q,KAAMka,EACNpe,OAAQ,kBAAMqe,GAAgB,IAC9B1E,UAAW4E,IAEb,cAAC,GAAD,CACEra,KAAM6mB,EACN/qB,OAAQ,kBAAMgrB,GAA4B,MAE5C,cAAC,GAAD,CACE9mB,KAAM+mB,EACNjrB,OAAQ,kBAAMkrB,GAA4B,MAE5C,cAAC,GAAD,CACEhnB,KAAMinB,EACNnrB,OAAQ,kBAAMorB,GAA4B,MAE5C,cAAC,GAAD,CACEtc,MAAO,UAAYgL,EAAS1oB,KAC5B8S,KAAMskB,EACNxoB,OAAQ,kBAAMyoB,GAAmB,IACjCjE,SAvFiB,WACrB90B,EACG4T,OAAO,iBAAmBwW,EAASvmB,IACnCmD,MAAK,WACJ6nB,IACAkK,GAAmB,GACnB3yB,EAAS,iCAAkC,CAAEa,WAAY,eAE1D0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,gBAgF/C,cAAC,GAAD,CACEuN,KAAMokB,EACNvpB,SAAU+a,EACV9Z,OAAQ,kBAAMuoB,GAAiB,IAC/B5O,UAAW4E,QC3HJ+M,GATM,WACjB,OACI,gCACI,cAAC,GAAD,gBACA,cAAC,GAAD,oB,+BCkKGC,OAzJf,SAA2Bx3B,GAEzB,IAAM+e,EAAUC,cACRjd,EAAaC,sBAAbD,SAHwB,EAKQ9B,mBAAS,IALjB,mBAKzBqR,EALyB,KAKXC,EALW,KA6D1BkmB,EAAW,SAACC,GAChB,GAAMhrB,KAAOf,KAAKE,OAASa,KAAOgrB,EAAKhiB,OAAO6J,IAAI,EAAG,WAArD,CAQA,IAAIJ,EAAe,IAAIC,SACvBD,EAAaE,OAAO,KAAMqY,EAAKl4B,IAE/B7D,EACG6G,KAAK,sCAAuC2c,GAC5Cxc,MAAK,WACJZ,EAAS,iDAAkD,CACzDa,WAAY,SA1BQ,WAC1B,IAAIuc,EAAe,IAAIC,SACvBD,EAAaE,OAAO,UAApB,OAA+Brf,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAO23B,KAAK1Y,SAC3CE,EAAaE,OAAO,SAApB,OAA8Brf,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAO23B,KAAK9qB,QAC1ClR,EACG6G,KAAK,+BAAgC2c,GACrCxc,MAAK,SAAC6V,GAAD,OAAUjH,EAAgBiH,EAAKxb,SACpCsH,OAAM,kBAAMiN,EAAgB,OAqB3BqmB,MAEDtzB,OAAM,kBACLvC,EAAS,yCAA0C,CACjDa,WAAY,kBAnBhBb,EAAS,yCAA0C,CACjDa,WAAY,WAuBlB,OACE,eAACiH,GAAA,EAAD,2BACM7J,GADN,IAEE+J,kBAAgB,gCAChBC,UAAQ,EACRqqB,OAtFgB,WAAM,4CACxB,8BAAAj2B,EAAA,6DACM+gB,EAAe,IAAIC,UACVC,OAAO,UAApB,OAA+Brf,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAO23B,KAAK1Y,SAC3CE,EAAaE,OAAO,SAApB,OAA8Brf,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAO23B,KAAK9qB,QACpC5Q,EAAUN,EACb6G,KAAK,+BAAgC2c,GACrCxc,MAAK,SAAC6V,GAAD,OAAUjH,EAAgBiH,EAAKxb,SACpCsH,OAAM,kBAAMiN,EAAgB,OAPjC,kBAQStV,GART,4CADwB,uBAAC,WAAD,wBAWxBgW,IA4EEhG,OAAQ,WACNjM,EAAM63B,eACNtmB,EAAgB,KAPpB,UAUE,cAAC1H,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,6CACmCQ,EAAM23B,KAAKG,iBAGhD,cAACjuB,GAAA,EAAMO,KAAP,UACE,eAACC,GAAA,EAAD,WAC2B,IAAxBiH,EAAanS,QACZ,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,8CAIHyO,EAAa1K,KAAI,SAAC3F,EAAO4J,GACxB,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,gDADZ,SAIE,cAACwF,EAAA,EAAD,UACE,eAACgI,GAAA,EAAD,CAAMkT,OAAK,EAAX,UACE,eAAClT,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,mBACQ,IACN,cAAC,KAAD,CAAQyC,OAAO,mBAAf,SAAmC3L,EAAMyU,WAE3C,cAACrF,GAAA,EAAKoM,KAAN,UACqC,kBAAlChd,IAAuBs4B,QACtB,6CAAgB92B,EAAMsf,SAAtB,YAIN,cAAClQ,GAAA,EAAKrE,OAAN,UACE,eAACgsB,GAAA,EAAD,WACE,cAACl1B,EAAA,EAAD,CAAQ+F,QAAS,kBAhHvB,SAAC6uB,GACf,GAAMhrB,KAAOf,KAAKE,OAASa,KAAOgrB,EAAKhiB,OAAOwJ,SAAS,GAAI,WAA3D,CAQA,IAAIC,EAAe,IAAIC,SACvBD,EAAaE,OAAO,KAAMqY,EAAKl4B,IAE/B7D,EACG6G,KAAK,qCAAsC2c,GAC3Cxc,MAAK,WACJoc,EAAQ9C,KAAK,CACX5X,SAAU,6BACV3G,MAAO,CAEL4hB,cAAeoY,EAAKl4B,SAIzB8E,OAAM,kBACLvC,EAAS,wCAAyC,CAChDa,WAAY,kBAtBhBb,EAAS,wCAAyC,CAChDa,WAAY,UA4G2Bq1B,CAAQh3B,IAA/B,+BAGA,cAAC6B,EAAA,EAAD,CAAQ+F,QAAS,kBAAM4uB,EAASx2B,IAAhC,+CApBH4J,WAgCf,cAAChB,GAAA,EAAMmC,OAAP,SCmCSksB,OAvLf,WAA0B,IAAD,EACSj4B,mBAAS,IADlB,mBAChBk4B,EADgB,KACNC,EADM,OAEGn4B,mBAAS,IAFZ,mBAEhBo4B,EAFgB,KAETC,EAFS,OAGGr4B,mBAAS,IAHZ,mBAGhBs4B,EAHgB,KAGTC,EAHS,OAIOv4B,mBAAS,IAJhB,mBAIhBgf,EAJgB,KAIPwZ,EAJO,OAKWx4B,oBAAS,GALpB,mBAKhByf,EALgB,KAKLC,EALK,OAMqB1f,mBAAS,cAN9B,mBAMhBy4B,EANgB,KAMAC,EANA,KAOf52B,EAAaC,sBAAbD,SAiFR,OA/EA1B,qBAAU,WAAM,4CACd,sBAAAjC,EAAA,sEACQzC,EACHqK,IAAI,qBACJrD,MAAK,SAAC6V,GAAD,OAAU4f,EAAY5f,EAAKxb,SAChCsH,OAAM,kBAAM8zB,EAAY,OAJ7B,4CADc,uBAAC,WAAD,wBAOdQ,KACC,IAwED,sBAAK/1B,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,gEAAf,SACE,oBAAIA,UAAU,oBAAd,8CAGF,cAACuF,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,cAACpC,EAAA,EAAD,CAAM4B,SA5EO,SAACtB,GAClBA,EAAMuB,iBACNq2B,EAAkB,cACG,IAAjBN,EAAMl5B,QAAiC,IAAjBo5B,EAAMp5B,OAC9BxD,EACGqK,IAAI,qBACJrD,MAAK,SAAC6V,GACL4f,EAAY5f,EAAKxb,MACQ,IAArBwb,EAAKxb,KAAKmC,QACZw5B,EAAkB,iBAGrBr0B,OAAM,WACL8zB,EAAY,IACZO,EAAkB,iBAGtBh9B,EACGqK,IAAI,uBAAwB,CAC3B+I,OAAQ,CAAExL,UAAW80B,EAAO70B,SAAU+0B,KAEvC51B,MAAK,SAAC6V,GACL4f,EAAY5f,EAAKxb,MACQ,IAArBwb,EAAKxb,KAAKmC,QACZw5B,EAAkB,iBAGrBr0B,OAAM,WACL8zB,EAAY,IACZO,EAAkB,kBA+CpB,SACE,eAACl4B,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKvF,UAAU,kCAA/B,UACE,cAACpC,EAAA,EAAKE,MAAN,4BACA,cAAC0H,EAAA,EAAD,UACE,cAAC5H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,YACL4D,MAAOo3B,EACPv4B,SAAU,SAACrD,GAAD,OAAO67B,EAAS77B,EAAEuE,OAAOC,QACnCrB,YAAY,0BAIhB,cAACa,EAAA,EAAKE,MAAN,2BACA,cAAC0H,EAAA,EAAD,UACE,cAAC5H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,WACL4D,MAAOs3B,EACPz4B,SAAU,SAACrD,GAAD,OAAO+7B,EAAS/7B,EAAEuE,OAAOC,QACnCrB,YAAY,yBAIhB,cAACyI,EAAA,EAAD,UACE,eAAC2vB,GAAA,EAAD,CAAapvB,KAAK,KAAlB,UACE,eAAC9F,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAAQ,UAA9B,UACG,IADH,SAES,OAET,eAACD,EAAA,EAAD,CAAQC,QAAQ,UAAU8F,QAxEpB,WAClB8vB,EAAkB,cAClBh9B,EACGqK,IAAI,qBACJrD,MAAK,SAAC6V,GACL4f,EAAY5f,EAAKxb,MACQ,IAArBwb,EAAKxb,KAAKmC,QACZw5B,EAAkB,iBAGrBr0B,OAAM,kBAAM8zB,EAAY,OAC3BE,EAAS,IACTE,EAAS,KA4DG,UACG,IADH,eAEe,mBAOzB,cAACpwB,EAAA,EAAD,CAAKvF,UAAU,6CAAf,SACE,eAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,UACuB,IAApB4vB,EAASh5B,QACR,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,6BAAK61B,MAIRP,EAASvxB,KAAI,SAAC3F,EAAO4J,GAEpB,OADAxM,QAAQ4U,IAAIhS,GAEV,cAACmH,EAAA,EAAD,CACEvF,UAAU,gDADZ,SAIE,cAACwF,EAAA,EAAD,UACE,cAACgI,GAAA,EAAD,CAAMkT,OAAK,EAAC1gB,UAAU,iBAAtB,SACE,eAACwN,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,WACGlJ,EAAMsC,UAAY,IAAMtC,EAAMuC,SAAU,OAE3C,cAAC6M,GAAA,EAAKrE,OAAN,CAAanJ,UAAU,wBAAvB,SACE,cAACuF,EAAA,EAAD,CAAKvF,UAAU,4CAAf,SACE,eAACC,EAAA,EAAD,CACEC,QAAQ,YACR8F,QAAS,kBA3FF,SAAUgwB,GACzC,IAAIr5B,EAAKH,IACT,IAAKG,EAGH,OAFAuC,EAAS,eAAgB,CAAEa,WAAY,eACvCw1B,EAAY,IAGdK,EAAW,CACTxZ,QAAO,OAAE4Z,QAAF,IAAEA,OAAF,EAAEA,EAAap3B,MACtBoL,OAAQrN,EACRs4B,aAAwB,OAAXe,QAAW,IAAXA,OAAA,EAAAA,EAAat1B,WAAY,KAAzB,OAA+Bs1B,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAar1B,YAE3Dmc,GAAa,GA+E0BmZ,CAAyB73B,IAF1C,wCAI8B,IAC3BA,EAAMsC,UAAY,IAAMtC,EAAMuC,wBAftCqH,WA2Bf,cAAC,GAAD,CACEsF,KAAMuP,EACNiY,KAAM1Y,EACN4Y,aA9Fa,WACjBlY,GAAa,GACb8Y,EAAW,W,OC+QAM,OA3Vf,WAAkC,IAAD,EACC94B,mBAAS,IADV,mBACxBk4B,EADwB,KACdC,EADc,OAELn4B,mBAAS,IAFJ,mBAExBo4B,EAFwB,KAEjBC,EAFiB,OAGLr4B,mBAAS,IAHJ,mBAGxBs4B,EAHwB,KAGjBC,EAHiB,OAIDv4B,mBAAS,IAJR,mBAIxBgf,EAJwB,KAIfwZ,EAJe,OAKGx4B,oBAAS,GALZ,mBAKxByf,EALwB,KAKbC,EALa,OAOG1f,mBAAS,MAPZ,mBAOxB0J,EAPwB,KAObC,EAPa,OAQD3J,mBAAS,MARR,mBAQxB0c,EARwB,KAQfC,EARe,OAUL3c,mBAAS,QAVJ,mBAUxB+4B,EAVwB,KAUjBC,EAViB,OAWLh5B,mBAAS,QAXJ,mBAWxBi5B,EAXwB,KAWjBC,EAXiB,OAYLl5B,mBAAS,QAZJ,mBAYxBm5B,EAZwB,KAYjBC,EAZiB,OAaCp5B,mBAAS,OAbV,oBAaxBq5B,GAbwB,MAadC,GAbc,SAcCt5B,mBAAS,OAdV,qBAcxBu5B,GAdwB,MAcdC,GAdc,SAeCx5B,mBAAS,OAfV,qBAexBy5B,GAfwB,MAedC,GAfc,SAiBS15B,mBAAS,cAjBlB,qBAiBxB25B,GAjBwB,MAiBVC,GAjBU,MAmBvB93B,GAAaC,sBAAbD,SAyGR,OAvGA1B,qBAAU,WAAM,4CACd,gCAAAjC,EAAA,yDACMoB,EAAKH,IADX,uBAGI0C,GAAS,eAAgB,CAAEa,WAAY,UACvCw1B,EAAY,IAJhB,6BAQoB,mBADd0B,EAAYr6B,IAAuBs4B,SACY,eAAd+B,EARvC,uBASI/3B,GAAS,qBAAsB,CAAEa,WAAY,UATjD,iCAYEi3B,GAAgBC,GAZlB,UAawBn+B,EACnBqK,IAAI,iDAAmDxG,GACvDmD,MAAK,SAAC6V,GAAD,OAAU4f,EAAY5f,EAAKxb,SAChCsH,MAAM8zB,EAAY,KAhBvB,eAaQn8B,EAbR,yBAiBSA,GAjBT,6CADc,uBAAC,WAAD,wBAoBd28B,KACC,IAoFD,cADA,CACA,OAAK/1B,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,8BAAf,SACE,oBAAIA,UAAU,oBAAd,wCAGF,cAACuF,EAAA,EAAD,CAAKvF,UAAU,4CAAf,SACE,eAACpC,EAAA,EAAD,CAAM4B,SAxFO,SAACtB,GAClBA,EAAMuB,iBACN,IAAI9C,EAAKH,IACT,IAAKG,EAGH,OAFAuC,GAAS,eAAgB,CAAEa,WAAY,eACvCw1B,EAAY,IAGd,IAAIzK,EAAgB,IAAIC,gBAUxB,GAToB,GAAhByK,EAAMl5B,QACRwuB,EAActO,OAAO,YAAagZ,GAEhB,GAAhBE,EAAMp5B,QACRwuB,EAActO,OAAO,YAAakZ,GAEhC5uB,GACFgkB,EAActO,OAAO,YAAa5P,KAAKC,MAAM/F,EAAUmC,YAErD6Q,EAAS,CACX,GAAIhT,GACEA,EAAUmC,WAAa6Q,EAAQ7Q,UAEjC,YADA/J,GAAS,uBAAwB,CAAEa,WAAY,UAInD+qB,EAActO,OAAO,YAAa5P,KAAKC,MAAMiN,EAAQ7Q,aAGzC,SAAVktB,GAAqBA,IAAUE,GAASF,IAAUI,KAGjC,SAAVF,GAAqBA,IAAUF,GAASE,GAASE,IAK5D/6B,QAAQ4U,IAAI+lB,EAAQ,IAAMM,IAEZ,SAAVN,GACFrL,EAActO,OAAO,OAAQ2Z,EAAQ,IAAMM,IAG/B,SAAVJ,GACFvL,EAActO,OAAO,OAAQ6Z,EAAQ,IAAMM,IAG/B,SAAVJ,GACFzL,EAActO,OAAO,OAAQ+Z,EAAQ,IAAMM,IAE7C/L,EAActO,OAAO,WAAY7f,GAEjC7D,EACGqK,IAAI,oCAAqC,CAAE+I,OAAQ4e,IACnDhrB,MAAK,SAAC6V,GAAD,OAAU4f,EAAY5f,EAAKxb,SAChCsH,MAAM8zB,EAAY,MAzBnBr2B,GAAS,uBAAwB,CAAEa,WAAY,WA2DjBC,UAAU,eAAtC,UACE,eAACpC,EAAA,EAAKC,MAAN,CACE+H,GAAIL,IACJvF,UAAU,gEAFZ,UAIE,eAACwF,EAAA,EAAD,WACE,cAAC5H,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,YACL4D,MAAOo3B,EACPv4B,SAAU,SAACrD,GAAD,OAAO67B,EAAS77B,EAAEuE,OAAOC,QACnCrB,YAAY,2BAIhB,eAACyI,EAAA,EAAD,WACE,cAAC5H,EAAA,EAAKE,MAAN,yBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLxD,KAAK,WACL4D,MAAOs3B,EACPz4B,SAAU,SAACrD,GAAD,OAAO+7B,EAAS/7B,EAAEuE,OAAOC,QACnCrB,YAAY,0BAIhB,eAACyI,EAAA,EAAD,WACE,cAAC5H,EAAA,EAAKE,MAAN,yBACA,cAACF,EAAA,EAAKG,QAAN,CACE6H,GAAIsxB,KACJ9J,eAAe,EACflK,SAAUpc,EACVumB,WAAW,aACXpwB,SAAU,SAAC0L,GAAD,OAAU5B,EAAa4B,IACjC2kB,aAAW,OAIf,eAAC9nB,EAAA,EAAD,WACE,cAAC5H,EAAA,EAAKE,MAAN,uBACA,cAACF,EAAA,EAAKG,QAAN,CACE6H,GAAIsxB,KACJ9J,eAAe,EACflK,SAAUpJ,EACVuT,WAAW,aACXpwB,SAAU,SAAC0L,GAAD,OAAUoR,EAAWpR,IAC/B2kB,aAAW,UAKjB,eAAC1vB,EAAA,EAAKC,MAAN,CACE+H,GAAIL,IACJvF,UAAU,6CAFZ,UAIE,cAACwF,EAAA,EAAD,UACE,eAACkU,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,yBAEF,eAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAO+3B,EACPl5B,SAAU,SAACiB,GAAD,OAAWk4B,EAASl4B,EAAMC,OAAOC,QAC3C5D,KAAK,QAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,YAAd,qBAEF,eAACR,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAOq4B,GACPx5B,SAAU,SAACiB,GAAD,OAAWw4B,GAAYx4B,EAAMC,OAAOC,QAC9C5D,KAAK,WACL0oB,SAAS,MALX,UAOE,wBAAQ9kB,MAAM,MAAd,uBACA,wBAAQA,MAAM,OAAd,gCAKN,cAACoH,EAAA,EAAD,UACE,eAACkU,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,yBAEF,eAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAOi4B,EACPp5B,SAAU,SAACiB,GAAD,OAAWo4B,EAASp4B,EAAMC,OAAOC,QAC3C5D,KAAK,QAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,YAAd,qBAEF,eAACR,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAOu4B,GACP15B,SAAU,SAACiB,GAAD,OAAW04B,GAAY14B,EAAMC,OAAOC,QAC9C5D,KAAK,WACL0oB,SAAS,MALX,UAOE,wBAAQ9kB,MAAM,MAAd,uBACA,wBAAQA,MAAM,OAAd,gCAKN,cAACoH,EAAA,EAAD,UACE,eAACkU,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,yBAEF,eAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAOm4B,EACPt5B,SAAU,SAACiB,GAAD,OAAWs4B,EAASt4B,EAAMC,OAAOC,QAC3C5D,KAAK,QAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,YAAd,qBAEF,eAACR,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAOy4B,GACP55B,SAAU,SAACiB,GAAD,OAAW44B,GAAY54B,EAAMC,OAAOC,QAC9C5D,KAAK,WACL0oB,SAAS,MALX,UAOE,wBAAQ9kB,MAAM,MAAd,uBACA,wBAAQA,MAAM,OAAd,mCAMR,cAACR,EAAA,EAAKC,MAAN,CACE+H,GAAIL,IACJvF,UAAU,6CAFZ,SAIE,cAACwF,EAAA,EAAD,CAAKE,GAAG,OAAR,SACE,eAACyvB,GAAA,EAAD,WACE,eAACl1B,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAAQ,UAA9B,UACG,IADH,SAES,OAET,eAACD,EAAA,EAAD,CAAQC,QAAQ,UAAU8F,QAzLpB,WAClB,IAAIrJ,EAAKH,IACT,IAAKG,EAGH,OAFAuC,GAAS,eAAgB,CAAEa,WAAY,eACvCw1B,EAAY,IAGdz8B,EACGqK,IAAI,iDAAmDxG,GACvDmD,MAAK,SAAC6V,GAAD,OAAU4f,EAAY5f,EAAKxb,SAChCsH,OAAM,kBAAM8zB,EAAY,OAC3BE,EAAS,IACTE,EAAS,IACT5uB,EAAa,MACbgT,EAAW,MACXqc,EAAS,QACTM,GAAY,OACZJ,EAAS,QACTM,GAAY,OACZJ,EAAS,QACTM,GAAY,QAqKA,UACG,IADH,eAEe,mBAQzB,cAACvxB,EAAA,EAAD,CAAKvF,UAAU,6CAAf,SACE,eAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,UACuB,IAApB4vB,EAASh5B,QACR,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,8CAIHs1B,EAASvxB,KAAI,SAAC3F,EAAO4J,GACpB,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,gDADZ,SAIE,cAACwF,EAAA,EAAD,UACE,cAACgI,GAAA,EAAD,CAAMkT,OAAK,EAAC1gB,UAAU,iBAAtB,SACE,eAACwN,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,WACGlJ,EAAMsC,UAAY,IAAMtC,EAAMuC,SAAU,OAE3C,eAAC6M,GAAA,EAAKoM,KAAN,WACG,qBACC/P,KAAOzL,EAAM+4B,kBAAkBptB,OAC7B,uBACC,OAEW,kBAAjBgtB,IACC,eAACvpB,GAAA,EAAKoM,KAAN,2BAAyBxb,EAAMsf,SAA/B,eAfH1V,WA2Bf,cAAC,GAAD,CACEsF,KAAMuP,EACNiY,KAAM1Y,EACNhT,OAAQ,WACN0T,GAAa,GACb8Y,EAAW,W,oBC1SNwB,GA7DK,SAAC,GAAoB,EAAlBC,YAAmB,IAClC/7B,EAAW0D,cAMjB,OACE,eAACs4B,GAAA,EAAD,CAAQt3B,UAAU,aAAau3B,OAAO,MAAMC,OAAO,KAAnD,UACE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UAUA,cAACg4B,GAAA,EAAOlqB,OAAR,CAAesqB,gBAAc,0BAE7B,eAACJ,GAAA,EAAOK,SAAR,CAAiBh7B,GAAG,mBAApB,UACE,eAACmf,EAAA,EAAD,CAAK9b,UAAU,UAAf,UACE,cAAC8b,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,eAAlD,mBAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,oBAAlD,wBAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,kBAAlD,sBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,6BAHL,wBAOA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,iBAAlD,gCAIF,eAACwc,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,eAAlD,qBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,IACH0G,QAAS,WA/CjB1K,EAASD,MA2CH,+BCjBKu8B,GA9BW,WACP54B,cAEjB,OACE,eAACs4B,GAAA,EAAD,CACEt3B,UAAU,qCACVu3B,OAAO,MACPC,OAAO,KAHT,UAKE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UASA,eAACwc,EAAA,EAAD,CAAK9b,UAAU,sBAAf,UACE,cAAC8b,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,gBAAlD,sBAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,SAAlD,2BCmFOu4B,GAvGO,WAAO,IAAD,EACQz6B,qBADR,mBACnBorB,EADmB,KACRC,EADQ,KAG1BjrB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IACxB,iBAAmB3G,IAAmB,cACtCiF,OAAM,eAHV,cACQrI,EADR,OAIEqvB,EAAervB,EAAUA,EAAQe,KAAO,MAJ1C,kBAMSf,GANT,4CADc,uBAAC,WAAD,wBASdsvB,KACC,IAEH,IAAMptB,EAAW0D,cAMjB,OACE,eAACs4B,GAAA,EAAD,CAAQt3B,UAAU,aAAau3B,OAAO,MAAMC,OAAO,KAAnD,UACE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UAUA,cAACg4B,GAAA,EAAOlqB,OAAR,CAAesqB,gBAAc,0BAE7B,eAACJ,GAAA,EAAOK,SAAR,CAAiBh7B,GAAG,mBAApB,UACE,eAACmf,EAAA,EAAD,CAAK9b,UAAU,UAAf,UACE,cAAC8b,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,mCAHL,kCAOA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,yBAHL,2BAOA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,oBAAlD,sBAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,wBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,yBAHL,mCAOA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,sBAHL,gCAOA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,UAAlD,oBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CACLsM,QAAuB,IAAdsa,EAAkB,OAAS,QACpCnL,MAAO,SAET/d,GAAG,kBANL,+BAWF,eAACwc,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,WAAlD,qBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,IACH0G,QAAS,WA3EjB1K,EAASD,MAuEH,+BCpDKy8B,GAvCQ,WACrB,IAAMx8B,EAAW0D,cAMjB,OACE,eAACs4B,GAAA,EAAD,CACEt3B,UAAU,qCACVu3B,OAAO,MACPC,OAAO,KAHT,UAKE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UASA,eAACwc,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,eAAlD,qBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,IACH0G,QAAS,WA1Bf1K,EAASD,MAsBL,4BCeO08B,GAzCa,WAC1B,IAAMz8B,EAAW0D,cAMjB,OACE,eAACs4B,GAAA,EAAD,CAAQt3B,UAAU,aAAau3B,OAAO,MAAMC,OAAO,KAAnD,UACE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UAUA,cAACg4B,GAAA,EAAOlqB,OAAR,CAAesqB,gBAAc,0BAE7B,eAACJ,GAAA,EAAOK,SAAR,CAAiBh7B,GAAG,mBAApB,UACE,cAACmf,EAAA,EAAD,CAAK9b,UAAU,YACf,eAAC8b,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,eAAlD,qBAGA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,IACH0G,QAAS,WA3BjB1K,EAASD,MAuBH,+BCmCK28B,GA9Da,WAC1B,IAAM18B,EAAW0D,cAMjB,OACE,eAACs4B,GAAA,EAAD,CAAQt3B,UAAU,aAAau3B,OAAO,MAAMC,OAAO,KAAnD,UACE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UAUA,cAACg4B,GAAA,EAAOlqB,OAAR,CAAesqB,gBAAc,0BAE7B,eAACJ,GAAA,EAAOK,SAAR,CAAiBh7B,GAAG,mBAApB,UACE,eAACmf,EAAA,EAAD,CAAK9b,UAAU,UAAf,UACE,cAAC8b,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,0BAHL,6BAOA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,2BAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,+BAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,yBAIF,eAACwc,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,gCAHL,qBAOA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,IACH0G,QAAS,WAhDjB1K,EAASD,MA4CH,+BCqBK48B,GArEU,WACvB,IAAM38B,EAAW0D,cAMjB,OACE,eAACs4B,GAAA,EAAD,CAAQt3B,UAAU,aAAau3B,OAAO,MAAMC,OAAO,KAAnD,UACE,eAACF,GAAA,EAAOG,MAAR,CACE7xB,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChBrd,UAAU,oBACVV,GAAG,IAJL,UAME,cAAC,KAAD,IANF,UAUA,cAACg4B,GAAA,EAAOlqB,OAAR,CAAesqB,gBAAc,0BAE7B,eAACJ,GAAA,EAAOK,SAAR,CAAiBh7B,GAAG,mBAApB,UACE,eAACmf,EAAA,EAAD,CAAK9b,UAAU,UAAf,UACE,cAAC8b,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,0BAHL,6BAOA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,yBAHL,4BAOA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,2BAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,+BAGA,cAACwc,EAAA,EAAIC,KAAL,CAAUnW,GAAImW,KAAMna,MAAO,CAAEyb,MAAO,SAAW/d,GAAG,mBAAlD,yBAIF,eAACwc,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,6BAHL,qBAOA,cAACwc,EAAA,EAAIC,KAAL,CACEnW,GAAImW,KACJna,MAAO,CAAEyb,MAAO,SAChB/d,GAAG,IACH0G,QAAS,WAvDjB1K,EAASD,MAmDH,+BChBK68B,GAnCM,WACnB,IAMIC,EANEz9B,EAAOuE,aAAY,SAACpE,GAAD,OAAWA,EAAMH,QACtCmC,EAAWD,IAMf,OALAY,qBAAU,WACRX,EAAWD,MACV,CAAClC,IAGImC,GACN,IAAK,QACHs7B,EAAS,cAAC,GAAD,IACT,MACF,IAAK,aACHA,EAAS,cAAC,GAAD,IACT,MACF,IAAK,gBACHA,EAAS,cAAC,GAAD,IACT,MACF,IAAK,WACHA,EAAS,cAAC,GAAD,IACT,MACF,IAAK,UACHA,EAAS,cAAC,GAAD,IACT,MACF,IAAK,iBACHA,EAAS,cAAC,GAAD,IACT,MACF,QACEA,EAAS,cAAC,GAAD,IAIb,OAAO,8BAAMA,K,wCCqCAC,OA1Ef,SAA8Bj7B,GAAO,IAE3B+B,EAAaC,sBAAbD,SAF2B,EAGH9B,mBAAS,MAHN,mBAG5Bi7B,EAH4B,KAGlBC,EAHkB,KAyBnC,OACE,eAACtxB,GAAA,EAAD,2BACM7J,GADN,IAEE+J,kBAAgB,gCAChBC,UAAQ,EACRqqB,OAzBgB,WACbr0B,EAAMkT,YAAY1T,IAEvB7D,EACGqK,IAAI,6BAA+BhG,EAAMkT,YAAY1T,IACrDmD,MAAK,SAAC6V,GACL2iB,EAAY3iB,EAAKxb,SAElBsH,OAAM,kBACLvC,EAAS,yCAA0C,CACjDa,WAAY,cAgBhBqJ,OAXgB,WAClBkvB,EAAY,MACZn7B,EAAMo7B,aAIN,UAOE,cAACvxB,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,uCAID07B,GACC,cAACrxB,GAAA,EAAMO,KAAP,UACE,cAACC,GAAA,EAAD,UACE,eAAChC,EAAA,EAAD,CAAK5D,MAAO,CAAEqX,gBAAiB,WAAajZ,UAAU,MAAtD,UACE,eAACuF,EAAA,EAAD,CAAKvF,UAAU,MAAf,uBAAgCq4B,EAASjc,WACzC,eAAC7W,EAAA,EAAD,CAAKvF,UAAU,MAAf,wBAAiCq4B,EAAS3a,YAC1C,eAACnY,EAAA,EAAD,CAAKvF,UAAU,MAAf,qBAA8Bq4B,EAASzuB,SACvC,eAACrE,EAAA,EAAD,CAAKvF,UAAU,MAAf,yBACe,IACZ6J,KAAOwuB,EAASxlB,OAAO9I,OAAO,0BAEjC,eAACxE,EAAA,EAAD,CAAKvF,UAAU,MAAf,wBACc6J,KAAOwuB,EAASvlB,KAAK/I,OAAO,0BAE1C,eAACxE,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBAA6Bq4B,EAASvD,QACrCuD,EAASG,eAAel8B,OAAS,GAChC,gCACE,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,MAAf,uBACCq4B,EAASG,eAAez0B,KAAI,SAAC3F,EAAO4J,GACnC,OACE,eAACzC,EAAA,EAAD,CAAKvF,UAAU,iBAAf,UACG5B,EAAMgK,KADT,MACkBhK,EAAM0kB,aADxB,KACwC,IACrC1kB,EAAMq6B,cAFT,UAAqCzwB,qB,0BC4P5C0wB,OA3Sf,WAAyB,IAAD,EACMt7B,mBAAS,IADf,mBACfu7B,EADe,KACPC,EADO,OAEYx7B,oBAAS,GAFrB,mBAEfyf,EAFe,KAEJC,EAFI,OAGoB1f,oBAAS,GAH7B,mBAGfy7B,EAHe,KAGAC,EAHA,OAIY17B,mBAAS,IAJrB,mBAIf2f,EAJe,KAIJC,EAJI,OAKU5f,mBAAS,IALnB,mBAKf27B,EALe,KAKLC,EALK,KAOd95B,EAAaC,sBAAbD,SA0GR,OAxGA1B,qBAAU,WAAM,4CACd,8BAAAjC,EAAA,yDACM09B,EAAUz8B,IACVy6B,EAAYr6B,IAAuBs4B,OACvC15B,QAAQ4U,IAAI6mB,GACPgC,EAJP,uBAKI/5B,EAAS,6BAA8B,CAAEa,WAAY,UACrD64B,EAAU,IANd,6BAQ2B,kBAAd3B,GAA+C,eAAdA,EAR9C,wBASI/3B,EAAS,oBAAqB,CAAEa,WAAY,UAC5C64B,EAAU,IAVd,kCAaEI,EAAY,CAAEr8B,GAAIs8B,EAASj7B,KAAMi5B,IAbnC,UAcQn+B,EACHqK,IAAI,qCAAuC81B,GAC3Cn5B,MAAK,SAAC6V,GACL,IAAIujB,EAAQvjB,EAAKxb,KACjBrB,EACGqK,IAAI,mDAAqD81B,GACzDn5B,MAAK,SAAC6V,GACL,IAAIwjB,EAASxjB,EAAKxb,KAClBy+B,EAAUM,EAAME,OAAOD,OAExB13B,OAAM,WACLm3B,EAAUM,GACVh6B,EAAS,6CAA8C,CACrDa,WAAY,gBAInB0B,OAAM,WACLm3B,EAAU,IACV15B,EAAS,8BAA+B,CAAEa,WAAY,aAjC5D,6CADc,uBAAC,WAAD,wBAqCdqP,KACC,IAmED,sBAAKpP,UAAU,oBAAoB4B,MAAO,CAAEC,UAAW,SAAvD,UACE,cAAC,KAAD,CACEoW,QAAS,CAACohB,KAAeC,KAAgBC,MACzCC,cAAe,CACb5P,KAAM,kBACNrlB,OAAQ,QACRslB,MAAO,+BAET4P,YAAY,EACZC,OAAQf,EACRgB,YAAY,YACZC,WA5Ee,SAAC9E,GACpB,GAA8C,gBAA1CA,EAAK52B,MAAM27B,cAAcC,aAA7B,CAGA,GAAkD,aAA9ChF,EAAK52B,MAAM27B,cAAcvpB,iBAAiC,CAC5D,IAAIukB,EAAO,GACX,IAAK,IAAIkF,KAAKjF,EAAK52B,MAAM27B,cACvBhF,EAAKkF,GAAKjF,EAAK52B,MAAM27B,cAAcE,GAKrC,OAHAlF,EAAKl4B,GAAKm4B,EAAK52B,MAAMvB,GACrBqgB,EAAa6X,QACbiE,GAAiB,GAInB,GAAkD,aAA9ChE,EAAK52B,MAAM27B,cAAcvpB,iBAI7B,GAEIzG,KAAOf,KAAKE,OACZa,KAAOirB,EAAK52B,MAAM27B,cAAchnB,OAAOwJ,SAAS,GAAI,WAHxD,CAYA,IAAIwY,EAAO,GACX,IAAK,IAAIkF,KAAKjF,EAAK52B,MAAM27B,cACvBhF,EAAKkF,GAAKjF,EAAK52B,MAAM27B,cAAcE,GAErClF,EAAKl4B,GAAKm4B,EAAK52B,MAAMvB,GACrBqgB,EAAa6X,GACb/X,GAAa,QAXX5d,EAAS,2CAA4C,CACnDa,WAAY,YAkDZi6B,MAAO,CACLC,SAAU,CACRj8B,KAAM,WACNk8B,WAAY,YACZnrB,SAAU,CAAEorB,MAAO,GACnBC,aAAc,SAAUtF,GACtB,IAAIuF,EAAQvF,EAAK52B,MAAM27B,cACvB,MAA2B,gBAAvBQ,EAAMP,aACD,CAAEQ,KAAM,QAAUD,EAAMje,QAAU,UAElC,CAAEke,KAAM,QAAUD,EAAM1nB,YAAc,WAGjD4nB,cAAe,SAAUzF,GACvB,IAAIuF,EAAQvF,EAAK52B,MAAM27B,cACI,gBAAvBQ,EAAMP,aACRU,aAAM1F,EAAK2F,GAAI,CACbC,WAAW,EACX/pB,QACE,WACA9G,KAAOirB,EAAK52B,MAAM2U,OAAO9I,OAAO,SAChC,IACAF,KAAOirB,EAAK52B,MAAM4U,KAAK/I,OAAO,SAH9B,UAMAswB,EAAMje,QACN,SACmB,kBAAlB2c,EAAS/6B,KACNq8B,EAAM3c,SAAW,WACjB,OACJ2c,EAAM/pB,iBACN,oBAGJwkB,EAAK52B,MAAMy8B,QACT,kBACA,2BAEFH,aAAM1F,EAAK2F,GAAI,CACbC,WAAW,EACX/pB,QACE,WACA9G,KAAOirB,EAAK52B,MAAM2U,OAAO9I,OAAO,UAChC,IACAF,KAAOirB,EAAK52B,MAAM4U,KAAK/I,OAAO,UAH9B,UAMAswB,EAAM1nB,YACN,kBAKVioB,UAAW,CACT58B,KAAM,UACNk8B,WAAY,aACZnrB,SAAU,CAAE8rB,OAAQ,GACpBC,aAAc,CAAEC,KAAM,GACtBC,aAAc,EACdZ,aAAc,SAAUtF,GACtB,IAAIuF,EAAQvF,EAAK52B,MAAM27B,cACvB,MAA2B,gBAAvBQ,EAAMP,aACD,CACLQ,KACE,WACAzwB,KAAOirB,EAAK52B,MAAM2U,OAAO9I,OAAO,SAChC,IACAF,KAAOirB,EAAK52B,MAAM4U,KAAK/I,OAAO,SAH9B,UAMAswB,EAAMje,QACN,SACmB,kBAAlB2c,EAAS/6B,KACNq8B,EAAM3c,SAAW,WACjB,OACJ2c,EAAM/pB,iBACN,kBAGG,CACLgqB,KACE,WACAzwB,KAAOirB,EAAK52B,MAAM2U,OAAO9I,OAAO,UAChC,IACAF,KAAOirB,EAAK52B,MAAM4U,KAAK/I,OAAO,UAH9B,UAMAswB,EAAM1nB,YACN,eAIR4nB,cAAe,SAAUzF,GACuB,gBAA1CA,EAAK52B,MAAM27B,cAAcC,cAC3BhF,EAAK52B,MAAMy8B,QACT,kBACA,6BAKRM,SAAU,CACRj9B,KAAM,WACNk8B,WAAY,YACZnrB,SAAU,CAAEmsB,MAAO,GACnBJ,aAAc,CAAED,OAAQ,GACxBM,aAAc,CACZtoB,MAAOhJ,OAASuxB,QAAQ,QAAQC,SAChCvoB,IAAKjJ,OAASyxB,MAAM,QAAQD,UAE9BjB,aAAc,SAAUtF,GACtB,IAAIuF,EAAQvF,EAAK52B,MAAM27B,cACvB,MAA2B,gBAAvBQ,EAAMP,aACD,CACLQ,KACEzwB,KAAOirB,EAAK52B,MAAM2U,OAAO9I,OAAO,iBAChC,IACAF,KAAOirB,EAAK52B,MAAM4U,KAAK/I,OAAO,SAC9B,QACAswB,EAAMje,QACN,SACmB,kBAAlB2c,EAAS/6B,KACNq8B,EAAM3c,SAAW,WACjB,OACJ2c,EAAM/pB,iBACN,QAGG,CACLgqB,KACE,WACAzwB,KAAOirB,EAAK52B,MAAM2U,OAAO9I,OAAO,UAChC,IACAF,KAAOirB,EAAK52B,MAAM4U,KAAK/I,OAAO,UAH9B,UAMAswB,EAAM1nB,YACN,eAIR4nB,cAAe,SAAUzF,GACuB,gBAA1CA,EAAK52B,MAAM27B,cAAcC,cAC3BhF,EAAK52B,MAAMy8B,QACT,kBACA,gCAOZ,cAAC,GAAD,CACErtB,KAAMurB,EACNxoB,YAAa0M,EACbwb,UAAW,WACTO,GAAiB,GACjB9b,EAAa,OAGjB,cAAC,GAAD,CACE1P,KAAMuP,EACNF,eAvMiB,WACrBG,GAAa,GACb,IAAIngB,EAAKH,IACT,IAAKG,EAGH,OAFAuC,EAAS,gBAAiB,CAAEa,WAAY,eACxC64B,EAAU,IAIZ9/B,EACGqK,IAAI,qCAAuCxG,GAC3CmD,MAAK,SAAC6V,GACL,IAAIujB,EAAQvjB,EAAKxb,KACjBrB,EACGqK,IAAI,mDAAqDxG,GACzDmD,MAAK,SAAC6V,GACL,IAAIwjB,EAASxjB,EAAKxb,KAClBy+B,EAAUM,EAAME,OAAOD,OAExB13B,OAAM,kBAAMm3B,EAAUM,SAE1Bz3B,OAAM,kBAAMm3B,EAAU,QAmLrBvoB,YAAa0M,EACb3T,OAAQ,WACN0T,GAAa,GACbE,EAAa,WCGRue,GAjTc,SAACp+B,GAAW,IAAD,EACQC,mBAAS,IADjB,mBAC/BulB,EAD+B,KACdC,EADc,OAEMxlB,mBAAS,IAFf,mBAE/Bo+B,EAF+B,KAEfC,EAFe,OAGQr+B,oBAAS,GAHjB,mBAG/Bs+B,EAH+B,KAGdC,EAHc,OAKkBv+B,mBAAS,IAL3B,mBAK/Bw+B,EAL+B,KAKTC,EALS,OAMcz+B,mBAAS,IANvB,mBAM/B0+B,EAN+B,KAMXC,EANW,OAOY3+B,oBAAS,GAPrB,mBAO/B4+B,EAP+B,KAOZC,EAPY,OASU7+B,mBAAS,MATnB,mBAS/BkqB,EAT+B,KASbC,EATa,OAWUnqB,oBAAS,GAXnB,mBAW/B8+B,EAX+B,KAWbC,EAXa,OAaV/+B,mBAAS,IAbC,mBAa/BoJ,EAb+B,KAavBC,EAbuB,KAe9BvH,EAAaC,sBAAbD,SAEFqC,EAAQ,WACZqhB,EAAmB,IACnB6Y,EAAkB,IAClBE,GAAmB,GACnBE,EAAwB,IACxBE,EAAsB,IACtBE,GAAqB,GACrB1U,EAAoB,MACpB4U,GAAoB,GACpB11B,EAAU,KAGZjJ,qBAAU,WAAM,4CACd,gCAAAjC,EAAA,yDACO4B,EAAM03B,KADb,wDAIMuH,EAAWj/B,EAAM03B,KAAKwH,WACtBC,EAASn/B,EAAM03B,KAAK0H,UAL1B,SAMyBzjC,EACpBqK,IACC,+DACEi5B,EACA,eACAE,GAEH76B,OAAM,WACLvC,EAAS,iCAAkC,CAAEa,WAAY,UACzDy8B,OAfN,OAiB+B,KAXvBtiC,EANR,QAiBeC,KAAKmC,SAChB4C,EAAS,iCAAkC,CAAEa,WAAY,UACzDy8B,KAEFf,EAAkBvhC,EAASC,MArB7B,4CADc,uBAAC,WAAD,wBAwBdsW,KACC,CAACtT,EAAMs/B,cAEV,IAiCMD,EAAY,WAChBj7B,IACApE,EAAMu/B,eAGF9Q,EAAe,SAAChyB,GAGpB,GAFAA,EAAE6F,iBACF7F,EAAE8F,mBACEw8B,EAGJ,GAAK5U,EAIL,GAAK9gB,EAIL,GAAIm2B,MAAMn2B,GACRtH,EAAS,4BAA6B,CAAEa,WAAY,cADtD,CAIA,IACI68B,EAAan5B,SADR,GAAK+C,GAEVo2B,GAAc,EAChB19B,EAAS,4BAA6B,CAAEa,WAAY,WAGtDunB,EAAiBvY,SAAW6tB,EAC5Bz/B,EAAM0/B,cAAcvV,GACpB/lB,UAfErC,EAAS,8BAA+B,CAAEa,WAAY,eAJtDb,EAAS,2BAA4B,CAAEa,WAAY,WAsBvD,OACE,eAACiH,GAAA,EAAD,2BACM7J,GADN,IAEE+J,kBAAgB,gCAChBC,UAAQ,EACR21B,YAAU,EACV1zB,OAAQozB,EALV,UAOE,cAACx1B,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,wCAKF,cAACqK,GAAA,EAAMO,KAAP,UACE,eAAC3J,EAAA,EAAD,CAAM4B,SAAUosB,EAAhB,UACE,eAAChuB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,uBACA,cAAC,KAAD,CACEnB,GAAG,IACHqmB,SAAU,SAACC,GAAD,gBAAeA,EAAO7a,KAAtB,eAAiC6a,EAAOzoB,OAClDyC,SAAU,SAAC9C,GACTgiC,GAAoB,GACpBvZ,EAAmBzoB,GACnB4hC,EAAsB,IACtBF,EAAwB,IACpB1hC,EAAKmC,OAAS,EACZnC,EAAK,GAAGqM,QAAU,EA9Fd,SAACu2B,EAAaC,GACpC,GAAK7/B,EAAM03B,KAAX,CAGA,IAAIoI,EAAYzgC,IAChB,GAAKygC,EAAL,CAGA,IAAIb,EAAWj/B,EAAM03B,KAAKwH,WACtBC,EAASn/B,EAAM03B,KAAK0H,UACxBzjC,EACGqK,IACC,sDACE85B,EACA,aACAb,EACA,eACAE,EACA,qBACAS,EACA,gBACAC,GAEHl9B,MAAK,SAAC6V,GACmB,GAApBA,EAAKxb,KAAKmC,OACZ6/B,GAAoB,GAEpBJ,EAAsBpmB,EAAKxb,SAG9BsH,OAAM,kBAAM06B,GAAoB,QAiEnBe,CAAgB/iC,EAAK,GAAGgjC,eAAgBhjC,EAAK,GAAGijC,YAEhD7V,EAAoBptB,EAAK,IAG3BotB,EAAoB,OAGxBrrB,QAASs/B,EACTz+B,YAAY,uBACZmmB,SAAUP,OAGd,cAACpd,EAAA,EAAD,CAAKvF,UAAU,8BAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,kBAAM21B,GAAoBD,IAFrC,8BAQD/Y,EAAgBrmB,OAAS,GAAKo/B,GAC7B,eAACl2B,EAAA,EAAD,CAAK5D,MAAO,CAAEqX,gBAAiB,WAA/B,UACE,cAAC1T,EAAA,EAAD,CAAKvF,UAAU,8BAAf,kCAGA,eAACuF,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBAA6B2iB,EAAgB,GAAGva,QAChD,eAAC7C,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBAA6B2iB,EAAgB,GAAGnoB,QAChD,eAAC+K,EAAA,EAAD,CAAKvF,UAAU,MAAf,qBAA8B2iB,EAAgB,GAAG/Y,SACjD,eAACrE,EAAA,EAAD,CAAKvF,UAAU,MAAf,uBAAgC2iB,EAAgB,GAAGhS,WACnD,eAACpL,EAAA,EAAD,CAAKvF,UAAU,MAAf,4BACkB2iB,EAAgB,GAAGkK,eAErC,eAACtnB,EAAA,EAAD,CAAKvF,UAAU,MAAf,4BACkB2iB,EAAgB,GAAGmK,eAErC,eAACvnB,EAAA,EAAD,CAAKvF,UAAU,MAAf,gCACsB2iB,EAAgB,GAAGqK,mBAEzC,eAACznB,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBACU2iB,EAAgB,GAAG5B,gBAE7B,eAACxb,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBACU2iB,EAAgB,GAAG1B,gBAE7B,eAAC1b,EAAA,EAAD,CAAKvF,UAAU,MAAf,4BACkB2iB,EAAgB,GAAGsK,mBAKxCtK,EAAgBrmB,OAAS,GAAKqmB,EAAgB,GAAGnc,QAAU,GAC1D,8BACG01B,EACC,sBAAKt6B,MAAO,CAAEyb,MAAO,OAArB,gCACsBsF,EAAgB,GAAGnoB,KADzC,kGAMA,gCACE,eAACoD,EAAA,EAAKC,MAAN,WACE,eAACD,EAAA,EAAKE,MAAN,iCACsB6kB,EAAgB,GAAGnoB,KADzC,yEAIA,cAAC,KAAD,CACEmC,GAAG,IACHqmB,SAAU,SAACC,GAAD,gBAAeA,EAAO7a,KAAtB,eAAiC6a,EAAOzoB,OAClDyC,SAAU,SAAC9C,GACT0hC,EAAwB1hC,GACpBA,EAAKmC,OAAS,EAChBirB,EAAoBptB,EAAK,IAEzBotB,EAAoB,OAGxBrrB,QAAS4/B,EACT/+B,YAAY,uBACZmmB,SAAU0Y,OAGd,cAACr2B,EAAA,EAAD,CAAKvF,UAAU,8BAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,kBAAMi2B,GAAsBD,IAFvC,+CAWTJ,EAAqBt/B,OAAS,GAAK0/B,GAClC,eAACx2B,EAAA,EAAD,CAAK5D,MAAO,CAAEqX,gBAAiB,WAA/B,UACE,cAAC1T,EAAA,EAAD,CAAKvF,UAAU,8BAAf,8CAGA,eAACuF,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBAA6B47B,EAAqB,GAAGxzB,QACrD,eAAC7C,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBAA6B47B,EAAqB,GAAGphC,QACrD,eAAC+K,EAAA,EAAD,CAAKvF,UAAU,MAAf,qBAA8B47B,EAAqB,GAAGhyB,SACtD,eAACrE,EAAA,EAAD,CAAKvF,UAAU,MAAf,uBACa47B,EAAqB,GAAGjrB,WAErC,eAACpL,EAAA,EAAD,CAAKvF,UAAU,MAAf,4BACkB47B,EAAqB,GAAG/O,eAE1C,eAACtnB,EAAA,EAAD,CAAKvF,UAAU,MAAf,4BACkB47B,EAAqB,GAAG9O,eAE1C,eAACvnB,EAAA,EAAD,CAAKvF,UAAU,MAAf,gCACsB47B,EAAqB,GAAG5O,mBAE9C,eAACznB,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBACU47B,EAAqB,GAAG7a,gBAElC,eAACxb,EAAA,EAAD,CAAKvF,UAAU,MAAf,oBACU47B,EAAqB,GAAG3a,gBAElC,eAAC1b,EAAA,EAAD,CAAKvF,UAAU,MAAf,4BACkB47B,EAAqB,GAAG3O,mBAI9C,eAAC1nB,EAAA,EAAD,CAAKvF,UAAU,iBAAf,+BACqB,IAClBsnB,EAAmBA,EAAiB9sB,KAAO,uBAG9C,eAACoD,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKvF,UAAU,YAA/B,UACE,cAACpC,EAAA,EAAKE,MAAN,2CACA,cAAC0H,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC9H,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLf,SAAU,SAACrD,GAAD,OAAO6M,EAAU7M,EAAEuE,OAAOC,QACpCA,MAAOoI,SAKb,cAACvG,EAAA,EAAD,CAAQC,QAAQ,UAAU8F,QAAS4lB,EAAnC,qBAGA,cAAC3rB,EAAA,EAAD,CAAQC,QAAQ,YAAY8F,QAASw2B,EAArC,8BC9CKa,GAxPY,SAAClgC,GAAW,IAAD,EACIC,mBAAS,MADb,mBAC7B8mB,EAD6B,KACfC,EADe,OAEU/mB,mBAAS,MAFnB,mBAE7BkgC,EAF6B,KAEZC,EAFY,OAGIngC,oBAAS,GAHb,mBAG7BogC,EAH6B,KAGfC,EAHe,OAIkBrgC,mBAAS,IAJ3B,mBAI7BsgC,EAJ6B,KAIRC,EAJQ,OAMAvgC,mBAAS,IANT,mBAM7BwgC,EAN6B,KAMjBC,EANiB,OAOIzgC,mBAAS,IAPb,mBAO7B0gC,EAP6B,KAOfC,EAPe,OAQJ3gC,mBAAS,IARL,mBAQ7B2R,EAR6B,KAQnBC,EARmB,KAU5B9P,EAAaC,sBAAbD,SAER1B,qBAAU,WACR,IAAI8e,EAAe,IAAIC,SACnByhB,EAAWxhC,IACE,OAAbwhC,IAGJ1hB,EAAaE,OAAO,WAAYwhB,GAEM,eAAlCphC,IAAuBs4B,OACzBp8B,EACG6G,KAAK,oCAAqC2c,GAC1Cxc,MAAK,SAAC6V,GACL4nB,EAAmB5nB,EAAKxb,SAEzBsH,OAAM,kBACLvC,EAAS,yBAA0B,CAAEa,WAAY,aAGjD5C,EAAM03B,OACRvY,EAAaE,OAAO,aAAcrf,EAAM03B,KAAKwH,YAC7CvjC,EACG6G,KAAK,wCAAyC2c,GAC9Cxc,MAAK,SAAC6V,GACL4nB,EAAmB5nB,EAAKxb,SAEzBsH,OAAM,kBACLvC,EAAS,yBAA0B,CAAEa,WAAY,iBAIxD,CAAC5C,EAAM03B,OAEVr3B,qBAAU,WACR,GAAK0mB,EAAL,CAIA,IAAI5H,EAAe,IAAIC,SACnByhB,EAAWxhC,IACE,OAAbwhC,IAGJ1hB,EAAaE,OAAO,WAAYwhB,GAChC1hB,EAAaE,OAAO,YAAarf,EAAM03B,KAAK0H,WAC5CjgB,EAAaE,OAAO,OAAQ3S,KAAOqa,GAAc+Z,WAEjDnlC,EACG6G,KAAK,0CAA2C2c,GAChDxc,MAAK,SAAC6V,GACLgoB,EAAuBhoB,EAAKxb,SAE7BsH,OAAM,kBACLvC,EAAS,uCAAwC,CAC/Ca,WAAY,mBAnBhB49B,EAAuB,MAsBxB,CAACzZ,IAsDJ,OACE,eAACld,GAAA,EAAD,2BACM7J,GADN,IAEE+J,kBAAgB,gCAChBC,UAAQ,EACR21B,YAAU,EAJZ,UAME,cAAC91B,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,4CAKF,eAACqK,GAAA,EAAMO,KAAP,WACE,cAAChC,EAAA,EAAD,CAAKvF,UAAU,YAAf,SACE,eAAC0Z,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,kCAEF,cAAC3Z,EAAA,EAAD,CAAQ+F,QAAS,kBAAMy3B,GAAiBD,IAAxC,4BAKHA,GACC,gCACE,cAACj4B,EAAA,EAAD,CAAKvF,UAAU,YAAf,wBACEs9B,EAAkBA,EAAgBY,SAAW,IAAIn6B,KACjD,SAAC3F,EAAO4J,GACN,OACE,eAACzC,EAAA,EAAD,CAAKvF,UAAU,YAAf,UACGgI,EAAQ,EADX,oBAC+B,IAC5B6B,KAAOzL,EAAM2R,WAAWhG,OAAO,eAFlC,MAEqD,IAClDF,KAAOzL,EAAM4R,SAASjG,OAAO,iBAHA/B,EAAQ,QAQ9C,cAACzC,EAAA,EAAD,CAAKvF,UAAU,YAAf,wBACEs9B,EAAkBA,EAAgBa,YAAc,IAAIp6B,KACpD,SAAC3F,EAAO4J,GACN,OACE,eAACzC,EAAA,EAAD,CAAKvF,UAAU,YAAf,UACG5B,EAAMqR,QADT,KACoBrR,EAAM2R,UAD1B,MACwC3R,EAAM4R,UADdhI,SAQ1C,cAACpK,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKvF,UAAU,iBAA/B,SACE,eAAC0Z,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,sCAEF,cAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAIsxB,KACJ9J,eAAe,EACflK,SAAUgB,EACVka,QAASt1B,KAAKE,MACdqkB,WAAW,aACXpwB,SAAU,SAAC0L,GAAD,OAAUwb,EAAgBxb,IACpC2kB,aAAW,WAMlBoQ,EAAoBphC,OAAS,GAC5B,gCACE,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,YAAf,4CACC09B,EAAoB35B,KAAI,SAAC3F,EAAO4J,GAC/B,OACE,eAACzC,EAAA,EAAD,CAAKvF,UAAU,YAAf,UACGgI,EAAQ,EADX,UACqB6B,KAAOzL,EAAM2R,WAAWhG,OAAO,SADpD,MACiE,IAC9DF,KAAOzL,EAAM4R,SAASjG,OAAO,WAFA/B,EAAQ,WAQhD,cAACzC,EAAA,EAAD,CAAKvF,UAAU,iBAAf,SACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,4BAEF,cAAChc,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLjB,YAAY,QACZqB,MAAOw/B,EACP3gC,SAAU,SAACrD,GAAD,OAAOikC,EAAcjkC,EAAEuE,OAAOC,UAE1C,cAACR,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLjB,YAAY,UACZqB,MAAO0/B,EACP7gC,SAAU,SAACrD,GAAD,OAAOmkC,EAAgBnkC,EAAEuE,OAAOC,iBAKlD,cAACmH,EAAA,EAAD,CAAKvF,UAAU,iBAAf,SACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,+BAEF,cAAChc,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLI,MAAO2Q,EACP9R,SAAU,SAACrD,GAAD,OAAOoV,EAAYpV,EAAEuE,OAAOC,iBAM9C,cAACmH,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,cAACC,EAAA,EAAD,CAAQ+F,QAAS,kBA3KC,WACxB,GAAKke,EAIL,GAAIyY,MAAMiB,GACR1+B,EAAS,sBAAuB,CAAEa,WAAY,eAEzC,GAAI48B,MAAMmB,GACf5+B,EAAS,sBAAuB,CAAEa,WAAY,eAEzC,GAAI48B,MAAM5tB,GACf7P,EAAS,oBAAqB,CAAEa,WAAY,cADvC,CAIP,IAAIs+B,EAAQ56B,SAASm6B,GACjBU,EAAU76B,SAASq6B,GACnBS,EAAY96B,SAASsL,GACzB,GAAIsvB,EAAQ,GAAKA,EAAQ,IAAMC,EAAU,GAAKA,EAAU,GACtDp/B,EAAS,sBAAuB,CAAEa,WAAY,eAGhD,GAAIw+B,EAAY,GAAKA,EAAY,IAC/Br/B,EAAS,oBAAqB,CAAEa,WAAY,cAD9C,CAIA,IAAIy+B,EAA6B,GAARH,EAAa,GAAK,IAAiB,GAAVC,EAAe,IAE7DhiB,EAAe,IAAIC,SACnByhB,EAAWxhC,IACE,OAAbwhC,IAGJ1hB,EAAaE,OAAO,WAAYwhB,GAChC1hB,EAAaE,OAAO,YAAarf,EAAM03B,KAAK0H,WAC5CjgB,EAAaE,OAAO,aAAcrf,EAAM03B,KAAKwH,YAC7C/f,EAAaE,OACX,OACA3S,KAAOqa,GAAc+Z,UAAYO,GAEnCliB,EAAaE,OAAO,WAAY+hB,GAChCzlC,EACG6G,KAAK,uCAAwC2c,GAC7Cxc,MAAK,WACJZ,EAAS,yBAA0B,CAAEa,WAAY,YACjD5C,EAAMshC,gBAEPh9B,OAAM,SAACkU,GACNzW,EAASyW,EAAKzb,SAASC,KAAM,CAAE4F,WAAY,oBA9C7Cb,EAAS,eAAgB,CAAEa,WAAY,UAyKZ2+B,IAAvB,gCCpBKC,OA3Nf,WAA8B,IAAD,EACqBvhC,mBAAS,IAD9B,mBACpBkqB,EADoB,KACFC,EADE,OAEOnqB,oBAAS,GAFhB,mBAEpByf,EAFoB,KAETC,EAFS,OAG2B1f,oBAAS,GAHpC,mBAGpBwhC,EAHoB,KAGCC,EAHD,OAIWzhC,oBAAS,GAJpB,mBAIpB0hC,EAJoB,KAIPC,EAJO,OAKK3hC,mBAAS,MALd,mBAKpB4hC,EALoB,KAKVC,EALU,OAMK7hC,mBAAS,IANd,mBAMpBi7B,EANoB,KAMVC,EANU,OAOKl7B,mBAAS,IAPd,mBAOpB8hC,EAPoB,KAOVC,EAPU,KASrBx7B,EAAWy7B,cACXljB,EAAUC,cAERjd,EAAaC,sBAAbD,SAER1B,qBAAU,WAC8B,kBAAlCZ,IAAuBs4B,OACzBiK,EAAY,WAC+B,eAAlCviC,IAAuBs4B,OAChCiK,EAAY,gBAEZA,EAAY,eAEd,IAAI7iB,EAAe,IAAIC,SACvB,IAAK5Y,EAAS9I,MAAM4hB,cAKlB,OAJAvd,EAAS,iDAAkD,CACzDa,WAAY,eAEdmc,EAAQ9C,KAAK,KAGf,IAAIimB,EAAU17B,EAAS9I,MAAM4hB,cAC7BH,EAAaE,OAAO,KAAM6iB,GAE1BvmC,EACG6G,KAAK,oCAAqC2c,GAC1Cxc,MAAK,SAAC6V,GACLspB,EAAYtpB,EAAKxb,SAElBsH,OAAM,WACLvC,EAAS,oBAAqB,CAAEa,WAAY,UAC5Cmc,EAAQ9C,KAAK,UAEhB,IAEH,IAiBMkmB,EAAa,WACjB,IAAIC,EAAiBP,EAASriC,GAC9B7D,EACG6G,KAAK,uCAAwC,CAC5C6/B,OAAQD,EACRz3B,aAAcwf,EACdwN,KAAMuD,IAEPv4B,MAAK,WACJZ,EAAS,wBAAyB,CAAEa,WAAY,YAChD8+B,GAAuB,GACvB3iB,EAAQ9C,KAAK,QAEd3X,OAAM,SAACkU,GACN4R,EAAoB,IACpBroB,EAASyW,EAAKzb,SAASC,KAAM,CAAE4F,WAAY,cAIjD,OACE,gCACE,sBAAK6B,MAAO,CAAEqX,gBAAiB,WAA/B,UACE,cAAC1T,EAAA,EAAD,CAAKvF,UAAU,sDAAf,SACE,qBAAI4B,MAAO,CAAEyb,MAAO,WAApB,4CAC2B2hB,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAU5iB,aAGvC,cAAC7W,EAAA,EAAD,CAAKvF,UAAU,iDAAf,SACE,oBAAI4B,MAAO,CAAEyb,MAAO,WAApB,gBAAkC2hB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAUthB,aAG9C,cAACnY,EAAA,EAAD,CAAKvF,UAAU,kDAAf,SACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAACH,EAAA,EAAD,CACEvF,UAAU,yDACV4B,MAAO,CAAEqX,gBAAiB,WAF5B,UAIE,cAACzT,EAAA,EAAD,UACE,oBAAGxF,UAAU,cAAb,mBACS6J,KAAM,OAACm1B,QAAD,IAACA,OAAD,EAACA,EAAUnsB,OAAO9I,OAAO,oBAG1C,cAACvE,EAAA,EAAD,UACE,oBAAGxF,UAAU,cAAb,kBAEG6J,KAAM,OAACm1B,QAAD,IAACA,OAAD,EAACA,EAAUnsB,OAAO9I,OAAO,WAFlC,IAGGF,KAAM,OAACm1B,QAAD,IAACA,OAAD,EAACA,EAAUlsB,KAAK/I,OAAO,gBAGlC,cAACvE,EAAA,EAAD,UACE,oBAAGxF,UAAU,cAAb,2BAAmCg/B,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAUp1B,kBAMrD,cAACrE,EAAA,EAAD,CAAKvF,UAAU,iDAAf,SACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC9H,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,CACE+H,GAAIL,IACJvF,UAAU,kDAFZ,UAIE,cAACpC,EAAA,EAAKE,MAAN,UACE,qBAAI8D,MAAO,CAAEyb,MAAO,WAApB,yCAC+B6hB,OAGjC,cAACthC,EAAA,EAAKG,QAAN,CACE6H,GAAG,WACHsM,KAAK,IACL1X,KAAK,UACL4D,MAAOi6B,EACPp7B,SAAU,SAACrD,GAAD,OAAO0+B,EAAY1+B,EAAEuE,OAAOC,mBAMhD,cAACmH,EAAA,EAAD,CAAKvF,UAAU,iDAAf,SACE,eAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,UACE,eAACH,EAAA,EAAD,CAAKvF,UAAU,4CAAf,UACE,qBAAK4B,MAAO,CAAEyb,MAAO,SAArB,8BACA,cAACpd,EAAA,EAAD,CACE8F,KAAK,KACLC,QAAS,WACP8W,GAAa,GACbiiB,GAAgBD,IAJpB,yBAUAxX,GAAsC,IAAIvjB,KAAI,SAAC3F,EAAO4J,GACtD,OACE,eAACzC,EAAA,EAAD,CACEvF,UAAU,sDADZ,UAIE,sBAAK4B,MAAO,CAAEyb,MAAO,SAArB,uBACajf,EAAMgK,KADnB,MAC4BhK,EAAM5D,KADlC,mCAEqB4D,EAAM2Q,YAE3B,cAAC9O,EAAA,EAAD,CACE+F,QAAS,WAEP,IADA,IAAIy5B,EAAW,GACNpwB,EAAI,EAAGA,EAAIiY,EAAiBhrB,OAAQ+S,IACvCA,GAAKrH,GAAOy3B,EAASrmB,KAAKkO,EAAiBjY,IAEjDkY,EAAoBkY,IANxB,sBANKrhC,EAAMgK,SAqBjB,cAAC7C,EAAA,EAAD,CAAKvF,UAAU,iDAAf,SACE,qBAAK4B,MAAO,CAAEyb,MAAO,WAArB,oCAEF,eAAC9X,EAAA,EAAD,CAAKvF,UAAU,sDAAf,UACE,cAACC,EAAA,EAAD,CACE+F,QAAS,WACP64B,GAAuB,IAF3B,qDAOA,eAAC5+B,EAAA,EAAD,CAAQ+F,QAAS,kBAAMs5B,KAAvB,UACG,IADH,sDASR,cAAC,GAAD,CACEhyB,KAAMuP,EACNgY,KAAMmK,EACNtC,YAjJY,WAChB5f,GAAa,IAiJT+f,cA/JQ,SAAC6C,GACb,IAAK,IAAIrwB,EAAI,EAAGA,EAAIiY,EAAiBhrB,OAAQ+S,IAC3C,GAAIiY,EAAiBjY,GAAG+tB,aAAesC,EAAQtC,WAI7C,YAHAl+B,EAAS,6CAA8C,CACrDa,WAAY,UAKlBunB,EAAiBlO,KAAKsmB,GACtB5iB,GAAa,IAsJT2f,YAAaqC,IAEf,cAAC,GAAD,CACExxB,KAAMsxB,EACN/J,KAAMmK,EACN51B,OAAQ,kBAAMy1B,GAAuB,IACrCJ,WAAY,WACVI,GAAuB,GACvBS,WC3FKK,OA5Hf,SAAuBxiC,GAAQ,IAAD,EACIC,mBAAS,MADb,mBACrBwiC,EADqB,KACXC,EADW,OAEAziC,mBAAS,MAFT,mBAErBi+B,EAFqB,KAEbyE,EAFa,OAGE1iC,mBAAS,QAHX,mBAGrB2iC,EAHqB,KAGZC,EAHY,KAIpB9gC,EAAaC,sBAAbD,SAqDR,OAnDA1B,qBAAU,WACRsiC,EAAU,MACVD,EAAY,MACZG,EAAW,UACV,CAAC7iC,EAAMmQ,OAgDR,eAACtG,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,+CAIF,cAACqK,GAAA,EAAMO,KAAP,CAAY3B,GAAIL,IAAKvF,UAAU,6BAA/B,SACE,eAACwF,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,eAAC0Z,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,4BAEF,cAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAIsxB,KACJ9J,eAAe,EACflK,SAAU0c,EACVvS,WAAW,aACXpwB,SAAU,SAAC0L,GAAD,OAAUk3B,EAAYl3B,IAChC2kB,aAAW,SAKjB,cAAC/nB,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,eAAC0Z,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,0BAEF,cAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAIsxB,KACJ9J,eAAe,EACflK,SAAUmY,EACVhO,WAAW,aACXpwB,SAAU,SAAC0L,GAAD,OAAUm3B,EAAUn3B,IAC9B2kB,aAAW,SAKjB,cAAC/nB,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACE,eAAC0Z,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,sBAEF,eAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAO2hC,EACP9iC,SAAU,SAACiB,GAAD,OAAW8hC,EAAW9hC,EAAMC,OAAOC,QAC7C5D,KAAK,UAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,gCAMV,cAAC4I,GAAA,EAAMmC,OAAP,UACE,cAAClJ,EAAA,EAAD,CAAQ+F,QA1GE,WACd,GAAK45B,EAGE,GAAKvE,EAGL,GAAgB,SAAZ0E,EAKX,GAAIH,EAAS32B,WAAaoyB,EAAOpyB,UAC/B/J,EAAS,0BAA2B,CAAEa,WAAY,cADpD,CAKA,IAAIkgC,EAASzjC,IACb,GAAKyjC,EAAL,CAKA,IAAIn5B,EAAY8F,KAAKC,MAAM+yB,EAAS32B,WAChC6Q,EAAUlN,KAAKC,MAAMwuB,EAAOpyB,WAEhC,GAAIY,KAAOf,KAAKE,OAASa,KAAO/C,GAC9B5H,EAAS,8CAA+C,CACtDa,WAAY,cAFhB,CAOA,IAAI+qB,EAAgB,IAAIC,gBACxBD,EAActO,OAAO,KAAMyjB,GAC3BnV,EAActO,OAAO,QAAS1V,GAC9BgkB,EAActO,OAAO,MAAO1C,GAC5BgR,EAActO,OAAO,OAAQujB,GAE7BjnC,EACGqK,IAAI,iCAAkC,CAAE+I,OAAQ4e,IAChDhrB,MAAK,kBAAM3C,EAAM+iC,oBACjBz+B,OAAM,SAAC5H,GAAD,OAAWqF,EAASrF,EAAMK,SAASC,KAAM,CAAE4F,WAAY,mBAvB9Db,EAAS,6BAA8B,CAAEa,WAAY,eAXrDb,EAAS,yBAA0B,CAAEa,WAAY,eAHjDb,EAAS,wBAAyB,CAAEa,WAAY,eAHhDb,EAAS,0BAA2B,CAAEa,WAAY,WAwGhD,mCC3BOogC,OAzFf,WAA4B,IAAD,EACO/iC,mBAAS,IADhB,mBAClBiV,EADkB,KACRC,EADQ,OAESlV,oBAAS,GAFlB,mBAElByf,EAFkB,KAEPC,EAFO,KAGjB5d,EAAaC,sBAAbD,SA+BR,OA7BA1B,qBAAU,WACR,IAAIyiC,EAASzjC,IACRyjC,EAILnnC,EACGqK,IAAI,2CAA6C88B,GACjDngC,MAAK,SAAC6V,GAAD,OAAUrD,EAAYqD,EAAKxb,SAChCsH,OAAM,kBAAM6Q,EAAY,OANzBpT,EAAS,6BAA8B,CAAEa,WAAY,YAOtD,IAoBD,qBAAKC,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,SACE,eAAC0D,EAAA,EAAD,CAAKvF,UAAU,2DAAf,UACE,eAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,UACE,cAACH,EAAA,EAAD,CAAKvF,UAAU,sDAAf,SACE,oBAAIA,UAAU,oBAAd,sCAEF,cAACuF,EAAA,EAAD,CAAKvF,UAAU,sDAAf,SACE,cAACC,EAAA,EAAD,CAAQ+F,QAzBC,WACjB8W,GAAa,IAwBwB/W,KAAK,KAAlC,0BAKDsM,EAAStO,KAAI,SAAC3F,EAAO4J,GACpB,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,sDADZ,SAIE,cAACwF,EAAA,EAAD,UACE,cAACgI,GAAA,EAAD,CAAMkT,OAAK,EAAC1gB,UAAU,iBAAtB,SACE,eAACwN,GAAA,EAAKjG,KAAN,WACE,cAACiG,GAAA,EAAKlG,MAAN,UACG,SACCuC,KAAOzL,EAAMyU,OAAO9I,OAAO,eAC3B,UACAF,KAAOzL,EAAM0U,KAAK/I,OAAO,iBAE7B,cAACyD,GAAA,EAAKoM,KAAN,UAAY,SAAWxb,EAAMuU,cAC7B,cAACnF,GAAA,EAAKoM,KAAN,UAAY,WAAaxb,EAAMwU,eACA,cAA9BxU,EAAMwU,aAAasiB,QAClB,eAAC1nB,GAAA,EAAKoM,KAAN,kCACuBxb,EAAMgiC,uBAfhCp4B,SA0Bb,cAAC,GAAD,CACEsF,KAAMuP,EACNqjB,eA1DgB,WACtB,IAAID,EAASzjC,IACRyjC,GAILnnC,EACGqK,IAAI,2CAA6C88B,GACjDngC,MAAK,SAAC6V,GAAD,OAAUrD,EAAYqD,EAAKxb,SAChCsH,OAAM,kBAAM6Q,EAAY,OAC3BwK,GAAa,IAPX5d,EAAS,6BAA8B,CAAEa,WAAY,WAwDjDqJ,OAAQ,WACN0T,GAAa,YCLVujB,OA7Ef,WAAiC,IAAD,IACMjjC,mBAAS,IADf,mBACvBkjC,EADuB,KACXC,EADW,OAEMnjC,mBAAS,GAFf,mBAEvBojC,EAFuB,KAEXC,EAFW,KAGtBvhC,EAAaC,sBAAbD,SAoBR,OAlBA1B,qBAAU,WACR,IAAIb,EAAKH,IACJG,EAIL7D,EACGqK,IAAI,+CAAiDxG,GACrDmD,MAAK,SAAC6V,GACL4qB,EAAc5qB,EAAKxb,MACnBqB,QAAQ4U,IAAIkwB,GACRA,EAAWhkC,OAAS,GACtBmkC,EAAc,MAGjBh/B,OAAM,kBAAM8+B,EAAc,OAZ3BrhC,EAAS,mBAAoB,CAAEa,WAAY,YAa5C,IAGD,sBAAKC,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,iDAAf,SACE,cAAC,GAAD,CAAkBkY,MAAO,4BAE3B,cAAC3S,EAAA,EAAD,CAAKvF,UAAU,gEAAf,SACE,eAACwF,EAAA,EAAD,CACEE,GAAI,EACJ1F,UAAU,iBACV4B,MAAO,CAAEqX,gBAAiB,SAH5B,UAKE,cAAC1T,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,oBAAIA,UAAU,oBAAoB4B,MAAO,CAAE0b,UAAW,UAAtD,6BAIF,cAAC/X,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,eAAC0Z,GAAA,EAAD,WACE,cAACA,GAAA,EAAWC,QAAZ,UACE,cAACD,GAAA,EAAWE,KAAZ,iCAEF,cAAChc,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH5I,aAAc,EACdoB,MAAOoiC,EACPvjC,SAAU,SAACiB,GAAD,OAAWuiC,EAAcviC,EAAMC,OAAOC,QAJlD,SAMGkiC,EAAWv8B,KAAI,SAAC3F,EAAO4J,GACtB,OAAO,wBAAQ5J,MAAO4J,EAAf,SAAuB5J,EAAMsf,uBAK1C,UAAA4iB,EAAWE,UAAX,eAAwBrC,aACtBmC,EAAWE,GAAYrC,YACvB,IACFp6B,KAAI,SAAC3F,EAAO4J,GACZ,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,oDACV4B,MAAO,CAAEqX,gBAAiB,WAF5B,SAIE,gCACG7a,EAAMqR,QADT,KACoBrR,EAAM2R,UAD1B,MACwC3R,EAAM4R,QAD9C,qBCVD0wB,OAvDf,WAA8B,IAAD,EACOtjC,mBAAS,IADhB,mBACpBujC,EADoB,KACTC,EADS,KAEnB1hC,EAAaC,sBAAbD,SAgBR,OAdA1B,qBAAU,WACR,IAAIb,EAAKH,IACJG,EAIL7D,EACGqK,IAAI,2CAA6CxG,GACjDmD,MAAK,SAAC6V,GACLirB,EAAajrB,EAAKxb,SAEnBsH,OAAM,kBAAMm/B,EAAa,OAR1B1hC,EAAS,eAAgB,CAAEa,WAAY,YASxC,IAGD,sBAAKC,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,iDAAf,SACE,cAAC,GAAD,CAAkBkY,MAAO,yBAG3B,cAAC3S,EAAA,EAAD,CAAKvF,UAAU,gEAAf,SACE,eAACwF,EAAA,EAAD,CACEE,GAAI,EACJ1F,UAAU,iBACV4B,MAAO,CAAEqX,gBAAiB,SAH5B,UAKE,cAAC1T,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,qBAAIA,UAAU,oBAAoB4B,MAAO,CAAE0b,UAAW,UAAtD,4BACkBqjB,EAAYA,EAAUjjB,SAAW,UAG1C,OAATijB,QAAS,IAATA,OAAA,EAAAA,EAAWxC,aAAcwC,EAAUxC,YAAc,IAAIp6B,KACrD,SAAC3F,EAAO4J,GACN,OACE,cAACzC,EAAA,EAAD,CACEvF,UAAU,oDACV4B,MAAO,CAAEqX,gBAAiB,WAF5B,SAIE,gCACG7a,EAAMqR,QADT,KACoBrR,EAAM2R,UAD1B,MACwC3R,EAAM4R,QAD9C,qBC6EH6wB,OAnHf,WAA0B,IAAD,EACyBzjC,mBAAS,MADlC,mBAChB0jC,EADgB,KACEC,EADF,OAEG3jC,mBAAS,MAFZ,mBAEhB4jC,EAFgB,KAETC,EAFS,KAGf/hC,EAAaC,sBAAbD,SA4CR,OACE,sBAAKc,UAAU,gBAAgB4B,MAAO,CAAEC,UAAW,SAAnD,UACE,gCACE,cAAC0D,EAAA,EAAD,CAAKvF,UAAU,8BAAf,SACE,oBAAIA,UAAU,oBAAd,8BAGF,cAACuF,EAAA,EAAD,CAAKvF,UAAU,4CAAf,SACE,cAACpC,EAAA,EAAD,CACE4B,SAAU,SAACtB,GAAD,OAAWA,EAAMuB,kBAC3BO,UAAU,eAFZ,SAIE,eAACpC,EAAA,EAAKC,MAAN,CACE+H,GAAIL,IACJvF,UAAU,gDAFZ,UAIE,cAACpC,EAAA,EAAKE,MAAN,kCAEA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLjB,YAAY,iBACZqB,MAAO4iC,EACP/jC,SAAU,SAACiB,GAAD,OAAW+iC,EAAS/iC,EAAMC,OAAOC,UAE7C,cAACmH,EAAA,EAAD,CAAKvF,UAAU,OAAf,SACE,cAACC,EAAA,EAAD,CAAQ+F,QAAS,kBAnEb,WAChB,IAAIsW,EAAe,IAAIC,SACnByhB,EAAWxhC,IACE,OAAbwhC,IAGJ1hB,EAAaE,OAAO,WAAYwhB,GAChC1hB,EAAaE,OAAO,QAASwkB,GAE7BloC,EACG6G,KAAK,6CAA8C2c,GACnDxc,MAAK,SAAC6V,GACLorB,EAAoBprB,EAAKxb,SAE1BsH,OAAM,SAACkU,GACNzW,EAASyW,EAAKzb,SAASC,KAAKC,QAAS,CAAE2F,WAAY,UACnDghC,EAAoB,UAmDWG,IAAvB,gCAOV,cAAC37B,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACG8gC,GACC,cAACt7B,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAAC8H,GAAA,EAAD,CAAMkT,OAAK,EAAC1gB,UAAU,iBAAtB,UACE,eAACwN,GAAA,EAAKjG,KAAN,WACE,eAACiG,GAAA,EAAKlG,MAAN,8BACmBw5B,EAAiBK,iBAEpC,eAAC3zB,GAAA,EAAKoM,KAAN,+BACoB,IACjB/P,KAAOi3B,EAAiBM,iBAAiBr3B,OACxC,kBAGJ,eAACyD,GAAA,EAAKoM,KAAN,0CAC+B,IAC5B/P,KAAOi3B,EAAiBzU,YAAYtiB,OAAO,kBAE9C,eAACyD,GAAA,EAAKoM,KAAN,6BACkBknB,EAAiBhe,gBAEnC,eAACtV,GAAA,EAAKoM,KAAN,2BACgBknB,EAAiB1D,iBAGnC,cAAC73B,EAAA,EAAD,CAAKvF,UAAU,gDAAf,SACE,cAACC,EAAA,EAAD,CAAQ+F,QAAS,kBAhFd,WACf,IAAIsW,EAAe,IAAIC,SACnByhB,EAAWxhC,IACE,OAAbwhC,IAGJ1hB,EAAaE,OAAO,WAAYwhB,GAChC1hB,EAAaE,OAAO,QAASwkB,GAE7BloC,EACG6G,KAAK,0CAA2C2c,GAChDxc,MAAK,SAAC6V,GACLzW,EAASyW,EAAKxb,KAAM,CAAE4F,WAAY,YAClCghC,EAAoB,MACpBE,EAAS,OAEVx/B,OAAM,SAACkU,GACNzW,EAASyW,EAAKzb,SAASC,KAAKC,QAAS,CAAE2F,WAAY,UACnDghC,EAAoB,UA8DWM,IAAvB,yCCkDDC,OAvJf,SAAsBnkC,GAAQ,IAAD,EACHC,mBACtB,CACEsD,UAAW,GACXC,SAAU,GACV/B,MAAO,GACPC,SAAU,GACV+B,eAAgB,GAChBC,UAAW,GACXC,KAAM,GACNC,OAAQ,GACRC,QAAS,KAXc,mBACpBlC,EADoB,KACdC,EADc,KAcnBG,EAAaC,sBAAbD,SAGFE,EAAW,SAACC,EAAOjB,GACvBW,EAAQ,2BACHD,GADE,kBAEJO,EAAQjB,MA6BP+C,EAAkB,WACtB,IAAMC,EAAUC,EAAYvC,GAC5BhG,EACG6G,KAAK,cAAeyB,GACpBtB,MAAK,WACJf,EAAQ,IACR5B,EAAM4lB,YACN5lB,EAAMiM,SACNlK,EAAS,2BAA4B,CAAEa,WAAY,eAEpD0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAI7CsB,EAAc,WAClB,IAAIK,EAAU,CACZZ,KAAMhC,EAAI,KACViC,OAAQjC,EAAI,OACZkC,QAASlC,EAAI,SAGXsC,EAAO,2BACNtC,GADM,IAET4C,QAASA,EACTC,SAAUxE,EAAMokC,WAOlB,cAJOngC,EAAO,YACPA,EAAO,cACPA,EAAO,QAEPA,GAGT,OACE,eAAC4F,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,qBACWQ,EAAMokC,cAGnB,cAACv6B,GAAA,EAAMO,KAAP,UACE,eAAC3J,EAAA,EAAD,CAAM2B,YAAU,EAACC,SAxDF,SAACtB,GAIpB,GAHAA,EAAMuB,iBACNvB,EAAMwB,kBAbCnD,EAAS,UAAcuC,EAAI,YAC7BvC,EAAS,SAAauC,EAAI,WAC1BvC,EAAS,MAAUuC,EAAI,QACvBvC,EAAS,SAAauC,EAAI,WAC1BvC,EAAS,SAAauC,EAAI,iBAC1BvC,EAAS,UAAcuC,EAAI,YAC3BvC,EAAS,KAASuC,EAAI,OACtBvC,EAAS,OAAWuC,EAAI,SACxBvC,EAAS,QAAYuC,EAAI,SAOV,CAClB,GAAIA,EAAI,WAAiBA,EAAI,eAE3B,YADAI,EAAS,yBAA0B,CAAEa,WAAY,YAGnDoB,MA+CE,UACE,eAACoE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,YAAalB,EAAMC,OAAOC,YAG5D,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,WAAYlB,EAAMC,OAAOC,eAI7D,eAACmH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,QAASlB,EAAMC,OAAOC,YAGxD,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAACzD,EAAD,CACEhF,SAAU,SAACiB,GAAD,OAAWkB,EAAS,YAAalB,EAAMC,OAAOC,eAI9D,eAACmH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,WAAYlB,EAAMC,OAAOC,YAG3D,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACElL,KAAK,kBAAkByC,SAAU,SAACiB,GAAD,OAAWkB,EAAS,iBAAkBlB,EAAMC,OAAOC,eAI1F,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,OAAQlB,EAAMC,OAAOC,UAErD,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,SAAUlB,EAAMC,OAAOC,UAEvD,cAAC,EAAD,CACEnB,SAAU,SAACiB,GAAD,OAAWkB,EAAS,UAAWlB,EAAMC,OAAOC,UAExD,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,yBAKJ,cAACgJ,GAAA,EAAMmC,OAAP,SC0BSq4B,OA3Kf,SAAuBrkC,GAAQ,IAAD,EACJC,mBAAS,IADL,mBACrB0B,EADqB,KACfC,EADe,KAGpBG,GADQgC,iBAAO,MACF/B,sBAAbD,UAoBFE,EAAW,SAACC,EAAOjB,GACvBW,EAAQ,2BACHD,GADE,kBAEJO,EAAQjB,MAqCPmzB,EAAiB,WACrB,IAAMnwB,EAAUC,EAAYvC,GAC5BtD,QAAQ4U,IAAIhP,GACZtI,EACGoN,IAAI,cAAgB/I,EAAMzC,KAAKiC,GAAIyE,GACnCtB,MAAK,WACJf,EAAQ,IACR5B,EAAM4lB,YACN5lB,EAAMiM,SACNlK,EAAS,6BAA8B,CAAEa,WAAY,eAEtD0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAI7CsB,EAAc,WAClB,IAAIK,EAAO,2BACNvE,EAAMzC,KAAKgH,SADL,IAETZ,KAAMhC,EAAI,KACViC,OAAQjC,EAAI,OACZkC,QAASlC,EAAI,UAGXsC,EAAO,2BACNtC,GADM,IAET4C,QAASA,EACTC,SAAUxE,EAAMokC,WAOlB,cAJOngC,EAAO,YACPA,EAAO,cACPA,EAAO,QAEPA,GAGT,OACE,eAAC4F,GAAA,EAAD,2BACM7J,GADN,IAEE+J,kBAAgB,gCAChBC,UAAQ,EACRqqB,OApDgB,WAClB,IAAIpwB,EAAO,2BACNjE,EAAMzC,MADA,IAEToG,KAAM3D,EAAMzC,KAAKgH,QAAQZ,KACzBC,OAAQ5D,EAAMzC,KAAKgH,QAAQX,OAC3BC,QAAS7D,EAAMzC,KAAKgH,QAAQV,UAE9BjC,EAAQqC,IAyCR,UAME,cAAC4F,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,kBACQQ,EAAMzC,KAAKgG,UAAY,IAAMvD,EAAMzC,KAAKiG,cAGlD,cAACqG,GAAA,EAAMO,KAAP,UACE,eAAC3J,EAAA,EAAD,CAAM2B,YAAU,EAACC,SAzEF,SAACtB,GAIpB,GAHAA,EAAMuB,iBACNvB,EAAMwB,kBAXCnD,EAAS,UAAcuC,EAAI,YAC7BvC,EAAS,SAAauC,EAAI,WAC1BvC,EAAS,MAAUuC,EAAI,QACvBvC,EAAS,UAAcuC,EAAI,YAC3BvC,EAAS,KAASuC,EAAI,OACtBvC,EAAS,OAAWuC,EAAI,SACxBvC,EAAS,QAAYuC,EAAI,SAOV,CAClB,GAAIA,EAAI,WAAiBA,EAAI,eAE3B,YADAI,EAAS,yBAA0B,CAAEa,WAAY,YAGnDwxB,MAgEE,UACE,eAAChsB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,YAAalB,EAAMC,OAAOC,QACxDpB,aAAgBG,EAAMzC,KAAKgG,UAAYvD,EAAMzC,KAAKgG,UAAY,OAGlE,cAAC8E,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,WAAYlB,EAAMC,OAAOC,QACvDpB,aAAgBG,EAAMzC,KAAKiG,SAAWxD,EAAMzC,KAAKiG,SAAW,UAIlE,eAAC4E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,CACEzI,SAAU,SAACiB,GAAD,OAAWkB,EAAS,QAASlB,EAAMC,OAAOC,QACpDpB,aAAgBG,EAAMzC,KAAKkE,MAAQzB,EAAMzC,KAAKkE,MAAQ,GACtD1B,UAAU,MAGd,cAACsI,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAACzD,EAAD,CACEhF,SAAU,SAACiB,GAAD,OAAWkB,EAAS,YAAalB,EAAMC,OAAOC,QACxDpB,aAAgBG,EAAMzC,KAAKmG,UAAY1D,EAAMzC,KAAKmG,UAAY,UAIpE,cAAC,EAAD,CACE5D,SAAU,SAACiB,GAAD,OAAWkB,EAAS,OAAQlB,EAAMC,OAAOC,QACnDpB,aAAgBG,EAAMzC,KAAKgH,QAAUvE,EAAMzC,KAAKgH,QAAQZ,KAAO,KAEjE,cAAC,EAAD,CACE7D,SAAU,SAACiB,GAAD,OAAWkB,EAAS,SAAUlB,EAAMC,OAAOC,QACrDpB,aAAgBG,EAAMzC,KAAKgH,QAAUvE,EAAMzC,KAAKgH,QAAQX,OAAS,KAEnE,cAAC,EAAD,CACE9D,SAAU,SAACiB,GAAD,OAAWkB,EAAS,UAAWlB,EAAMC,OAAOC,QACtDpB,aACIG,EAAMzC,KAAKgH,QAAUvE,EAAMzC,KAAKgH,QAAQV,QAAU,KAGxD,cAACf,EAAA,EAAD,CAAQC,QAAQ,UAAUlC,KAAK,SAA/B,yBAKJ,cAACgJ,GAAA,EAAMmC,OAAP,SC9KS,SAASs4B,GAAT,GAA2E,IAAxD/mC,EAAuD,EAAvDA,KAAMsL,EAAiD,EAAjDA,QAASksB,EAAwC,EAAxCA,UAAyBhL,GAAe,EAA7BiL,aAA6B,EAAfjL,aACzE,OACC,qBAAIlhB,QAASA,EAAb,UACC,6BAAKtL,EAAKgG,YACV,6BAAKhG,EAAKiG,WACV,6BAAKjG,EAAKkE,QACV,6BAAKlE,EAAKmG,YACV,6BAAKnG,EAAKgH,QAAQZ,KAAO,IAAMpG,EAAKgH,QAAQX,SAC5C,+BACC,cAACd,EAAA,EAAD,CAAQ+F,QAASksB,EAAjB,kBACA,cAACjyB,EAAA,EAAD,CAAQC,QAAQ,SAAS8F,QAASkhB,EAAlC,yBARyBxsB,EAAKiC,ICqInB+kC,OA/Hf,YAAyC,IAApBC,EAAmB,EAAnBA,gBAAmB,EACVvkC,oBAAS,GADC,mBAC/BmhB,EAD+B,KACvBC,EADuB,OAENphB,mBAAS,IAFH,mBAE/B8lB,EAF+B,KAErBoO,EAFqB,OAIZl0B,mBAAS,IAJG,mBAI/BwkC,EAJ+B,KAIxBC,EAJwB,OAKQzkC,mBAAS,IALjB,mBAK/B0kC,EAL+B,KAKdC,EALc,OAME3kC,oBAAS,GANX,mBAM/BoqB,EAN+B,KAMjBC,EANiB,OAOIrqB,oBAAS,GAPb,mBAO/Bs0B,EAP+B,KAOhBC,EAPgB,OAQQv0B,oBAAS,GARjB,mBAQ/Bw0B,EAR+B,KAQdC,EARc,OAUMz0B,oBAAS,GAVf,gCAWUA,oBAAS,IAXnB,mBAa9B8B,GAb8B,UAajBC,sBAAbD,UAER1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACyBzC,EAAIqK,IAAI,oBAAsB2+B,GAAiBrgC,OAAM,eAD9E,OACQvH,EADR,OAEE2nC,EAAW3nC,EAAWA,EAASC,KAAO,IAFxC,4CADc,uBAAC,WAAD,wBAKdutB,KACC,CAACnJ,EAAQujB,IAGZtkC,qBACE,WACEukC,EAAmBJ,KAErB,CAACA,IAGH,IAIMha,EAAc,WAClBnJ,GAAWD,IAoCb,OACE,eAAC/W,GAAA,EAAD,CAAW5F,MAAO,CAAEoU,UAAW,QAAUhW,UAAU,yBAAnD,UACE,eAACuF,EAAA,EAAD,CAAKvF,UAAU,6BAAf,UACE,eAACpC,EAAA,EAAKC,MAAN,CAAYgI,UAAU,iBAAtB,UACE,cAACjI,EAAA,EAAKE,MAAN,wBACA,eAACF,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAAS3I,SA9CJ,SAACiB,GAC7B6jC,EAAmB7jC,EAAMC,OAAOC,QA6CgCC,KAAKC,MAA/D,UACE,wBAAQF,MAAM,aAAd,wBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,gCAGJ,eAAC6B,EAAA,EAAD,CAAQC,QAAQ,YAAY0B,MAAO,CAAEwb,MAAO,QAASsG,OAAQ,QAAU1d,QAAS,kBAAMyhB,GAAgB,IAAtG,qBA9CuB,WAC3B,OAAQqa,GACN,IAAK,aACH,MAAO,aACT,IAAK,gBACH,MAAO,gBACT,IAAK,WACH,MAAO,WACT,IAAK,QACH,MAAO,eACT,IAAK,iBACH,MAAO,iBACT,QACE,MAAO,IAiC+GE,SAExH,eAACt6B,GAAA,EAAD,CAAOG,SAAO,EAACF,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,4CACA,2CACA,wCACA,8CACA,yCACA,8CAGJ,gCACGg6B,EAAM79B,KAAI,SAACrJ,GAAD,OACT,cAAC+mC,GAAD,CAEE/mC,KAAMA,EACNsL,QAAS,WAlCnBsrB,EAkCwC52B,IAC9Bw3B,UAAW,kBAAMP,GAAiB,IAClCzK,YAAa,kBAAM2K,GAAmB,KAJjCn3B,EAAKiC,YASlB,cAAC,GAAD,CAAc2Q,KAAMka,EAAcpe,OAAQ,kBAAMqe,GAAgB,IAAQ1E,UAAW4E,EAAa4Z,SAAUO,IAC1G,cAAC,GAAD,CAAa5pB,MAAO,UAAYgL,EAASxiB,UAAY,IAAMwiB,EAASviB,SAAU2M,KAAMskB,EAAiBxoB,OAAQ,kBAAMyoB,GAAmB,IAAQjE,SAvD/H,WACjB90B,EACG4T,OAAO,cAAgBwW,EAASvmB,IAChCmD,MAAK,WACJ6nB,IACAkK,GAAmB,GACnB3yB,EAAS,6BAA8B,CAAEa,WAAY,eAEtD0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,gBA+C/C,cAAC,GAAD,CAAeuN,KAAMokB,EAAeh3B,KAAMwoB,EAAU9Z,OAAQ,kBAAMuoB,GAAiB,IAAQ5O,UAAW4E,EAAa4Z,SAAUO,QClHpHG,GAPS,SAAA9kC,GACpB,OACI,yBCSO+kC,GATE,SAAA/kC,GACb,OACI,gCACI,cAAC,GAAD,gBACA,cAAC,GAAD,CAAWwkC,gBAAiB,aAA5B,mB,OCwgBGQ,OAvff,WAA0C,IAAD,EACL/kC,mBAAS,IAAI0L,MADR,mBAChChC,EADgC,KACrBC,EADqB,OAEL3J,mBAAS,MAFJ,mBAEhCuR,EAFgC,KAErBC,EAFqB,OAGGxR,mBAAS,MAHZ,mBAGhCglC,EAHgC,KAGjBC,EAHiB,OAIHjlC,mBAAS,IAJN,mBAIhCoX,EAJgC,KAIpBC,EAJoB,OAKTrX,mBAAS,IALA,mBAKhCwX,EALgC,KAKvBC,EALuB,OAMKzX,mBAAS,MANd,mBAMhCklC,EANgC,KAMhBC,EANgB,OAOJnlC,mBAAS,GAPL,mBAOhC6N,EAPgC,KAOrBC,EAPqB,OAQX9N,mBAAS,GARE,mBAQhC+N,EARgC,KAQxBC,EARwB,OASShO,mBAAS,IATlB,mBAShC2gB,EATgC,KASdC,EATc,OAUK5gB,mBAAS,IAVd,mBAUhC4X,EAVgC,KAUhBC,EAVgB,OAWS7X,oBAAS,GAXlB,oBAWhColC,GAXgC,MAWdC,GAXc,SAYXrlC,mBAAS,QAZE,qBAYhC+gB,GAZgC,MAYxBC,GAZwB,SAaXhhB,oBAAS,GAbE,qBAahCmhB,GAbgC,MAaxBC,GAbwB,SAcTphB,mBAAS,QAdA,qBAchCslC,GAdgC,MAcvBC,GAduB,SAeTvlC,oBAAS,GAfA,qBAehCwlC,GAfgC,MAevBC,GAfuB,SAgBXzlC,mBAAS,GAhBE,qBAgBhC2qB,GAhBgC,MAgBxBC,GAhBwB,SAiBP5qB,mBAAS,IAjBF,qBAiBhC6qB,GAjBgC,MAiBtBC,GAjBsB,MAkB/BhpB,GAAaC,sBAAbD,SA2NR,OAzNA1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IACxB,iBAAmB3G,IAAmB,WACtCiF,OAAM,eAHV,cACQrI,EADR,OAIE4uB,GAAY5uB,EAAUA,EAAQe,KAAO,GAJvC,kBAKSf,GALT,4CADc,uBAAC,WAAD,wBAQd+uB,KACC,IAEH3qB,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IAAI,gCAAkC4kB,IAAQtmB,OAAM,eADhF,cACQrI,EADR,OAEE8uB,GAAc9uB,EAAUA,EAAQe,KAAO,IAFzC,kBAISf,GAJT,4CADc,uBAAC,WAAD,wBAOdgvB,KACC,CAACL,KAEJvqB,qBAAU,WAAM,4CAGd,8BAAAjC,EAAA,6DACMuvB,EAAgB,IAAIC,iBACVvO,OAAO,OAAQ4lB,GAF/B,SAGwBtpC,EAAIqK,IAAI,sCAAuC,CACnE+I,OAAQ4e,IACPrpB,OAAM,eALX,cAMwB,MAHhBrI,EAHR,QAMc0pC,SACV5jC,GAAS9F,EAAQe,KAAM,CAAE4F,WAAY,UACrC0U,EAAc,KAEM,KAAlBrb,EAAQ0pC,SACiB,GAAvB1pC,EAAQe,KAAKmC,QACf4C,GAAS,oCAAqC,CAC5Ca,WAAY,YAGhB0U,EAAcrb,EAAQe,OAExBooC,EAAkB,MAClBttB,EAAkB,IAClBJ,EAAW,IApBb,kBAsBSzb,GAtBT,6CAHc,sBACO,MAAjBgpC,GADU,mCA2BdxsB,KACC,CAAC4sB,GAAkBJ,EAAe7jB,KAErC/gB,qBAAU,WAAM,4CAEd,8BAAAjC,EAAA,6DACMuvB,EAAgB,IAAIC,iBACVvO,OAAO,OAAQ4lB,GAC7BtX,EAActO,OAAO,KAAM8lB,EAAe3lC,IAH5C,SAIwB7D,EAAIqK,IACxB,6CACA,CAAE+I,OAAQ4e,IACVrpB,OAAM,eAPV,cAQwB,MAJhBrI,EAJR,QAQc0pC,SACV5jC,GAAS9F,EAAQe,KAAM,CAAE4F,WAAY,UACrC8U,EAAW,KAES,KAAlBzb,EAAQ0pC,SACiB,GAAvB1pC,EAAQe,KAAKmC,QACf4C,GAAS,oCAAqC,CAC5Ca,WAAY,YAGhB8U,EAAWzb,EAAQe,OAlBvB,kBAqBSf,GArBT,6CAFc,sBACQ,MAAlBkpC,GADU,mCAyBd5sB,KACC,CAAC4sB,EAAgBM,KAEpBplC,qBAAU,WACR,IAAImP,EAAYC,KAAKC,OAAgB,OAAV2H,QAAU,IAAVA,OAAA,EAAAA,EAAYlY,QAAS,IAAM,GACxC,OAAVkY,QAAU,IAAVA,OAAA,EAAAA,EAAYlY,QAAS,GAAK,EAAIqQ,IAChCA,GAAwB,GAE1BvB,EAAUuB,KACT,CAAC6H,IAEJhX,qBAAU,WACR,IAAIsP,EAAoB,GAAZ7B,EACR8B,EAAMyH,EAAWlY,OAASwQ,EAAQ,GAA5B,OAAiC0H,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAYlY,OAASwQ,EAAQ,GACxEkR,EAAmB,OAACxJ,QAAD,IAACA,OAAD,EAACA,EAAYla,MAAMwS,EAAOC,MAC5C,CAACyH,EAAYvJ,IA+Hd,cAACzD,GAAA,EAAD,CAAWkZ,OAAK,EAAC1gB,UAAU,mCAA3B,SACE,sBAAKA,UAAU,iCAAf,UACE,cAACuF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,4EAGJ,cAACuF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKxF,UAAU,WAAf,UACE,eAACpC,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLf,SAAU,SAACiB,GAAD,OApGL,SAACyK,GAClB,IAAIC,EAAQD,EAAKjM,MAAM,KACnBmM,EAAI,IAAIC,KACVtF,OAAOC,SAASmF,EAAM,IACtBpF,OAAOC,SAASmF,EAAM,IAAM,EAC5BpF,OAAOC,SAASmF,EAAM,KAExB7B,EAAa8B,GA6FoBK,CAAWhL,EAAMC,OAAOC,aAGjD,eAACR,EAAA,EAAKC,MAAN,CAAYgI,UAAU,aAAayC,IAAE,EAArC,UACE,cAAC1K,EAAA,EAAKE,MAAN,yBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLI,MAAOuQ,EACP1R,SAAU,SAACiB,GAAD,OAAW0Q,EAAa1Q,EAAMC,OAAOC,aAGnD,cAAC6B,EAAA,EAAD,CACEC,QAAQ,OACR8F,QAvGgB,WAC1B,IAAI2C,EAAO7B,EAEP8B,EADO+F,EACMjS,MAAM,KACvBiM,EAAKI,SAASvF,OAAOC,SAASmF,EAAM,IAAKpF,OAAOC,SAASmF,EAAM,IAAK,GAChED,EAAKM,YACHN,EAAKM,UAAY,IAAIH,KACvB5J,GAAS,iCAAkC,CAAEa,WAAY,YAEzDsiC,EAAiB15B,EAAKM,aA+FhB/L,SAAuB,MAAb4J,GAAkC,MAAb6H,EAHjC,yBASJ,cAACpJ,EAAA,EAAD,CACEvF,UAAU,8BACV4B,MAAO,CAAEsM,QAA8B,GAArBsG,EAAWlY,OAAc,OAAS,QAFtD,SAIE,cAACsB,EAAA,EAAD,CAAM4B,SApGK,SAACtB,GAGlB,GAFAA,EAAMuB,iBAES,SAAX0e,GAAJ,CAEA,IAAI2M,EAAgB,IAAIC,gBAET,aAAX5M,IACF2M,EAActO,OAAO,OAAQ,yBAEhB,cAAX2B,IACF2M,EAActO,OAAO,OAAQ,0BAEhB,aAAX2B,IACF2M,EAActO,OAAO,OAAQ,gBAEhB,cAAX2B,IACF2M,EAActO,OAAO,OAAQ,iBAG/BsO,EAActO,OAAO,OAAQ4lB,GAE7BtpC,EACGqK,IAAI,sCAAuC,CAC1C+I,OAAQ4e,IAEThrB,MAAK,SAAC6V,GAAD,OAAUlB,EAAckB,EAAKxb,SAClCsH,MAAMgT,EAAc,OAyEjB,SACE,eAAC7W,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKvF,UAAU,qBAA/B,UACE,eAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAW0F,GAAI,EAAGD,GAAI,EAArC,UACE,eAAC7H,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,oBACU,OAEV,eAACtiB,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAO+f,GACPlhB,SA/EM,SAACiB,GACrBkgB,GAAUlgB,EAAMC,OAAOC,QA8EeC,KAAKC,MAC7B9D,KAAK,SAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,+BACA,wBAAQA,MAAM,YAAd,gCACA,wBAAQA,MAAM,WAAd,wCACA,wBAAQA,MAAM,YAAd,+CAGJ,eAACoH,EAAA,EAAD,CAAKxF,UAAU,yBAAyB0F,GAAI,EAAGD,GAAI,EAAnD,UACE,eAACxF,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAAQ,UAA9B,UACG,IADH,OAEO,OAEP,eAACD,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,WACPwY,IAAWD,KAHf,UAMG,IANH,QAOQ,iBAMhB,cAAChZ,EAAA,EAAD,UACGwY,GACCA,EAAiBha,KAAI,SAAC2Z,GACpB,OACE,cAAClY,EAAA,EAAD,CACExF,UAAU,WAEVyF,GAAI,EACJC,GAAI,EACJC,GAAI,GALN,SAOE,eAAC6H,GAAA,EAAD,CACExN,UAAU,WACV4B,MAAO,CAAE6L,MAAO,SAChBzH,QAAS,WACPu8B,EAAkB7kB,GAClBzI,EAAkB,KALtB,UAQE,cAACzH,GAAA,EAAKjG,KAAN,UACE,cAACiG,GAAA,EAAKlG,MAAN,UAAaoW,EAASljB,SAExB,eAACgO,GAAA,EAAD,CAAWxI,UAAU,mBAArB,UACE,cAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACG0d,EAAShc,UAEZ,cAACif,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,SACG,aAAI4gB,MAAMhU,KAAKiU,KAAKnD,EAASrV,YAAYtE,KAAI,kBAC5C,cAAC,KAAD,CAAU/D,UAAU,kBAGxB,eAAC2gB,GAAA,EAAD,CAAe3gB,UAAU,WAAzB,oBACU0d,EAASqlB,4BA1BlBrlB,EAAS/gB,SAmCvBohB,EAAiBzhB,OAAS,GACzB,cAACiJ,EAAA,EAAD,CAAKvF,UAAU,sBAAf,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAf,SACE,eAAC2N,GAAA,EAAD,CAAY5H,KAAK,KAAjB,UACE,cAAC4H,GAAA,EAAWC,KAAZ,CACE1Q,SAAwB,IAAd+N,EACVjF,QAtPM,WACF,IAAdiF,GACFC,EAAcD,EAAY,MAsPhB,cAAC0C,GAAA,EAAWlF,KAAZ,CAAiBvL,UAAQ,EAAzB,SAA2B+N,IAC3B,cAAC0C,GAAA,EAAWE,KAAZ,CACE3Q,SAAU+N,IAAcE,EACxBnF,QArPO,WACjBiF,IAAcE,GAChBD,EAAcD,EAAY,aAyPxB,cAAC1F,EAAA,EAAD,CACEvF,UAAU,8BACV4B,MAAO,CACLsM,QACmB,MAAjBk0B,GAAqD,IAA5BrkB,EAAiBzhB,OACtC,OACA,QANV,SASE,cAACsB,EAAA,EAAD,CACE4B,SA3KU,SAACtB,GAGnB,GAFAA,EAAMuB,iBAEU,SAAZijC,GAAJ,CAEA,IAAI5X,EAAgB,IAAIC,gBAER,aAAZ2X,IACF5X,EAActO,OAAO,OAAQ,gBAEf,cAAZkmB,IACF5X,EAActO,OAAO,OAAQ,iBAG/BsO,EAActO,OAAO,OAAQ4lB,GAC7BtX,EAActO,OAAO,KAAM8lB,EAAe3lC,IAC1C7D,EACGqK,IAAI,6CAA8C,CACjD+I,OAAQ4e,IAEThrB,MAAK,SAAC6V,GAAD,OAAUd,EAAWc,EAAKxb,SAC/BsH,MAAMoT,EAAW,OAuJZjT,MAAO,CAAEsM,QAA4B,IAAnB0G,EAAQtY,OAAe,OAAS,SAFpD,SAIE,eAACsB,EAAA,EAAKC,MAAN,CAAY+H,GAAIL,IAAKvF,UAAU,qBAA/B,UACE,eAACwF,EAAA,EAAD,CAAKxF,UAAU,WAAW0F,GAAI,EAAGD,GAAI,EAArC,UACE,eAAC7H,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,oBACU,OAEV,eAACtiB,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACHxH,MAAOskC,GACPzlC,SA9JO,SAACiB,GACtBykC,GAAWzkC,EAAMC,OAAOC,QA6JeC,KAAKC,MAC9B9D,KAAK,UAJP,UAME,wBAAQ4D,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,0CACA,wBAAQA,MAAM,YAAd,iDAKJ,eAACoH,EAAA,EAAD,CAAKxF,UAAU,yBAAyB0F,GAAI,EAAGD,GAAI,EAAnD,UACE,eAACxF,EAAA,EAAD,CAAQjC,KAAK,SAASkC,QAAQ,UAA9B,UACG,IADH,OAEO,OAEP,eAACD,EAAA,EAAD,CACEC,QAAQ,UACR8F,QAAS,WACP68B,IAAYD,KAHhB,UAMG,IANH,QAOQ,iBAMhB,cAACr9B,EAAA,EAAD,UACE,eAACmC,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACR0B,MAAO,CACLsM,QACqB,OAAnBo0B,GAA2B1tB,EAAQtY,OAAS,EACxC,QACA,OACNmR,MAAO,OAETzN,UAAU,wBAXZ,UAaE,gCACE,+BACE,sCACA,oDAGJ,gCACG4U,GACCA,EAAQ7Q,KAAI,SAACi/B,GAAD,OACV,qBAEEh9B,QAAS,kBA/TE,SAACgP,GAC5BC,EAAkBD,GA8TaiuB,CAAqBD,IACpChjC,UACEgV,EAAerY,KAAOqmC,EAAErmC,GACpB,mCACA,iBANR,UASE,6BAAKqmC,EAAExoC,OACP,6BAAKwoC,EAAE36B,aATF26B,EAAErmC,cAenB,oBACEiF,MAAO,CACL0b,UAAW,SACXpP,QAAqB,IAAZ+Z,GAAiB,OAAS,SAHvC,2CAM0BA,SAN1B,IAM0BA,QAN1B,EAM0BA,GAAUjO,SANpC,OAQA,oBACEpY,MAAO,CACL0b,UAAW,SACXiQ,SAAU,SACVrf,QACc,IAAZ+Z,IAAoC,MAAlBqa,EAAyB,OAAS,SAL1D,yBAQe,IACb,sBAAM1gC,MAAO,CAAEspB,eAAgB,gBAA/B,gBACGoX,QADH,IACGA,OADH,EACGA,EAAgBS,oBAElB,YACe,OAAdT,QAAc,IAAdA,OAAA,EAAAA,EAAgBS,oBAAqB,IAAM9a,GAASjO,UACpD,OAEJ,cAACzU,EAAA,EAAD,UACE,cAACtF,EAAA,EAAD,CACEC,QAAQ,OACR8F,QApWgB,WACxBlN,EACG6G,KADH,yDAEsD2iC,EAAe3lC,GAFrE,uBAGmBqY,EAAerY,GAHlC,oBAIgBH,IAJhB,iBAIyC4lC,EAJzC,MAMGtiC,MAAK,SAACF,GACLV,GAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCsiC,EAAiB,MACjB5tB,EAAc,IACdguB,IAAqBD,OAEtB/gC,OAAM,SAACxH,GACNiF,GAASlF,EAAgBC,GAAM,CAAE8F,WAAY,UAC7C0iC,IAAqBD,OAEzBD,EAAkB,MAClBttB,EAAkB,IAClBJ,EAAW,KAkVHjT,MAAO,CACLsM,QACyC,IAAvCwK,OAAOC,KAAK3D,GAAgB1Y,QACR,MAAlBgmC,EACE,OACA,eACN5e,OAAQ,QATZ,6BCjRKwf,OA3Nf,WAAiC,IAAD,EACY9lC,mBAAS,IADrB,mBACvB+lC,EADuB,KACRC,EADQ,OAEYhmC,mBAAS,WAFrB,mBAEvBiO,EAFuB,KAERC,EAFQ,OAGFlO,mBAAS,QAHP,mBAGvB+gB,EAHuB,KAGfC,EAHe,OAIAhhB,mBAAS,QAJT,mBAIvBihB,EAJuB,KAIdC,EAJc,OAKFlhB,oBAAS,GALP,mBAKvBmhB,EALuB,KAKfC,EALe,KAMtBtf,EAAaC,sBAAbD,SAsDR,OApDA1B,qBAAU,WAAM,4CACd,kCAAAjC,EAAA,yDACwB,YAAlB8P,EADN,wBAEQyf,EAAgB,IAAIC,gBACV,QAAV5M,GAA+B,QAAXE,GACtByM,EAActO,OAAO,OAAQ2B,EAASE,GAJ5C,SAK0BvlB,EAAIqK,IACxB,oCAAsC3G,IACtC,CACE0P,OAAQ4e,IAEVrpB,OAAM,eAVZ,cAKUrI,EALV,OAWIgqC,EAAmBhqC,EAAUA,EAAQe,KAAO,IAXhD,kBAaWf,GAbX,eAeQ0xB,EAAgB,IAAIC,gBACV,QAAV5M,GAA+B,QAAXE,GACtByM,EAActO,OAAO,OAAQ2B,EAASE,GAjB5C,UAkB0BvlB,EAAIqK,IACxB,qCAAuC3G,IACvC,CACE0P,OAAQ4e,IAEVrpB,OAAM,eAvBZ,eAkBUrI,EAlBV,OAwBIgqC,EAAmBhqC,EAAUA,EAAQe,KAAO,IAxBhD,kBA0BWf,GA1BX,6CADc,uBAAC,WAAD,wBA8BdiqC,KACC,CAACh4B,EAAe8S,EAAQE,EAASE,IAsBlC,cAAC/W,GAAA,EAAD,CAAWkZ,OAAK,EAAC1gB,UAAU,mCAA3B,SACE,sBAAKA,UAAU,iCAAf,UACE,eAACuF,EAAA,EAAD,CAAK3D,MAAO,CAAE0hC,eAAgB,iBAA9B,UACE,cAAC99B,EAAA,EAAD,CAAKxF,UAAU,WAAW0F,GAAI,EAAGD,GAAI,EAArC,SACE,eAAC0H,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACG0O,IAGH,eAAC8B,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WAEPsF,EAAiB,YAHrB,qBAQA,cAAC6B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WAEPsF,EAAiB,aAHrB,8BAWN,eAAC9F,EAAA,EAAD,CAAKxF,UAAU,WAAW0F,GAAI,EAAGD,GAAI,EAArC,UACE,cAAC7H,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,sBACA,eAAC/S,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACGwhB,IAGH,eAAChR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,SAFd,kBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,eAFd,wBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,aAFd,sBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,aAFd,sBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,UAFd,yBASJ,eAACjR,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACG0hB,IAGH,eAAClR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsY,EAAW,SAFf,kBAOA,cAACnR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsY,EAAW,QAFf,uBAOA,cAACnR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsY,EAAW,SAFf,oCAWR,cAAC/Y,EAAA,EAAD,UACE,eAACmC,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,4CACA,0CACA,0CACA,uCACA,4CACA,0CACA,4BAGJ,gCACGmjC,GACCA,EAAcp/B,KAAI,SAACw/B,GAAD,OAChB,+BACE,6BAAK15B,KAAO05B,EAAGxzB,WAAWhG,OAAO,sBACjC,6BAAKF,KAAO05B,EAAGvzB,SAASjG,OAAO,sBAC/B,6BAAKw5B,EAAGx0B,WACR,6BAAKw0B,EAAG35B,QACR,6BAAK25B,EAAGC,aACR,6BAAKD,EAAGE,eACR,6BACE,cAACxjC,EAAA,EAAD,CACEC,QAAQ,SACR8F,QAAS,kBA5JHrJ,EA4J4B4mC,EAAG5mC,QA3JzD7D,EACGoN,IAAI,wCAA0CvJ,GAC9CmD,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCye,GAAWD,MAEZ9c,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,UAC7Cye,GAAWD,MATU,IAAC5hB,GA6JNiF,MAAO,CACLsM,QACoB,aAAlB7C,IAlJG0E,EAmJmBwzB,EAAGxzB,WAjJ5CA,GADO,IAAIjH,MAAOG,WACG,IAAQ,MAmJN,OADA,gBAPV,wBARKs6B,EAAG5mC,IArI5B,IAA6BoT,kBCkKhB2zB,OAzNf,WAA4B,IAAD,EACOtmC,mBAAS,IADhB,mBAClBumC,EADkB,KACRC,EADQ,OAEiBxmC,mBAAS,WAF1B,mBAElBiO,EAFkB,KAEHC,EAFG,OAGGlO,mBAAS,QAHZ,mBAGlB+gB,EAHkB,KAGVC,EAHU,OAIKhhB,mBAAS,QAJd,mBAIlBihB,EAJkB,KAITC,EAJS,OAKGlhB,oBAAS,GALZ,mBAKlBmhB,EALkB,KAKVC,EALU,KAMjBtf,EAAaC,sBAAbD,SAsDR,OApDA1B,qBAAU,WAAM,4CACd,kCAAAjC,EAAA,yDACwB,YAAlB8P,EADN,wBAEQyf,EAAgB,IAAIC,gBACV,QAAV5M,GAA+B,QAAXE,GACtByM,EAActO,OAAO,OAAQ2B,EAASE,GAJ5C,SAK0BvlB,EAAIqK,IACxB,6CAA+C3G,IAC/C,CACE0P,OAAQ4e,IAEVrpB,OAAM,eAVZ,cAKUrI,EALV,OAWIwqC,EAAcxqC,EAAUA,EAAQe,KAAO,IAX3C,kBAaWf,GAbX,eAeQ0xB,EAAgB,IAAIC,gBACV,QAAV5M,GAA+B,QAAXE,GACtByM,EAActO,OAAO,OAAQ2B,EAASE,GAjB5C,UAkB0BvlB,EAAIqK,IACxB,8CAAgD3G,IAChD,CACE0P,OAAQ4e,IAEVrpB,OAAM,eAvBZ,eAkBUrI,EAlBV,OAwBIwqC,EAAcxqC,EAAUA,EAAQe,KAAO,IAxB3C,kBA0BWf,GA1BX,6CADc,uBAAC,WAAD,wBA8BdyqC,KACC,CAACx4B,EAAe8S,EAAQE,EAASE,IAsBlC,cAAC/W,GAAA,EAAD,CAAWkZ,OAAK,EAAC1gB,UAAU,mCAA3B,SACE,sBAAKA,UAAU,iCAAf,UACE,eAACuF,EAAA,EAAD,CAAK3D,MAAO,CAAE0hC,eAAgB,iBAA9B,UACE,cAAC99B,EAAA,EAAD,CAAKxF,UAAU,WAAW0F,GAAI,EAAGD,GAAI,EAArC,SACE,eAAC0H,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACG0O,IAGH,eAAC8B,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsF,EAAiB,YAFrB,qBAOA,cAAC6B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsF,EAAiB,aAFrB,8BAUN,eAAC9F,EAAA,EAAD,CAAKxF,UAAU,WAAW0F,GAAI,EAAGD,GAAI,EAArC,UACE,cAAC7H,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,sBACA,eAAC/S,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACGwhB,IAGH,eAAChR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,SAFd,kBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,eAFd,wBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,aAFd,sBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,aAFd,sBAOA,cAACjR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,UAFd,yBASJ,eAACjR,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACG0hB,IAGH,eAAClR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsY,EAAW,SAFf,kBAOA,cAACnR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsY,EAAW,QAFf,uBAOA,cAACnR,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsY,EAAW,SAFf,oCAWR,cAAC/Y,EAAA,EAAD,UACE,eAACmC,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,4CACA,0CACA,0CACA,uCACA,4CACA,0CACA,4BAGJ,gCACG2jC,GACCA,EAAS5/B,KAAI,SAAC+/B,GAAD,OACX,+BACE,6BAAKj6B,KAAOi6B,EAAE/zB,WAAWhG,OAAO,sBAChC,6BAAKF,KAAOi6B,EAAE9zB,SAASjG,OAAO,sBAC9B,6BAAK+5B,EAAE/0B,WACP,6BAAK+0B,EAAEl6B,QACP,6BAAKk6B,EAAEN,aACP,6BAAKM,EAAEL,eACP,6BACE,cAACxjC,EAAA,EAAD,CACEC,QAAQ,SACR8F,QAAS,kBA1JRrJ,EA0J4BmnC,EAAEnnC,QAzJnD7D,EACGoN,IAAI,mCAAqCvJ,GACzCmD,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCye,GAAWD,MAEZ9c,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,UAC7Cye,GAAWD,MATK,IAAC5hB,GA2JDiF,MAAO,CACLsM,QACoB,aAAlB7C,IAhJG0E,EAiJmB+zB,EAAE/zB,WA/I3CA,GADO,IAAIjH,MAAOG,WACG,IAAQ,MAiJN,OADA,gBAPV,wBARK66B,EAAEnnC,IAnI3B,IAA6BoT,kB,UC4ChBg0B,OApGf,WAAiC,IAAD,EACM3mC,mBAAS,IADf,mBACvBoX,EADuB,KACXC,EADW,OAEkBrX,mBAAS,IAF3B,mBAEvBmvB,EAFuB,KAELC,EAFK,OAGgBpvB,oBAAS,GAHzB,mBAGvBw0B,EAHuB,KAGNC,EAHM,KAK9Br0B,qBAAU,WACRwmC,MACC,IAEH,IAAMA,EAAiB,WAAM,4CAC3B,4BAAAzoC,EAAA,sEACwBzC,EAAIqK,IACxB,oCAAsC3G,KACtCiF,OAAM,eAHV,cACQrI,EADR,OAIEqb,EAAgBrb,EAAUA,EAAQe,KAAO,IAJ3C,kBAMSf,GANT,4CAD2B,uBAAC,WAAD,wBAS3Bwc,IAcF,OACE,eAACpO,GAAA,EAAD,CAAWkZ,OAAK,EAAC1gB,UAAU,mCAA3B,UACE,sBAAKA,UAAU,iCAAf,UACE,cAACuF,EAAA,EAAD,CAAKvF,UAAU,WAAf,SACE,0EAEF,cAACuF,EAAA,EAAD,UACE,eAACmC,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,sCACA,6CACA,+CACA,yCACA,4BAGJ,gCACGwU,GACCA,EAAWzQ,KAAI,SAACmpB,GAAD,OACb,qBAEElnB,QAAS,WACPwmB,EAAoBU,IAHxB,UAME,6BAAKA,EAAE1yB,OACP,6BACG0yB,EAAExqB,YAAYpG,OAAS,GACpB4wB,EAAExqB,YAAYuhC,OAAO,EAAG,IAAM,MAC9B/W,EAAExqB,cAER,6BAAKwqB,EAAE7kB,WACP,6BAAK6kB,EAAExrB,UACP,6BACE,cAAC,KAAD,CACEE,MAAO,CAAEyb,MAAO,OAChBrX,QAAS,WACP6rB,GAAmB,UAjBpB3E,EAAEvwB,iBA2BrB,cAAC,GAAD,CACE2Q,KAAMskB,EACN1Z,MAAK,2BAAsBqU,EAAiB/xB,MAC5CmzB,SAAS,iCACTC,SApEc,WAClB90B,EACG6G,KADH,wBAEqB4sB,EAAiB5vB,GAFtC,wBAEwDH,MAErDsD,MAAK,WACJkkC,IACAnS,GAAmB,OA8DnBzoB,OAAQ,WACNyoB,GAAmB,IANvB,SASG,UCWMqS,OAxGf,WAA8B,IAAD,EACa9mC,mBAAS,IADtB,mBACpB+mC,EADoB,KACNC,EADM,OAEChnC,oBAAS,GAFV,mBAEpBmhB,EAFoB,KAEZC,EAFY,KAGnBtf,EAAaC,sBAAbD,SAkCR,OAhCA1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EAAIqK,IACxB,wDACA3G,KACAiF,OAAM,eAJV,cACQrI,EADR,OAKEgrC,EAAkBhrC,EAAUA,EAAQe,KAAO,IAL7C,kBAOSf,GAPT,4CADc,uBAAC,WAAD,wBAUdirC,KACC,CAAC9lB,IAsBF,cAAC/W,GAAA,EAAD,CAAWkZ,OAAK,EAAC1gB,UAAU,mCAA3B,SACE,sBAAKA,UAAU,iCAAf,UACE,cAACuF,EAAA,EAAD,CACEvF,UAAU,WACV4B,MAAO,CAAEsM,QAAiC,IAAxBi2B,EAAa7nC,OAAe,OAAS,QAFzD,SAIE,sDAEF,cAACiJ,EAAA,EAAD,UACE,eAACmC,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBACV4B,MAAO,CAAEsM,QAAiC,IAAxBi2B,EAAa7nC,OAAe,OAAS,SALzD,UAOE,gCACE,+BACE,oCACA,kDACA,6CACA,0CACA,0CACA,4BAGJ,gCACG6nC,GACCA,EAAapgC,KAAI,SAACugC,GAAD,OACf,+BACE,6BAAKA,EAAEnD,gBACP,6BACGt3B,KAAOy6B,EAAElD,iBAAiBr3B,OAAO,sBAEpC,6BAAKF,KAAOy6B,EAAEjY,YAAYtiB,OAAO,sBACjC,6BAAKu6B,EAAExhB,eACP,6BAAKwhB,EAAEb,eACP,6BACE,cAACxjC,EAAA,EAAD,CACEC,QAAQ,SACR8F,QAAS,kBA5DJrJ,EA4D4B2nC,EAAE3nC,QA3DvD7D,EACGoN,IAAI,gDAAkDvJ,GACtDmD,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCye,GAAWD,MAEZ9c,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,UAC7Cye,GAAWD,MATS,IAAC5hB,GA6DLiF,MAAO,CACLsM,SAjDK6B,EAiDwBu0B,EAAEjY,YA/ChDtc,GADO,IAAIjH,MAAOG,WACG,IAAQ,KAiDR,OADA,iBALR,wBATKq7B,EAAE3nC,IApC3B,IAA6BoT,YA8DvB,cAACxK,EAAA,EAAD,CACEvF,UAAU,WACV4B,MAAO,CAAEsM,QAAiC,IAAxBi2B,EAAa7nC,OAAe,QAAU,QAF1D,SAIE,wE,8BCoPKioC,OAnVf,WAAmB,IAAD,EAC0BnnC,mBAAS,iBADnC,mBACTiO,EADS,KACMC,EADN,OAEiBlO,mBAAS,IAF1B,mBAETonC,EAFS,KAECC,EAFD,OAG4BrnC,mBAAS,MAHrC,mBAGTsnC,EAHS,KAGOC,EAHP,OAIYvnC,mBAAS,MAJrB,mBAITwnC,EAJS,KAIDC,EAJC,OAK0BznC,oBAAS,GALnC,mBAKT0nC,EALS,KAKMC,EALN,OAMY3nC,oBAAS,GANrB,mBAMTmhB,EANS,KAMDC,EANC,KAORtf,EAAaC,sBAAbD,SACJ8lC,EAAQphC,SAASqhC,iBAAiB,QAEtCznC,qBAAU,WAAM,4CACd,8BAAAjC,EAAA,6DAGImwB,EADoB,kBAAlBrgB,EACI,2CACqB,eAAlBA,EACH,wCACqB,aAAlBA,EACH,uCAEA,wCATV,SAYwBvS,EACnBqK,IAAIuoB,EAAMlvB,KACVsD,MAAK,SAACF,GACL6kC,EAAa7kC,EAAIzF,SAElBsH,OAAM,WACLgjC,EAAa,OAlBnB,cAYQrrC,EAZR,yBAqBSA,GArBT,4CADc,uBAAC,WAAD,wBAwBd8rC,KACC,CAAC75B,EAAekT,IAEnB,IAAM4mB,EAAuB,SAACT,GAC5BC,EAAkBD,GAElB5rC,EACGqK,IACC,eACAkI,EAAc+5B,cACd,IACAV,EAAe/nC,GACf,YACAH,IACA,UAEDsD,MAAK,SAACF,GACLilC,EAAUjlC,EAAIzF,SACbsH,OAAM,gBA6CPF,EAAQ,WAAO,IAAD,iBACDyjC,GADC,IAClB,2BAAwB,SACjBhlB,UAAUtD,IAAI,oBAFH,gCAMpB,OACE,cAAClV,GAAA,EAAD,CAAWkZ,OAAK,EAAC1gB,UAAU,mCAA3B,SACE,sBAAKA,UAAU,iCAAf,UACE,cAACuF,EAAA,EAAD,CAAKvF,UAAU,WAAf,SACE,oDAEF,cAACuF,EAAA,EAAD,UACE,eAAC4H,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACG0O,IAGH,eAAC8B,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsF,EAAiB,iBACjBq5B,EAAkB,MAClBE,EAAU,MACVE,GAAiB,GACjBxjC,KANJ,2BAWA,cAAC4L,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsF,EAAiB,cACjBq5B,EAAkB,MAClBE,EAAU,MACVE,GAAiB,GACjBxjC,KANJ,wBAWA,cAAC4L,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsF,EAAiB,YACjBq5B,EAAkB,MAClBE,EAAU,MACVE,GAAiB,GACjBxjC,KANJ,sBAWA,cAAC4L,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPsF,EAAiB,YACjBq5B,EAAkB,MAClBE,EAAU,MACVE,GAAiB,GACjBxjC,KANJ,8BAcN,cAACgE,EAAA,EAAD,CACE3D,MAAO,CACLsM,SACoB,iBAAjB7C,GACkB,cAAjBA,IACAm5B,EAASloC,OAAS,EAChB,OACA,QAPV,SAUE,eAACoL,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,sCACA,oDAGJ,gCACGwkC,GACCA,EAASzgC,KAAI,SAACnK,GAAD,OACX,qBAEEoM,QAAS,kBAAMm/B,EAAqBvrC,IACpCoG,WACgB,OAAd0kC,QAAc,IAAdA,OAAA,EAAAA,EAAgB/nC,MAAO/C,EAAE+C,GACrB,mCACA,iBANR,UASE,6BAAK/C,EAAEY,OACP,6BAAKZ,EAAEyO,aATFzO,EAAE+C,cAenB,cAAC4I,EAAA,EAAD,CACE3D,MAAO,CACLsM,QACmB,YAAjB7C,GAA+Bm5B,EAASloC,OAAS,EAC7C,OACA,QALV,SAQE,eAACoL,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,+CACA,sCACA,oDAGJ,gCACGwkC,GACCA,EAASzgC,KAAI,SAACnK,GAAD,OACX,qBAEEoM,QAAS,kBAAMm/B,EAAqBvrC,IACpCoG,WACgB,OAAd0kC,QAAc,IAAdA,OAAA,EAAAA,EAAgB/nC,MAAO/C,EAAE+C,GACrB,mCACA,iBANR,UASE,6BAAK/C,EAAEyrC,eACP,6BAAKzrC,EAAEY,OACP,6BAAKZ,EAAEyO,aAVFzO,EAAE+C,cAgBnB,cAAC4I,EAAA,EAAD,CACE3D,MAAO,CACLsM,QACmB,YAAjB7C,GAA+Bm5B,EAASloC,OAAS,EAC7C,OACA,QALV,SAQE,eAACoL,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,sCACA,+CACA,8CAGJ,gCACGwkC,GACCA,EAASzgC,KAAI,SAACnK,GAAD,OACX,qBAEEoM,QAAS,kBAAMm/B,EAAqBvrC,IACpCoG,WACgB,OAAd0kC,QAAc,IAAdA,OAAA,EAAAA,EAAgB/nC,MAAO/C,EAAE+C,GACrB,mCACA,iBANR,UASE,6BAAK/C,EAAEY,OACP,6BAAKZ,EAAEyO,WACP,6BAAKzO,EAAE8H,YAVF9H,EAAE+C,cAgBnB,eAAC4I,EAAA,EAAD,CACEvF,UAAU,WACV4B,MAAO,CACLsM,QACY,MAAV02B,GAA6B,eAAXA,EAA0B,OAAS,QAJ3D,UAOE,oBAAG5kC,UAAU,WAAW4B,MAAO,CAAE+f,aAAc,KAA/C,sCAC4B,IACzBijB,GAAU/6B,KAAM,OAAC+6B,QAAD,IAACA,OAAD,EAACA,EAAQj8B,MAAMoB,OAAO,oBAFzC,IAE+D,IAC5D,aAAI6W,MAAMgkB,IAAM,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQU,SAAQvhC,KAAI,kBACvC,cAAC,KAAD,CAAUnC,MAAO,CAAE6L,MAAO,kBAG9B,cAACxN,EAAA,EAAD,CACE/C,SAAU4nC,EACV5kC,QAAQ,OACR8F,QAAS,kBAAM++B,GAAiB,IAHlC,6BAQF,cAACx/B,EAAA,EAAD,CACEvF,UAAU,WACV4B,MAAO,CACLsM,QACa,MAAV02B,GAA6B,eAAXA,GAA4BE,EAC3C,OACA,QANV,SASE,cAAC,KAAD,CACES,MAAO,EACPtoC,SAxQY,SAACuoC,GAAe,IAAD,iBAClBR,GADkB,IACnC,2BAAwB,SACjBhlB,UAAUC,OAAO,oBAFW,8BAKnC,IAAI0J,EAAU,CACZhtB,IAAK,EACL2oC,MAAOE,EACPC,SAAUf,EAAe/nC,GACzBgM,MAAM,IAAIG,MAAOG,UACjBy8B,UAAWlpC,IACXwB,KAAMqN,EAAcuE,gBAGA,IAAlBk1B,EACFhsC,EACG6G,KAAK,eAAgBgqB,GACrB7pB,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCglC,GAAiB,GACjBI,EAAqBT,GACrBlmB,GAAWD,MAEZ9c,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,cAGjD4pB,EAAQhtB,GAAKioC,EAAOjoC,GACpB7D,EACGoN,IAAI,eAAgByjB,GACpB7pB,MAAK,SAACF,GACLV,EAASU,EAAIzF,KAAM,CAAE4F,WAAY,YACjCglC,GAAiB,GACjBI,EAAqBT,GACrBlmB,GAAWD,MAEZ9c,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,eAoO3CgG,KAAM,GACN4/B,YAAY,YAGhB,cAACpgC,EAAA,EAAD,CACE3D,MAAO,CACL0hC,eAAgB,SAChBp1B,QAA6B,IAApBs2B,EAASloC,OAAe,OAAS,QAH9C,SAME,eAACwR,GAAA,EAAD,CAAO83B,YAAY,EAAM1lC,QAAQ,UAAjC,wBACcmL,EAAc+5B,cAD5B,wBCrNKS,GA7Ha,WAAO,IAAD,EACUzoC,mBAAS,cADnB,mBACzB0oC,EADyB,KACVC,EADU,OAEc3oC,mBAAS,IAFvB,mBAEzBulB,EAFyB,KAERC,EAFQ,OAGFxlB,mBAAS,IAHP,mBAGzBlB,EAHyB,KAGhB2mB,EAHgB,OAIQzlB,mBAAS,IAJjB,mBAIzB4oC,EAJyB,KAIXC,EAJW,KAKxB/mC,EAAaC,sBAAbD,SAER1B,qBAAU,WACR,IAAIkuB,EAAG,wBAAoBlvB,IAApB,KACP,OAAQspC,GACN,IAAK,aACHpa,GAAY,iBACZ,MACF,IAAK,gBACHA,GAAY,oBACZ,MACF,IAAK,WACHA,GAAY,gBACZ,MACF,QACE,OAEJ5yB,EAAIqK,IAAIuoB,GAAK5rB,MAAK,SAACF,GACjBijB,EAAWjjB,EAAIzF,MACfyoB,EAAmB,OAClBnhB,OAAM,iBACR,CAACqkC,IAEJ,IAAMI,EAAc,SAACjjB,GACnB,IACE,OAAQ6iB,GACN,IAAK,aAEL,IAAK,gBACH,MAAM,GAAN,OAAU7iB,EAAOzoB,MACnB,IAAK,WACH,MAAM,GAAN,OAAUyoB,EAAOzoB,KAAjB,eAA4ByoB,EAAOvhB,QAAQX,QAC7C,QACE,MAAO,IAEX,SACA,MAAO,KAsCX,OACE,cAACnD,EAAA,EAAD,CAAM4B,SAnCa,SAAC5F,GAGpB,GAFAA,EAAE6F,iBACF7F,EAAE8F,kBACGijB,EAAgB,GAIrB,GAAKqjB,EAAL,CAIA,IAAI7rC,EAAO,CACT,QAAW6rC,EACX,YAAeE,EAAYvjB,EAAgB,IAC3C,cAAiBA,EAAgB,GAAGhmB,GACpC,KAAQmpC,EACR,KAAQh9B,KAAKE,MACb,UAAaxM,KAIf1D,EAAI6G,KADM,mBACInG,KAAKyB,UAAUd,IAC1B2F,MAAK,WACJZ,EAAS,yBAA0B,CAAEa,WAAY,eAElD0B,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,kBAlB/Cb,EAAS,iCAAkC,CAAEa,WAAY,iBAJzDb,EAAS,qBAAD,OAAsB4mC,EAAcK,qBAAuB,CAAEpmC,WAAY,aA+BnF,SACE,eAACyH,GAAA,EAAD,CAAWxH,UAAU,wBAAwB4B,MAAO,CAAE0jB,aAAc,OAAQxjB,QAAS,OAAQkU,UAAW,OAAQ2L,aAAc,OAAQ1I,gBAAiB,SAAvJ,UACE,eAAC1T,EAAA,EAAD,CAAKvF,UAAU,0BAAf,UACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAAC6f,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,0BAGA,eAAC5nB,EAAA,EAAKG,QAAN,CAAc6H,GAAG,SAAS3I,SAbV,SAACrD,GAC3BmsC,EAAiBnsC,EAAEuE,OAAOC,QAYwCC,K,WAAxD,UACE,wBAAQD,MAAM,aAAapB,cAAY,EAAvC,wBACA,wBAAQoB,MAAM,gBAAd,2BACA,wBAAQA,MAAM,WAAd,8BAIN,cAACoH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAAC6f,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,0BAGA,cAAC,KAAD,CACE7oB,GAAG,qBACHqmB,SAAU,SAACC,GAAD,OAAYijB,EAAYjjB,IAClChmB,SAAU2lB,EACV1mB,QAASA,EACTa,YAAa,YACbmmB,SAAUP,YAKlB,eAAC/kB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,WACHsM,KAAM,EACNjV,SAAU,SAACiB,GAAD,OAAW+nC,EAAgB/nC,EAAMC,OAAOC,QAClDzC,UAAQ,OAEZ,cAACsE,EAAA,EAAD,CAAQjC,KAAK,SAAb,0BC5DOooC,GAxDU,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACRjpC,mBAAS,IADD,mBACjClD,EADiC,KACvBosC,EADuB,KAYxC,OATA9oC,qBAAU,WAAM,4CACZ,sBAAAjC,EAAA,sDACIzC,EAAIqK,IAAJ,mCAAoCkjC,EAAU1pC,KAAMmD,MAAK,SAACF,GACtD0mC,EAAY1mC,EAAIzF,KAAOyF,EAAIzF,KAAKosC,aAAe,OAChD9kC,OAAM,eAHb,4CADY,uBAAC,WAAD,wBAMZ+kC,KACD,IAGC,eAACh/B,GAAA,EAAD,CAAWxH,UAAU,wBAAwB4B,MAAO,CAAE0jB,aAAc,OAAQxjB,QAAS,OAAQkU,UAAW,OAAQ2L,aAAc,OAAQ1I,gBAAiB,SAAvJ,UACI,eAAC1T,EAAA,EAAD,CAAKvF,UAAU,0BAAf,UACI,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,mBACU6gB,EAAUI,mBAI5B,cAACjhC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,oBACW6gB,EAAUroC,YAI7B,cAACwH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,oBACW,IAAI1c,KAAKu9B,EAAU19B,MAAM+c,mBAAmB,mBAKnE,eAAC9nB,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CACI6H,GAAG,WACHxH,MAAOioC,EAAU11B,QACjBzT,UAAQ,OAEhB,eAACU,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,4BACA,cAACF,EAAA,EAAKG,QAAN,CACI6H,GAAG,WACH5I,aAAc9C,EACdkE,MAAOlE,EACPgD,UAAQ,WClCbwpC,GAtBU,WAAO,IAAD,EACOtpC,mBAAS,IADhB,mBACtBupC,EADsB,KACVC,EADU,KAY7B,OATAppC,qBAAU,WAAM,4CACd,sBAAAjC,EAAA,sDACEzC,EAAIqK,IAAJ,kCAAmC3G,MAAoBsD,MAAK,SAACF,GAC3DgnC,EAAchnC,EAAIzF,SACjBsH,OAAM,eAHX,4CADc,uBAAC,WAAD,wBAMdolC,KACC,IAGD,8BACGF,GACCA,EAAW5iC,KAAI,SAAC+/B,GACd,OAAO,cAAC,GAAD,CAA6BuC,UAAWvC,GAAjBA,EAAEnnC,UCmB3BmqC,GAnCQ,WACnB,OACI,sBAAM9mC,UAAU,aAAhB,SACI,cAACoF,EAAA,EAAIoC,UAAL,CAAe7K,GAAG,oBAAoBkf,iBAAiB,QAAQ8K,eAAa,EAA5E,SACI,eAACphB,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACI,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACI,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACI,cAAC8b,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,kCAIJ,cAACwW,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,kCAMZ,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACI,eAACrC,EAAA,EAAI4W,QAAL,WACI,cAAC4K,GAAA,EAAD,CAASthB,SAAS,QAAlB,SACI,cAAC,GAAD,MAEJ,cAACshB,GAAA,EAAD,CAASthB,SAAS,SAAlB,SACI,cAAC,GAAD,mBCwDjByhC,GAhFW,SAAC,GAAuC,IAArCV,EAAoC,EAApCA,UAAWW,EAAyB,EAAzBA,mBAAyB,EACrB5pC,qBADqB,mBACtDmpC,EADsD,KACxCU,EADwC,KAErD/nC,EAAaC,sBAAbD,SA8BR,OACI,cAACtB,EAAA,EAAD,CAAM4B,SA5BS,SAAC5F,GAIhB,GAHJA,EAAE6F,iBACF7F,EAAE8F,kBAEO6mC,EAAL,CAKA,IAAIpsC,EAAO,CACP,aAAgBosC,EAChB,YAAeF,EAAU1pC,GACzB,QAAWH,IACX,KAAQsM,KAAKE,OAGb0iB,EAAG,mCAA+B2a,EAAU1pC,IAChD7D,EAAI6G,KAAK+rB,EAAKlyB,KAAKyB,UAAUd,IACxB2F,MAAK,WACFknC,IACA9nC,EAAS,yBAA0B,CAAEa,WAAY,eAEpD0B,OAAM,SAACxH,GACJiF,EAAS,iCAAkC,CAAEa,WAAY,oBAlB7Db,EAAS,gCAAiC,CAAEa,WAAY,aAuB5D,SACI,eAACyH,GAAA,EAAD,CAAWxH,UAAU,wBAAwB4B,MAAO,CAAE0jB,aAAc,OAAQxjB,QAAS,OAAQkU,UAAW,OAAQ2L,aAAc,OAAQ1I,gBAAiB,SAAvJ,UACI,eAAC1T,EAAA,EAAD,CAAKvF,UAAU,0BAAf,UACI,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,mBACU6gB,EAAUI,mBAI5B,cAACjhC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,oBACW6gB,EAAUroC,YAI7B,cAACwH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,oBACW,IAAI1c,KAAKu9B,EAAU19B,MAAM+c,mBAAmB,mBAKnE,eAAC9nB,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CACI6H,GAAG,WACHsM,KAAM,EACN9T,MAAOioC,EAAU11B,QACjBzT,UAAQ,OAEhB,eAACU,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,4BACA,cAACF,EAAA,EAAKG,QAAN,CACI6H,GAAG,WACHsM,KAAM,EACNjV,SAAU,SAACiB,GAAY+oC,EAAgB/oC,EAAMC,OAAOC,QACpDzC,UAAQ,OAEhB,cAACsE,EAAA,EAAD,CAAQjC,KAAK,SAAb,0BC3CDkpC,GAjCW,WAAO,IAAD,EACM9pC,mBAAS,IADf,mBACvBupC,EADuB,KACXC,EADW,OAEAxpC,oBAAS,GAFT,6BAI9BI,qBAAU,WACR2pC,MACC,IAEH,IAAMA,EAAmB,WAAM,4CAC7B,sBAAA5rC,EAAA,sDACEzC,EAAIqK,IAAJ,uBAA+BrD,MAAK,SAACF,GACnCgnC,EAAchnC,EAAIzF,SACjBsH,OAAM,eAHX,4CAD6B,uBAAC,WAAD,wBAM7BolC,IAGF,OACE,8BACGF,GACCA,EAAW5iC,KAAI,SAAC+/B,GACd,OACE,cAAC,GAAD,CAEEuC,UAAWvC,EACXkD,mBAAoBG,GAFfrD,EAAEnnC,U,UC2BNyqC,GAnDkB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAChC,OACI,eAAC7/B,GAAA,EAAD,CAAWxH,UAAU,wBAAwB4B,MAAO,CAAE0jB,aAAc,OAAQxjB,QAAS,OAAQkU,UAAW,OAAQ2L,aAAc,OAAQ1I,gBAAiB,SAAvJ,UACI,eAAC1T,EAAA,EAAD,CAAKvF,UAAU,0BAAf,UACI,cAACwF,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,mBACU6hB,EAAkBhB,UAAUI,mBAI9C,cAACjhC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,oBACW6hB,EAAkBhB,UAAUroC,YAI/C,cAACwH,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,8BACqB,IAAI1c,KAAKu+B,EAAkBhB,UAAU19B,MAAM+c,mBAAmB,gBAI3F,cAAClgB,EAAA,EAAD,CAAKE,GAAI,EAAT,SACI,cAAC6f,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,6BACoB,IAAI1c,KAAKu+B,EAAkB1+B,MAAM+c,mBAAmB,mBAKpF,eAACH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,6BACA,cAAC8hB,GAAA,EAAD,CACI1hC,GAAG,WACHxH,MAAOipC,EAAkBhB,UAAU11B,QACnCzT,UAAQ,OAEhB,eAACqoB,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,4BACA,cAAC8hB,GAAA,EAAD,CACI1hC,GAAG,WACHxH,MAAOipC,EAAkBd,aACzBrpC,UAAQ,WCdbqqC,GA7BmB,WAAO,IAAD,EACcnqC,mBAAS,IADvB,mBAC/BoqC,EAD+B,KACXC,EADW,KActC,OAXAjqC,qBAAU,WAAM,4CACd,sBAAAjC,EAAA,sDACEzC,EACGqK,IADH,yCACyC3G,MACtCsD,MAAK,SAACF,GACL6nC,EAAsB7nC,EAAIzF,SACzBsH,OAAM,eALb,4CADc,uBAAC,WAAD,wBAQdolC,KACC,IAGD,8BACGW,GACCA,EAAmBzjC,KAAI,SAAC2jC,GACtB,OACE,cAAC,GAAD,CAEEL,kBAAmBK,GADdA,EAAG/qC,UCePgrC,GAnCgB,WAC3B,OACI,sBAAM3nC,UAAU,aAAhB,SACI,cAACoF,EAAA,EAAIoC,UAAL,CAAe7K,GAAG,oBAAoBkf,iBAAiB,QAAQ8K,eAAa,EAA5E,SACI,eAACphB,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACI,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACI,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACI,cAAC8b,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,8BAIJ,cAACwW,EAAA,EAAIrT,KAAL,UACI,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,4BAMZ,cAACE,EAAA,EAAD,CAAKxF,UAAU,gBAAgB2F,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIgC,GAAI,GAAzD,SACI,eAACrC,EAAA,EAAI4W,QAAL,WACI,cAAC4K,GAAA,EAAD,CAASthB,SAAS,QAAlB,SACI,cAAC,GAAD,MAEJ,cAACshB,GAAA,EAAD,CAASthB,SAAS,SAAlB,SACI,cAAC,GAAD,mBCwCjBsiC,I,OAjEkB,SAAC,GAAyB,IAAvBlqB,EAAsB,EAAtBA,SAAUmqB,EAAY,EAAZA,MAAY,EAC1BzqC,mBAAS,GADiB,mBAC/C2qB,EAD+C,KACvCC,EADuC,OAEtB5qB,mBAAS,IAFa,mBAE/C6qB,EAF+C,KAErCC,EAFqC,KAyBtD,OArBA1qB,qBAAU,WAAM,4CACZ,4BAAAjC,EAAA,sEAC0BzC,EAAIqK,IACtB,iBAAmB3G,IAAmB,WACxCiF,OAAM,eAHZ,cACUrI,EADV,OAII4uB,EAAU5uB,EAAUA,EAAQe,KAAO,GAJvC,kBAKWf,GALX,4CADY,uBAAC,WAAD,wBAQZ+uB,KACD,IAEH3qB,qBAAU,WAAM,4CACZ,4BAAAjC,EAAA,sEAC0BzC,EAAIqK,IAAI,gCAAkC4kB,GAAQtmB,OAAM,eADlF,cACUrI,EADV,OAEI8uB,EAAY9uB,EAAUA,EAAQe,KAAO,IAFzC,kBAIWf,GAJX,4CADY,uBAAC,WAAD,wBAOZgvB,KACD,CAACL,IAGA,eAACva,GAAA,EAAD,CAAM5L,MAAO,CAAE+f,aAAc,QAA7B,UACI,cAACnU,GAAA,EAAKpG,OAAN,UACI,cAACI,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,SACI,eAACnb,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,mBACQjI,EAASljB,QAEjB,cAACgL,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACI,qBAAK/jB,MAAO,CAAEwb,MAAO,SAArB,mBACQM,EAASoqB,cADjB,aACmCpqB,EAASqqB,wBAM5D,cAACv6B,GAAA,EAAKjG,KAAN,UACI,cAACC,GAAA,EAAD,2BACekW,EAASrV,cAG5B,cAACmF,GAAA,EAAKrE,OAAN,CAAanJ,UAAU,oBAAvB,SACI,cAACwH,GAAA,EAAD,CAAWkZ,OAAK,EAAhB,SACI,eAACnb,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,gCACqBjI,EAASqG,cAE9B,cAACve,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACOsC,GAAiC,GAArBA,EAASjO,SAAvB,sCAAsE0D,EAASqG,YAAc,EAAIkE,EAASjO,SAAW,MAAMguB,QAAQ,IAAO,KAE/I,cAACxiC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACI,cAAC1lB,EAAA,EAAD,CAAQ2B,MAAO,CAAE6L,MAAO,QAAUzH,QAAS,WAAQ6hC,EAAMnqB,IAAzD,+BCzDtBuqB,GAA2B,SAAC,GAA2B,IAAzBzzB,EAAwB,EAAxBA,WAAYqzB,EAAY,EAAZA,MAE5C,OAEI,cAACrgC,GAAA,EAAD,UACKgN,EAAWzQ,KAAI,SAACmpB,GACb,OAAO,cAAC,GAAD,CAA0BxP,SAAUwP,EAAG2a,MAAO,WAAQA,EAAM3a,YAOnF+a,GAAyBzpC,aAAe,CACpCgW,WAAY,IAGDyzB,UClBTC,GAAuB,SAAC,GAAmB,IAAjBlmB,EAAgB,EAAhBA,UAC5B,OACI,cAACxZ,GAAA,EAAD,CAAW5G,MAAO,CAAE+f,aAAc,QAAlC,SACKK,EAAUje,KAAI,SAAC6jB,GACZ,OAAO,cAACpf,GAAA,EAAUC,KAAX,0BAA0Bmf,EAAEyd,aAA5B,eAA+Czd,EAAE9E,aAAjD,sBAA2E8E,EAAEugB,SAA7E,gBAMvBD,GAAqB1pC,aAAe,CAChCwjB,UAAW,IAGAkmB,UC2KAE,GAlLO,WAAO,IAAD,EACIhrC,mBAAS,IADb,mBACnBiuB,EADmB,KACVC,EADU,OAGUluB,mBAAS,IAHnB,mBAGnBoX,EAHmB,KAGPC,EAHO,OAIoBrX,oBAAS,GAJ7B,mBAInBirC,EAJmB,KAIFC,EAJE,OAKElrC,mBAAS,cALX,mBAKnBmrC,EALmB,KAKXC,EALW,OAMQprC,mBAAS,OANjB,mBAMnBqrC,EANmB,KAMRC,EANQ,OAQUtrC,mBAAS,IARnB,mBAQnBmuB,EARmB,KAQPC,EARO,KASlBtsB,EAAaC,sBAAbD,SAiCR1B,qBAAU,WAGR,GAAuC,IAAnCkb,OAAOC,KAAK4S,GAAYjvB,QAAgBivB,EAAWod,cAAgBjwB,OAAvE,CAIA,IAAIve,EAAOoxB,EACX,MAAkB,YAAdpxB,EAAKU,OACP4Z,EAAc,IACd6zB,GAAmB,QACnBppC,EAAS,mBAAoB,CAAEa,WAAY,WAEpB,aAAd5F,EAAKU,OACd4Z,EAAc,IACdvV,EAAS,wCAAyC,CAAEa,WAAY,eAChEuoC,GAAmB,SAIrBxvC,EAAI,CACF2yB,OAAQ,OACRC,IAAI,+BAAD,OAAiC6c,EAAjC,kBAAiDE,GACpDtuC,KAAMA,IAEL2F,MAAK,SAACF,GACL6U,EAAc7U,EAAIzF,MAClBmuC,GAAmB,MAEpB7mC,OAAM,WACLgT,EAAc,IACdvV,EAAS,mBAAoB,CAAEa,WAAY,UAC3CuoC,GAAmB,SAEtB,CAAC/c,EAAYgd,EAAQE,IAqBxB,OACE,qBAAKzoC,UAAU,iCAAf,SACE,eAACwH,GAAA,EAAD,WACE,cAAC5J,EAAA,EAAD,CACE4B,SAAU,SAAC5F,IAtFE,SAACA,GAKpB,GAJAA,EAAE6F,iBACF7F,EAAE8F,kBAGkC,IAAhCgZ,OAAOC,KAAK0S,GAAS/uB,QAAgB+uB,EAAQsd,cAAgBjwB,OAAjE,CAKA,IAAIiT,EAAW,IAAIpP,SACnBoP,EAASnP,OAAO,OAAQ6O,GAExBvyB,EAAI,CACF2yB,OAAQ,OACRC,IAAI,4BAAD,OAA8BlvB,KACjCrC,KAAMwxB,EACNzyB,QAAS,CAAE,eAAgB,yBAE1B4G,MAAK,SAACF,GACL4rB,EAAc5rB,EAAIzF,SAEnBsH,OAAM,WACLvC,EAAS,mBAAoB,CAAEa,WAAY,kBAjB7Cb,EAAS,wBAAyB,CAAEa,WAAY,YAiF1C6rB,CAAahyB,IAFjB,SAKE,cAAC4N,GAAA,EAAD,CAAW5F,MAAO,CAAE+f,aAAc,QAAlC,SACE,eAACpc,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKxF,UAAU,UAAU0F,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAAhD,SACE,eAAC/nB,EAAA,EAAKiuB,KAAN,WACE,cAACjuB,EAAA,EAAKiuB,KAAK/tB,MAAX,6BACA,cAACF,EAAA,EAAKiuB,KAAKC,MAAX,CAAiB7uB,SAAU,SAACrD,GAAD,OAnGlB,SAACA,GACxB0xB,EAAW1xB,EAAEuE,OAAO4tB,MAAM,IAkGsBC,CAAiBpyB,WAIvD,cAAC4L,EAAA,EAAD,CAAKxF,UAAU,UAAU0F,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAAhD,SACE,cAAC1lB,EAAA,EAAD,CAAQjC,KAAK,SAAb,6BAKR,eAACJ,EAAA,EAAD,CAAM0sB,QAAS+d,EAAf,UACE,oDACA,cAAC,GAAD,CACErmB,UAAauJ,EAAWqd,aAAerd,EAAWqd,aAAe,KAEnE,cAACphC,GAAA,EAAD,UACE,eAACjC,EAAA,EAAD,CAAKvF,UAAU,wBAAf,UACE,cAACwF,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,eAAC/nB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,sBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACrD,GACT4uC,EAAU5uC,EAAEuE,OAAOC,QAHvB,UAME,wBAAQA,MAAM,aAAa8kB,UAAQ,EAAnC,yBAGA,wBAAQ9kB,MAAM,OAAd,2BACA,wBAAQA,MAAM,WAAd,4BACA,wBAAQA,MAAM,cAAd,kBACA,wBAAQA,MAAM,SAAd,4BAIN,cAACoH,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,eAAC/nB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,oBACA,eAACF,EAAA,EAAKG,QAAN,CACE6H,GAAG,SACH3I,SAAU,SAACrD,GACT8uC,EAAa9uC,EAAEuE,OAAOC,QAH1B,UAME,wBAAQA,MAAM,MAAM8kB,UAAQ,EAA5B,uBAGA,wBAAQ9kB,MAAM,OAAd,wCAOZ,cAAC,GAAD,CACEoW,WAAYA,EACZqzB,MAAO,SAACnqB,IAzFF,SAACA,GACb,IAAIvjB,EAAI,2BACHoxB,GADG,IAENjf,WAAYoR,EAAS/gB,GACrBonB,WAAYrG,EAASqG,aAEvBjrB,EACG6G,KADH,2CAC4CnD,KAAoBrC,GAC7D2F,MAAK,WACJZ,EAAS,0BAA2B,CAAEa,WAAY,YAClDyrB,EAAc,IACd/W,EAAc,IACd6zB,GAAmB,MAEpB7mC,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,aA2EzC8nC,CAAMnqB,IAHV,SAMG,YCiFImrB,OAxPf,WAAgC,IAAD,EACIzrC,mBAAS,IADb,mBACtBonC,EADsB,KACZC,EADY,OAEernC,mBAAS,MAFxB,mBAEtBsnC,EAFsB,KAENC,EAFM,OAGDvnC,oBAAS,GAHR,mBAGtBmhB,EAHsB,KAGdC,EAHc,OAICphB,oBAAS,GAJV,mBAItBwlC,EAJsB,KAIbC,EAJa,OAKDzlC,mBAAS,QALR,mBAKtB+gB,EALsB,KAKdC,EALc,OAMDhhB,mBAAS,QANR,mBAMtBsL,EANsB,KAMdogC,EANc,KAOrB5pC,EAAaC,sBAAbD,SAER1B,qBAAU,WAAM,4CACd,4BAAAjC,EAAA,sEACwBzC,EACnBqK,IAAI,0BAA4B3G,KAChCsD,MAAK,SAACF,GACL6kC,EAAa7kC,EAAIzF,MACjB0oC,GAAYD,MAEbnhC,OAAM,SAACxH,GACNiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,aARnD,cACQ3G,EADR,yBAWSA,GAXT,4CADc,uBAAC,WAAD,wBAcd8rC,KACC,CAAC3mB,IAEJ/gB,qBAAU,WACRurC,MACC,CAACnG,IAEJ,IAIMjjB,EAAY,SAACqpB,GACC,SAAdA,IAEJxE,EAAS5kB,MAAK,SAAUqpB,EAAIC,GAC1B,OAAOD,EAAGE,iBAAmBD,EAAGC,oBAGhB,SAAdH,GACFxE,EAASzkB,YAIPgpB,EAAc,WAClB,GAAe,SAAXrgC,EAAJ,CAKA,IADA,IAAIyX,EAAW,GACN9Q,EAAI,EAAGA,EAAIm1B,EAASloC,OAAQ+S,KACpB,cAAX3G,GAAgD,cAAtB87B,EAASn1B,GAAGxU,OAEpB,QAAX6N,GAA0C,QAAtB87B,EAASn1B,GAAGxU,OAErB,aAAX6N,GAA+C,aAAtB87B,EAASn1B,GAAGxU,QAH9CslB,EAAS/G,KAAKorB,EAASn1B,IAQ3Bo1B,EAAatkB,KAGf,OACE,sBAAKngB,UAAU,iCAAf,UACE,cAACuF,EAAA,EAAD,CACE3D,MAAO,CACL0hC,eAAgB,SAChBttB,UAAW,OACX9H,QAA6B,IAApBs2B,EAASloC,QAA2B,SAAXoM,EAAoB,OAAS,QAJnE,SAOE,uEAEF,eAACnD,EAAA,EAAD,CACE3D,MAAO,CACL0hC,eAAgB,SAChBttB,UAAW,OACX9H,QAA6B,IAApBs2B,EAASloC,QAA2B,SAAXoM,EAAoB,OAAS,QAJnE,UAOE,cAAC9K,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,sBACA,eAAC/S,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACGwhB,IAGH,eAAChR,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,QACVuB,EAAU,SAHd,kBAQA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,+BACVuB,EAAU,QAHd,yCAQA,cAACxS,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACPoY,EAAU,gCACVuB,EAAU,SAHd,gDAUJ,cAAC/hB,EAAA,EAAKE,MAAN,CAAY8D,MAAO,CAAEse,YAAa,QAAlC,sBACA,eAAC/S,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiBlN,QAAQ,UAAUvD,GAAG,iBAAtC,SACG+L,IAGH,eAACyE,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP8iC,EAAU,QACVtqB,GAAWD,GACXomB,EAAkB,OAJtB,kBASA,cAACx3B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP8iC,EAAU,aACVtqB,GAAWD,GACXomB,EAAkB,OAJtB,uBASA,cAACx3B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP8iC,EAAU,OACVtqB,GAAWD,GACXomB,EAAkB,OAJtB,iBASA,cAACx3B,GAAA,EAAS1E,KAAV,CACEzC,QAAS,WACP8iC,EAAU,YACVtqB,GAAWD,GACXomB,EAAkB,OAJtB,+BAYN,cAACp/B,EAAA,EAAD,CACE3D,MAAO,CACL0hC,eAAgB,gBAChBp1B,QAA6B,IAApBs2B,EAASloC,QAA2B,SAAXoM,EAAoB,OAAS,QAHnE,SAME,eAAChB,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,sCACA,uCACA,mDACA,sDAGJ,gCACGwkC,GACCA,EAASzgC,KAAI,SAACnK,GAAD,OACX,qBAEEoM,QAAS,kBA7JI,SAAC0+B,GAC5BC,EAAkBD,GA4JWS,CAAqBvrC,IACpCoG,WACgB,OAAd0kC,QAAc,IAAdA,OAAA,EAAAA,EAAgBt8B,QAASxO,EAAEwO,KACvB,mCACA,iBANR,UASE,6BAAKxO,EAAEwO,OACP,6BAAKxO,EAAEiB,QACP,6BACGgP,KAAOjQ,EAAEuvC,kBAAkBp/B,OAAO,yBAErC,6BACuB,MAApBnQ,EAAEwvC,eACCv/B,KAAOjQ,EAAEwvC,gBAAgBr/B,OAAO,uBAChC,QAhBDnQ,EAAEwO,gBAuBnB,cAAC7C,EAAA,EAAD,CACE3D,MAAO,CACL0hC,eAAgB,SAChBttB,UAAW,OACX9H,QAA2B,MAAlBw2B,EAAyB,OAAS,QAJ/C,SAOE,+DAEF,cAACn/B,EAAA,EAAD,CAAK3D,MAAO,CAAEsM,QAA2B,MAAlBw2B,EAAyB,OAAS,QAAzD,SACE,eAACh9B,GAAA,EAAD,CACEG,SAAO,EACPF,UAAQ,EACRzH,QAAQ,QACRF,UAAU,wBAJZ,UAME,gCACE,+BACE,sCACA,sCACA,+CAGJ,gCACG0kC,GACCA,EAAekE,aAAa7kC,KAAI,SAACnK,GAAD,OAC9B,+BACE,6BAAKA,EAAEyrC,eACP,6BAAKzrC,EAAEkpB,eACP,6BAAKlpB,EAAEuuC,aAHAvuC,EAAEyrC,4BCtMZgE,OA9Cf,WACE,OACE,sBAAMrpC,UAAU,aAAhB,SACE,cAACoF,EAAA,EAAIoC,UAAL,CACE7K,GAAG,oBACHkf,iBAAiB,QACjB8K,eAAa,EAHf,SAKE,eAACphB,EAAA,EAAD,CAAKvF,UAAU,WAAf,UACE,cAACwF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGgC,GAAI,GAAIzH,UAAU,YAA5C,SACE,eAAC8b,EAAA,EAAD,CAAK5b,QAAQ,QAAQF,UAAU,cAA/B,UACE,cAAC8b,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,QAA7C,sBAIF,cAACwW,EAAA,EAAIrT,KAAL,UACE,cAACqT,EAAA,EAAIC,KAAL,CAAU/b,UAAU,gBAAgBsF,SAAS,SAA7C,2BAMN,cAACE,EAAA,EAAD,CACExF,UAAU,gBACV2F,GAAI,EACJD,GAAI,EACJD,GAAI,GACJgC,GAAI,GACJ7F,MAAO,CAAEqX,gBAAiB,8BAN5B,SAQE,eAAC7T,EAAA,EAAI4W,QAAL,WACE,cAAC4K,GAAA,EAAD,CAASthB,SAAS,QAAlB,SACE,cAACgkC,GAAD,MAEF,cAAC1iB,GAAA,EAAD,CAASthB,SAAS,SAAlB,SACE,cAAC,GAAD,mBC+DDikC,GAlGc,SAACpsC,GAAW,IAAD,EACZC,mBAAWD,EAAM8qB,SAAW9qB,EAAM8qB,SAASztB,KAAO,KADtC,mBAC7BA,EAD6B,KACvBy4B,EADuB,OAEQ71B,mBAAWD,EAAM8qB,SAAW9qB,EAAM8qB,SAASI,eAAiB,GAFpE,mBAE7BmhB,EAF6B,KAEbC,EAFa,OAGJrsC,mBAAWD,EAAM8qB,SAAW9qB,EAAM8qB,SAASjO,SAAW,GAHlD,mBAG7BA,EAH6B,KAGnBC,EAHmB,KAI5B/a,EAAaC,sBAAbD,SAER1B,qBAAU,WACNhC,QAAQ4U,IAAIjT,EAAM8qB,UAClBgL,EAAU91B,EAAM8qB,SAAW9qB,EAAM8qB,SAASztB,KAAO,KACjDivC,EAAoBtsC,EAAM8qB,SAAW9qB,EAAM8qB,SAASI,eAAiB,GACrEpO,EAAc9c,EAAM8qB,SAAW9qB,EAAM8qB,SAASjO,SAAW,KAC1D,IA6BH,OACI,eAAChT,GAAA,EAAD,2BAAW7J,GAAX,IAAkB+J,kBAAgB,gCAAgCC,UAAQ,EAA1E,UACI,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,GAAA,EAAMM,MAAP,CAAa3K,GAAG,gCAAhB,SACOQ,EAAM8qB,SAAR,eAA2B9qB,EAAM8qB,SAASztB,MAAS,uBAG5D,cAACwM,GAAA,EAAMO,KAAP,UACI,eAAC3J,EAAA,EAAD,CAAM4B,SAAU,SAACtB,GAAD,OAnCP,SAACtE,GAClBA,EAAE6F,iBACF7F,EAAE8F,kBAEF,IAAIvF,EAAO,CACPwC,GAAMQ,EAAM8qB,SAAW9qB,EAAM8qB,SAAStrB,IAAM,EAC5CnC,KAAMA,EACN6tB,eAAgB5kB,SAAS+lC,GACzBxvB,SAAU0vB,WAAW1vB,IAGzBlhB,EAAI6G,KAAK,yBAA0BxF,GAC9B2F,MAAK,WACF3C,EAAMwsC,YACNxsC,EAAMiM,YAET3H,OAAM,SAACxH,GACJiF,EAASlF,EAAgBC,GAAM,CAAE8F,WAAY,aAkBlB6rB,CAAa1tB,IAAxC,UACI,eAACN,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,QACLf,SAAU,SAACiB,GAAD,OAAW+0B,EAAQ/0B,EAAMC,OAAOC,QAC1CpB,aAAgBG,EAAM8qB,SAAW9qB,EAAM8qB,SAASztB,KAAO,GACvDmB,UAAQ,OAGhB,eAACiC,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAWurC,EAAkBvrC,EAAMC,OAAOC,QACpDpB,aAAgBG,EAAM8qB,SAAW9qB,EAAM8qB,SAASI,eAAiB,EACjE9f,IAAK,EACLwE,IAAK,IACLoW,KAAM,EACNxnB,UAAQ,OAGhB,eAACiC,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,uBACA,cAACF,EAAA,EAAKG,QAAN,CACIC,KAAK,SACLf,SAAU,SAACiB,GAAD,OAAW+b,EAAY/b,EAAMC,OAAOC,QAC9CpB,aAAgBG,EAAM8qB,SAAW9qB,EAAM8qB,SAASjO,SAAW,EAC3DzR,IAAK,EACLwE,IAAK,IACLoW,KAAM,IACNxnB,UAAQ,OAGhB,cAAC6L,GAAA,EAAD,UACI,eAACjC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACI,cAAC1lB,EAAA,EAAD,CAAQC,QAAQ,iBAAiB8F,QAAS7I,EAAMiM,OAAhD,sBAEJ,cAAC5D,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACI,cAAC1lB,EAAA,EAAD,CAAQC,QAAQ,oBAAoBlC,KAAK,SAAzC,sCCbjB4rC,GA3EM,SAAC,GAAiC,IAA/B3hB,EAA8B,EAA9BA,SAAU4hB,EAAoB,EAApBA,cAAoB,EACJzsC,oBAAS,GADL,mBAC7CmmB,EAD6C,KAC3BC,EAD2B,OAENpmB,oBAAS,GAFH,mBAE7Cw0B,EAF6C,KAE5BC,EAF4B,KAgBpD,OACE,eAACrkB,GAAA,EAAD,CAAM5L,MAAO,CAAE+f,aAAc,QAA7B,UACE,cAACnU,GAAA,EAAKpG,OAAN,UACE,cAACI,GAAA,EAAD,UACE,eAACjC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,mBAAqCsC,EAASztB,QAC9C,cAACgL,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,qBAAK/jB,MAAO,CAAEwb,MAAO,SAArB,mBAAoC6K,EAASjO,SAA7C,gBAKR,cAACxM,GAAA,EAAKjG,KAAN,UACE,cAACC,GAAA,EAAD,qCAAgCygB,EAASI,oBAE3C,cAAC7a,GAAA,EAAKrE,OAAN,UACE,cAAC3B,GAAA,EAAD,UACE,eAACjC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,cAAC1lB,EAAA,EAAD,CACEC,QAAQ,kBACR0B,MAAO,CAAE6L,MAAO,OAAQq8B,WAAY,KACpC9jC,QAAS,WACPwd,GAAoB,IAJxB,oBAUF,cAAChe,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,cAAC1lB,EAAA,EAAD,CACEC,QAAQ,iBACR0B,MAAO,CAAE6L,MAAO,QAChBzH,QAAS,WACP6rB,GAAmB,IAJvB,6BAaR,cAAC,GAAD,CACE3Z,MAAO,UAAY+P,EAASztB,KAC5B8S,KAAMskB,EACNxoB,OAAQ,kBAAMyoB,GAAmB,IACjCjE,SA3DiB,WACrB90B,EAAI4T,OAAJ,gCAAoCub,EAAStrB,KAAMmD,MAAK,WACtD+pC,OAEFhY,GAAmB,MAyDjB,cAAC,GAAD,CACEvkB,KAAMiW,EACN0E,SAAUA,EACV7e,OAAQ,kBAAMoa,GAAoB,IAClCmmB,UA1De,WACnBE,IACAhY,GAAmB,UC2CRkY,GAxDM,WAAO,IAAD,EACW3sC,mBAAS,IADpB,mBAClB4sC,EADkB,KACNC,EADM,OAEK7sC,oBAAS,GAFd,mBAElBoN,EAFkB,KAET0E,EAFS,OAGuB9R,oBAAS,GAHhC,mBAGlBmmB,EAHkB,KAGAC,EAHA,KAKzBhmB,qBAAU,WACR1E,EAAIqK,IAAJ,0BAAkCrD,MAAK,SAACF,GACtCqqC,EAAcrqC,EAAIzF,SACjBsH,OAAM,iBACR,CAAC+I,IAMJ,OACE,eAAChD,GAAA,EAAD,CAAW5F,MAAO,CAAE+f,aAAc,OAAQ3L,UAAW,QAAU0K,OAAK,EAApE,UACE,cAACnb,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,8BACGqkB,EAAWjmC,KAAI,SAAC+/B,GACf,OACE,cAAC,GAAD,CAEE7b,SAAU6b,EACV+F,cAAe,WACb36B,GAAY1E,KAHTs5B,EAAEnnC,aAWnB,cAAC4I,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEkgB,KAAM,EAAGD,OAAQ,GAA5B,SACE,cAAC1lB,EAAA,EAAD,CACE2B,MAAO,CAAE6L,MAAO,QAChBvN,QAAQ,oBACR8F,QAAS,WACPwd,GAAoB,IAJxB,kCAWJ,cAAC,GAAD,CACElW,KAAMiW,EACNna,OAAQ,kBAAMoa,GAAoB,IAClCmmB,UAvCc,WAClBz6B,GAAY1E,UCcD0/B,I,cA1BM,SAAC,GAAiD,IAApCC,EAAmC,EAA9CC,UAAsBvtC,EAAwB,EAAxBA,SAAawtC,EAAW,wCAC5DnrC,EAAaC,sBAAbD,SAWR,OAVA1B,qBAAU,gBACQkM,GAAZ7M,IACGA,EAASqL,SAAStL,MACrBsC,EAAS,gBAAiB,CACxBa,WAAY,aAIjB,CAAClD,IAGF,cAAC,IAAD,2BACMwtC,GADN,IAEEC,OAAQ,SAACntC,GAAD,OACNN,EAASqL,SAAStL,KAChB,cAACutC,EAAD,eAAehtC,IAEf,cAAC,IAAD,CAAUmC,GAAG,YC2MRirC,OArLf,WACE,OACE,cAAC,gBAAD,CACEC,YAAY,OACZC,mBAAmB,OACnBC,UAAU,aAHZ,SAKE,eAAC,KAAD,WACE,sBAAK9oC,MAAO,CAAEC,UAAW,SAAzB,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8oC,KAAK,IAAIC,OAAK,EAACR,UAAWtjB,KAGjC,cAAC,GAAD,CACE6jB,KAAK,gBACLP,UAAW3pC,EACX5D,SAAU,CAAC,QAGb,cAAC,GAAD,CACE8tC,KAAK,SACLP,UAAWjqC,EACXtD,SAAU,CAAC,QAEb,cAAC,GAAD,CACE8tC,KAAK,gBACLP,UAAWne,GACXpvB,SAAU,CAAC,KAAM,UAAW,iBAAkB,QAAS,gBAAiB,gBAE1E,cAAC,GAAD,CACE8tC,KAAK,6CACLP,UAAWje,GACXtvB,SAAU,CAAC,KAAM,UAAW,iBAAkB,QAAS,gBAAiB,gBAG1E,cAAC,GAAD,CACE8tC,KAAK,WACLC,OAAK,EACLR,UAAWrgB,GACXltB,SAAU,CAAC,aAGb,cAAC,GAAD,CACE8tC,KAAK,eACLC,OAAK,EACLR,UAAWzhB,GACX9rB,SAAU,CACR,QACA,aACA,gBACA,WACA,oBAIJ,cAAC,GAAD,CACE8tC,KAAK,mCACLP,UAAWjI,GACXtlC,SAAU,CAAC,aAGb,cAAC,GAAD,CACE8tC,KAAK,yBACLP,UAAWlH,GACXrmC,SAAU,CAAC,aAGb,cAAC,GAAD,CACE8tC,KAAK,yBACLP,UAAWrG,GACXlnC,SAAU,CAAC,aAGb,cAAC,GAAD,CACE8tC,KAAK,UACLP,UAAW7F,GACX1nC,SAAU,CAAC,aAGb,cAAC,GAAD,CACE8tC,KAAK,sBACLP,UAAWlG,GACXrnC,SAAU,CAAC,aAGb,cAAC,GAAD,CACE8tC,KAAK,oBACLP,UAAW1G,GACX7mC,SAAU,CAAC,aAQb,cAAC,GAAD,CACE8tC,KAAK,oBACLP,UAAWrY,GACXl1B,SAAU,CAAC,WAEb,cAAC,GAAD,CACE8tC,KAAK,kBACLP,UAAW1V,GACX73B,SAAU,CAAC,WAGb,cAAC,GAAD,CACE8tC,KAAK,0BACLP,UAAW/U,GACXx4B,SAAU,CAAC,gBAAiB,gBAE9B,cAAC,GAAD,CACE8tC,KAAK,gCACLP,UAAW/J,GACXxjC,SAAU,CAAC,mBAEb,cAAC,GAAD,CACE8tC,KAAK,6BACLP,UAAW1J,GACX7jC,SAAU,CAAC,gBAEb,cAAC,GAAD,CACE8tC,KAAK,eACLP,UAAWlI,GACXrlC,SAAU,CAAC,WAEb,cAAC,GAAD,CACE8tC,KAAK,mBACLP,UAAWlU,GACXr5B,SAAU,CAAC,gBAAiB,gBAE9B,cAAC,GAAD,CACE8tC,KAAK,mBACLP,UAAW1R,GACX77B,SAAU,CAAC,gBAAiB,gBAE9B,cAAC,GAAD,CACE8tC,KAAK,6BACLP,UAAWzL,GACX9hC,SAAU,CAAC,gBAAiB,gBAE9B,cAAC,GAAD,CACE8tC,KAAK,mBACLP,UAAWjK,GACXtjC,SAAU,CAAC,gBAAiB,gBAE9B,cAAC,GAAD,CACE8tC,KAAK,yBACLP,UAAWvJ,GACXhkC,SAAU,CAAC,gBAAiB,gBAE9B,cAAC,GAAD,CACE8tC,KAAK,mBACLP,UAAWtD,GACXjqC,SAAU,CAAC,aAEb,cAAC,GAAD,CACE8tC,KAAK,6BACLP,UAAWzC,GACX9qC,SAAU,CAAC,WAEb,cAAC,GAAD,CACE8tC,KAAK,kBACLP,UAAWf,GACXxsC,SAAU,CAAC,aAEb,cAAC,GAAD,CACE8tC,KAAK,iBACLP,UAAWS,GACXhuC,SAAU,CAAC,iBAIjB,cAAC,GAAD,U,UC3NFiuC,GAAUC,aAAgB,CAC9BrwC,SAOaswC,GAJDC,YAAe,CAC3BH,aCIkBI,QACW,cAA7B9Y,OAAOzuB,SAASwnC,UAEe,UAA7B/Y,OAAOzuB,SAASwnC,UAEhB/Y,OAAOzuB,SAASwnC,SAASlvC,MACvB,2DCVNmvC,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJpnC,SAASC,eAAe,SDqHpB,kBAAmBuc,WACrBA,UAAUkrB,cAAcC,MAAMzrC,MAAK,SAAA0rC,GACjCA,EAAaC,iB","file":"static/js/main.69878899.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://apotekaprojekat.herokuapp.com\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    let token = null;\r\n    try {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } catch (e) { }\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default api;\r\n","export function getErrorMessage(err) {\r\n    if (!err.response) {\r\n        return \"\";\r\n    }\r\n    return err.response.data.message ? err.response.data.message : err.response.data\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../api\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { getErrorMessage } from '../errorHandler'\r\n\r\nconst initialUser = localStorage.getItem(\"user\")\r\n  ? JSON.parse(localStorage.getItem(\"user\"))\r\n  : null;\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: initialUser,\r\n  },\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      state.user = action.payload;\r\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\r\n    },\r\n    logoutSuccess: (state, action) => {\r\n      state.user = null;\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nconst { loginSuccess, logoutSuccess } = slice.actions;\r\n\r\nexport const login = ({ email, password }) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/auth/login/\", {\r\n      email,\r\n      password,\r\n    });\r\n    dispatch(loginSuccess(res.data));\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    return dispatch(logoutSuccess());\r\n  } catch (e) {\r\n    return console.error(e.message);\r\n  }\r\n};\r\n","function textValidator(input, required, pattern, minLength, maxLength) {\r\n    let valid = true;\r\n    if (!input && required) {\r\n        return false;\r\n    }\r\n    if (!!pattern && !!input) {\r\n        const main = pattern.match(/\\/(.+)\\/.*/)[1]\r\n        const options = pattern.match(/\\/.+\\/(.*)/)[1]\r\n        const regex = new RegExp(main, options);\r\n        valid = valid && regex.test(input);\r\n    }\r\n\r\n    if (!!minLength && !!input) {\r\n        valid = valid && input.length >= minLength;\r\n    }\r\n\r\n    if (!!maxLength && !!input) {\r\n        valid = valid && input.length <= maxLength;\r\n    }\r\n\r\n    return valid;\r\n}\r\n\r\nfunction emailValidator(input, required = true) {\r\n    return textValidator(input, required, \"/^(([^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+\\\\.)+[^<>()[\\\\]\\\\.,;:\\\\s@\\\"]{2,})$/i\", null, null)\r\n}\r\n\r\nfunction passwordValidator(input, required = true) {\r\n    return textValidator(input, required, null, 6, 255)\r\n}\r\n\r\nfunction streetValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 150);\r\n}\r\n\r\nfunction cityValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 100);\r\n}\r\n\r\nfunction countryValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 100);\r\n}\r\n\r\nfunction firstNameValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 30);\r\n}\r\n\r\nfunction lastNameValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 60);\r\n}\r\n\r\nfunction phoneNumberValidator(input, required = true) {\r\n    return textValidator(input, required, \"/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$/\", 1, 30);\r\n}\r\n\r\nfunction additionalNotesValidator(input, required = true) {\r\n    return textValidator(input, required, null, 0, 250);\r\n}\r\n\r\nfunction medicineCodeValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 30);\r\n}\r\n\r\nfunction medicineContentValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 200);\r\n}\r\n\r\nfunction medicineNameValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 50);\r\n}\r\n\r\nfunction sideEffectValidator(input, required = true) {\r\n    return textValidator(input, required, null, 1, 250);\r\n}\r\n\r\nconst Validator = {\r\n    'email': emailValidator,\r\n    'password': passwordValidator,\r\n    'firstName': firstNameValidator,\r\n    'lastName': lastNameValidator,\r\n    'telephone': phoneNumberValidator,\r\n    'city': cityValidator,\r\n    'street': streetValidator,\r\n    'country': countryValidator,\r\n    'additionalNotes': additionalNotesValidator,\r\n    'medicineCode': medicineCodeValidator,\r\n    'medicineContent': medicineContentValidator,\r\n    'medicineName': medicineNameValidator,\r\n    'sideEffects': sideEffectValidator\r\n}\r\n\r\nexport default Validator;","export function getIdFromToken() {\r\n  try {\r\n    let token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    let parsedToken = JSON.parse(atob(token.split(\".\")[1]));\r\n    let id = parsedToken.id;\r\n    return id;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getUserTypeFromToken() {\r\n  try {\r\n    let token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    let parsedToken = JSON.parse(atob(token.split(\".\")[1]));\r\n    let userType = parsedToken.userType;\r\n    return userType;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction TextFormGroup({ name, placeholder, minLength, maxLength, defaultValue, required, pattern, onChange, disabled, ...props }) {\r\n\r\n    const [errors, setErrors] = useState(\"\")\r\n    const [regex, setRegex] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!!pattern) {\r\n            const main = pattern.match(/\\/(.+)\\/.*/)[1]\r\n            const options = pattern.match(/\\/.+\\/(.*)/)[1]\r\n            let re = new RegExp(main, options)\r\n            setRegex(re)\r\n        }\r\n        findGroupErrors(defaultValue)\r\n    }, [])\r\n\r\n    const findGroupErrors = (fieldText) => {\r\n        let error = '';\r\n\r\n        if (required && (!fieldText || fieldText === ''))\r\n            error = 'This field cannot be blank!'\r\n\r\n        else if (!!pattern && !!regex && !!fieldText) {\r\n            if (!regex.test(fieldText)) {\r\n                error = 'Input data is not in a valid format'\r\n            }\r\n        }\r\n\r\n        else if (!!minLength && !!fieldText && fieldText.length < minLength)\r\n            error = 'Minimum number of characters is ' + minLength + '.'\r\n\r\n        else if (!!maxLength && !!fieldText && fieldText.length > maxLength) {\r\n            error = 'Maximum number of characters is ' + maxLength + '.'\r\n        }\r\n\r\n        else\r\n            error = ''\r\n\r\n        setErrors(error)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        onChange(event)\r\n        findGroupErrors(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Form.Group {...props}>\r\n            <Form.Label>{name}</Form.Label>\r\n            <Form.Control\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                defaultValue={defaultValue}\r\n                isInvalid={!!errors}\r\n                onChange={handleChange.bind(this)}\r\n                required={required}\r\n                disabled={disabled}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>\r\n                {errors}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\n\r\nTextFormGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    minLength: PropTypes.number,\r\n    maxLength: PropTypes.number,\r\n    defaultValue: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    pattern: PropTypes.string\r\n}\r\n\r\nTextFormGroup.defaultProps = {\r\n    required: false,\r\n    minLength: 0,\r\n    onChange: () => { },\r\n    maxLength: 100,\r\n    pattern: \"\",\r\n    disabled: false\r\n}\r\n\r\nexport default TextFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction EmailFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"E-mail\"}\r\n            placeholder={\"Enter e-mail...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            required={true}\r\n            onChange={(event) => props.onChange(event)}\r\n            pattern={\"/^(([^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\\\]\\\\.,;:\\\\s@\\\"]+\\\\.)+[^<>()[\\\\]\\\\.,;:\\\\s@\\\"]{2,})$/i\"}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default EmailFormGroup\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction PasswordFormGroup({ name, minLength, maxLength, onChange, ...props }) {\r\n\r\n    const [errors, setErrors] = useState(\"\")\r\n\r\n    const findGroupErrors = (fieldText) => {\r\n        let error = '';\r\n        if (!fieldText || fieldText === '')\r\n            error = 'Password cannot be blank!'\r\n        else if (!!minLength && fieldText.length < minLength)\r\n            error = 'Minimum number of characters is ' + minLength + '.'\r\n        else if (!!maxLength && fieldText.length > maxLength)\r\n            error = 'Maximum number of characters is ' + maxLength + '.'\r\n        else\r\n            error = ''\r\n        setErrors(error)\r\n    }\r\n\r\n    useEffect(findGroupErrors, [])\r\n\r\n    const handleChange = (event) => {\r\n        onChange(event)\r\n        findGroupErrors(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Form.Group {...props}>\r\n            <Form.Label>{name}</Form.Label>\r\n            <Form.Control\r\n                type=\"password\"\r\n                isInvalid={!!errors}\r\n                onChange={handleChange.bind(this)}\r\n                required={true}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>\r\n                {errors}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nPasswordFormGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    minLength: PropTypes.number,\r\n    maxLength: PropTypes.number,\r\n}\r\n\r\nPasswordFormGroup.defaultProps = {\r\n    minLength: 6,\r\n    onChange: () => { },\r\n    maxLength: 255,\r\n    name: \"Password\"\r\n}\r\n\r\nexport default PasswordFormGroup\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport { login } from '../../app/slices/userSlice'\r\nimport Validator from '../../app/validator'\r\nimport { getIdFromToken } from '../../app/jwtTokenUtils'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport EmailFormGroup from '../utilComponents/formGroups/EmailFormGroup'\r\nimport PasswordFormGroup from '../utilComponents/formGroups/PasswordFormGroup'\r\n\r\nfunction Login() {\r\n    const [form, setForm] = useState(\r\n        {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    )\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const { addToast } = useToasts()\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n    }\r\n\r\n    const validateForm = () => {\r\n        return Validator['email'](form['email'])\r\n            && Validator['password'](form['password'])\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (validateForm()) {\r\n            let loginPromise = dispatch(login(form))\r\n            loginPromise\r\n                .then(() => {\r\n                    if (!getIdFromToken()) {\r\n                        addToast(\"User not found\", { appearance: 'warning' });\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    if (user.user) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Form noValidate onSubmit={handleSubmit} className=\"my__login__form\">\r\n            <EmailFormGroup onChange={(event) => setField('email', event.target.value)}></EmailFormGroup>\r\n            <PasswordFormGroup onChange={(event) => setField('password', event.target.value)}></PasswordFormGroup>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\r\nimport \"../styling/home_page.css\";\r\nimport Login from \"./users/Login\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <main className=\"home__page my__login__container\">\r\n      <Login></Login>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction FirstNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"First Name\"}\r\n            placeholder={\"Enter first name...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default FirstNameFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction LastNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Last Name\"}\r\n            placeholder={\"Enter last name...\"}\r\n            minLength={1}\r\n            maxLength={60}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default LastNameFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction FirstNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Phone Number\"}\r\n            placeholder={\"Enter phone number...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            required={true}\r\n            onChange={(event) => props.onChange(event)}\r\n            pattern={\"/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$/\"}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default FirstNameFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction CityFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"City\"}\r\n            placeholder={\"Enter city...\"}\r\n            minLength={1}\r\n            maxLength={100}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default CityFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction CountryFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Country\"}\r\n            placeholder={\"Enter country...\"}\r\n            minLength={1}\r\n            maxLength={100}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default CountryFormGroup\r\n","import React from 'react'\r\nimport TextFormGroup from './TextFormGroup'\r\n\r\nfunction StreetFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Street\"}\r\n            placeholder={\"Enter street...\"}\r\n            minLength={1}\r\n            maxLength={150}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default StreetFormGroup\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport \"../styling/home_page.css\";\r\nimport FirstNameFormGroup from \"./utilComponents/formGroups/FirstNameFormGroup\";\r\nimport LastNameFormGroup from \"./utilComponents/formGroups/LastNameFormGroup\";\r\nimport EmailFormGroup from \"./utilComponents/formGroups/EmailFormGroup\";\r\nimport PasswordFormGroup from \"./utilComponents/formGroups/PasswordFormGroup\";\r\nimport PhoneNumberFormGroup from \"./utilComponents/formGroups/PhoneNumberFormGroup\";\r\nimport CityFormGroup from \"./utilComponents/formGroups/CityFormGroup\";\r\nimport CountryFormGroup from \"./utilComponents/formGroups/CountryFormGroup\";\r\nimport StreetFormGroup from \"./utilComponents/formGroups/StreetFormGroup\";\r\n\r\nimport api from \"../app/api\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { getErrorMessage } from \"../app/errorHandler\";\r\nimport Validator from \"../app/validator\";\r\n\r\nfunction Registration() {\r\n  const [form, setForm] = useState(\r\n    {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      telephone: '',\r\n      city: '',\r\n      street: '',\r\n      country: ''\r\n    }\r\n  );\r\n\r\n  const resetForm = () => {\r\n    setForm(\r\n      {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        telephone: '',\r\n        city: '',\r\n        street: '',\r\n        country: ''\r\n      }\r\n    )\r\n    formRef.current.reset();\r\n  }\r\n\r\n  const { addToast } = useToasts();\r\n  const formRef = useRef(null);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    return Validator['firstName'](form['firstName'])\r\n      && Validator['lastName'](form['lastName'])\r\n      && Validator['email'](form['email'])\r\n      && Validator['password'](form['password'])\r\n      && Validator['password'](form['repeatPassword'])\r\n      && Validator['telephone'](form['telephone'])\r\n      && Validator['city'](form['city'])\r\n      && Validator['street'](form['street'])\r\n      && Validator['country'](form['country'])\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (validateForm()) {\r\n      if (form['password'] !== form['repeatPassword']) {\r\n        addToast(\"Passwords do not match\", { appearance: 'warning' })\r\n        return;\r\n      }\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    const newForm = convertForm(form);\r\n    api\r\n      .post(\"/api/users/\", newForm)\r\n      .then(() => {\r\n        resetForm();\r\n        addToast(\"Successfully registred. Please confirm your email.\", { appearance: 'success' });\r\n        return <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n          }}\r\n        />\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: 'error' })\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let address = {\r\n      city: form[\"city\"],\r\n      street: form[\"street\"],\r\n      country: form[\"country\"],\r\n    };\r\n\r\n    let newForm = {\r\n      ...form,\r\n      address: address,\r\n      roleName: \"PATIENT\",\r\n    };\r\n\r\n    delete newForm[\"city\"];\r\n    delete newForm[\"street\"];\r\n    delete newForm[\"country\"];\r\n\r\n    return newForm;\r\n  };\r\n\r\n  return (\r\n    <main className=\"mylogincontainer\" style={{ minHeight: \"100vh\", padding: \"0px\", paddingBottom: \"50px\" }} >\r\n      <Form\r\n        ref={formRef}\r\n        noValidate\r\n        onSubmit={handleSubmit}\r\n        className=\"my__login__form\"\r\n      >\r\n        <FirstNameFormGroup\r\n          value={form['firstName']}\r\n          onChange={(event) => setField(\"firstName\", event.target.value)}\r\n        />\r\n        <LastNameFormGroup\r\n          onChange={(event) => setField(\"lastName\", event.target.value)}\r\n        />\r\n        <EmailFormGroup\r\n          onChange={(event) => setField(\"email\", event.target.value)}\r\n        ></EmailFormGroup>\r\n        <PasswordFormGroup\r\n          onChange={(event) => setField(\"password\", event.target.value)}\r\n        ></PasswordFormGroup>\r\n        <PasswordFormGroup\r\n          name=\"Repeat password\" onChange={(event) => setField(\"repeatPassword\", event.target.value)}\r\n        ></PasswordFormGroup>\r\n        <PhoneNumberFormGroup\r\n          onChange={(event) => setField(\"telephone\", event.target.value)}\r\n        ></PhoneNumberFormGroup>\r\n        <CityFormGroup\r\n          onChange={(event) => setField(\"city\", event.target.value)}\r\n        ></CityFormGroup>\r\n        <StreetFormGroup\r\n          onChange={(event) => setField(\"street\", event.target.value)}\r\n        ></StreetFormGroup>\r\n        <CountryFormGroup\r\n          onChange={(event) => setField(\"country\", event.target.value)}\r\n        ></CountryFormGroup>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      {\" \"}\r\n    </main >\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport Map from \"ol/Map\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport { fromLonLat, toLonLat } from \"ol/proj\";\r\n\r\nimport \"../../styling/pharmacyHomePage.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction EditBasicInfo({ pharmacyDetails, changedPharmacy }) {\r\n  const { addToast } = useToasts();\r\n  const [fixing, setFixing] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [valid, setValid] = useState(true);\r\n  const [text, setText] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n    street: \"\",\r\n    longitude: 0,\r\n    latitude: 0,\r\n  });\r\n\r\n  let handleChange = (event) => {\r\n    let key = event.target.name;\r\n    let value = event.target.value;\r\n    validateData(key, value);\r\n    setText({ ...text, [key]: value });\r\n  };\r\n\r\n  let editClickHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let saveClickHandler = () => {\r\n    if (valid) {\r\n      setEditMode(false);\r\n    }\r\n    let dto = {\r\n      id: pharmacyDetails.id,\r\n      name: text.name,\r\n      description: text.description,\r\n      address: {\r\n        id: pharmacyDetails.address.id,\r\n        country: text.country,\r\n        city: text.city,\r\n        street: text.street,\r\n        location: {\r\n          id: pharmacyDetails.address.location.id,\r\n          longitude: text.longitude,\r\n          latitude: text.latitude,\r\n        },\r\n      },\r\n    };\r\n\r\n    api\r\n      .put(`/api/pharmacy/${pharmacyDetails.id}`, dto)\r\n      .then((res) => {\r\n        changedPharmacy();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let cancelClickHandler = () => {\r\n    setValid(true);\r\n    setEditMode(false);\r\n    setText({\r\n      name: pharmacyDetails?.name,\r\n      description: pharmacyDetails?.description,\r\n      country: pharmacyDetails?.address?.country,\r\n      city: pharmacyDetails?.address?.city,\r\n      street: pharmacyDetails?.address?.street,\r\n      longitude: pharmacyDetails?.address?.location?.longitude,\r\n      latitude: pharmacyDetails?.address?.location?.latitude,\r\n    });\r\n  };\r\n\r\n  let handleClickOnMap = function (longitude, latitude) {\r\n    setText({ ...text, latitude: latitude, longitude: longitude });\r\n    if (fixing === \"longitude\" || fixing === \"latitude\") {\r\n      setFixing(null);\r\n      setValid(true);\r\n    }\r\n    // Try finding city and country\r\n    api\r\n      .get(\r\n        `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\r\n      )\r\n      .then((res) => {\r\n        setText({\r\n          ...text,\r\n          country: res.data.countryName,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          street: res.data.locality,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let validateData = (key, value) => {\r\n    let isValid = true;\r\n    let message = \"\";\r\n    if (value == \"\") {\r\n      isValid = false;\r\n      message = `Value '${key}' is required.`;\r\n    }\r\n    if (key === \"longitude\" || key === \"latitude\") {\r\n      let list = value.split(/\\./);\r\n      if (list.length !== 2) {\r\n        isValid = false;\r\n      } else {\r\n        if (\r\n          Number.parseInt(list[0]).toString() === list[0] &&\r\n          Number.parseInt(list[1]).toString() === list[1]\r\n        ) {\r\n          isValid = true;\r\n        } else {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      if (!isValid) {\r\n        message = `Value '${key}' is not valid. Example of valid value is '19.833549'`;\r\n      }\r\n    }\r\n\r\n    if (!isValid) {\r\n      setFixing(key);\r\n    } else {\r\n      setFixing(null);\r\n    }\r\n\r\n    setValid(isValid);\r\n\r\n    if (message != \"\")\r\n      addToast(message, {\r\n        appearance: \"warning\",\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setText({\r\n      name: pharmacyDetails?.name,\r\n      description: pharmacyDetails?.description,\r\n      country: pharmacyDetails?.address?.country,\r\n      city: pharmacyDetails?.address?.city,\r\n      street: pharmacyDetails?.address?.street,\r\n      longitude: pharmacyDetails?.address?.location?.longitude,\r\n      latitude: pharmacyDetails?.address?.location?.latitude,\r\n    });\r\n  }, [pharmacyDetails]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"divForMap\").innerHTML = \"\";\r\n    let map = new Map({\r\n      target: \"divForMap\",\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n\r\n      view: new View({\r\n        center: fromLonLat([\r\n          pharmacyDetails?.address?.location?.longitude,\r\n          pharmacyDetails?.address?.location?.latitude,\r\n        ]),\r\n        zoom: 10,\r\n        minZoom: 5,\r\n        maxZoom: 12,\r\n      }),\r\n    });\r\n\r\n    if (editMode) {\r\n      map.on(\"click\", (evt) => {\r\n        let coords = toLonLat(evt.coordinate);\r\n        let lat = coords[1];\r\n        let lon = coords[0];\r\n        handleClickOnMap(lon, lat);\r\n      });\r\n    } else {\r\n      map.removeEventListener(\"click\");\r\n    }\r\n\r\n    return map;\r\n  }, [pharmacyDetails, editMode, handleClickOnMap]);\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"first\">\r\n      <h1 className=\"content-header\">Basic informations</h1>\r\n      <hr></hr>\r\n      <Form>\r\n        <Row className=\"row-content\">\r\n          <Col lg={6} md={12} sm={12}>\r\n            <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n              <Form.Label column sm={2}>\r\n                Name\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  disabled={!editMode || (fixing !== null && fixing !== \"name\")}\r\n                  value={text?.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalDescription\">\r\n              <Form.Label column sm={2}>\r\n                Description\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"description\")\r\n                  }\r\n                  value={text?.description}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalCountry\">\r\n              <Form.Label column sm={2}>\r\n                Country\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  placeholder=\"Country\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"country\")\r\n                  }\r\n                  value={text?.country}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalCity\">\r\n              <Form.Label column sm={2}>\r\n                City\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  disabled={!editMode || (fixing !== null && fixing !== \"city\")}\r\n                  value={text?.city}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalStreet\">\r\n              <Form.Label column sm={2}>\r\n                Street\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"street\"\r\n                  placeholder=\"Street\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"street\")\r\n                  }\r\n                  value={text?.street}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalLongitude\">\r\n              <Form.Label column sm={2}>\r\n                Longitude\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"longitude\"\r\n                  placeholder=\"Longitude\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"longitude\")\r\n                  }\r\n                  value={text?.longitude}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formHorizontalLatitude\">\r\n              <Form.Label column sm={2}>\r\n                Latitude\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"latitude\"\r\n                  placeholder=\"Latitude\"\r\n                  disabled={\r\n                    !editMode || (fixing !== null && fixing !== \"latitude\")\r\n                  }\r\n                  value={text?.latitude}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col lg={6} md={12} sm={12}>\r\n            <div id=\"divForMap\"></div>\r\n          </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n          <Col className=\"center\">\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              disabled={!editMode || !valid}\r\n              onClick={saveClickHandler}\r\n            >\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"lg\"\r\n              disabled={editMode}\r\n              onClick={editClickHandler}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"lg\"\r\n              disabled={!editMode}\r\n              onClick={cancelClickHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default EditBasicInfo;\r\n","import { React, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Table,\r\n  Modal,\r\n  Form,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AddPurchaseOrderModal(props) {\r\n  const { addToast } = useToasts();\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [selectedName, setSelectedName] = useState(\"\");\r\n  const [amount, setAmount] = useState(100);\r\n  const [orders, setOrders] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  let handleClick = (medicineId, name) => {\r\n    setSelectedRowId(medicineId);\r\n    setSelectedName(name);\r\n  };\r\n\r\n  let handleRemove = (medicineId) => {\r\n    setSelectedItems(selectedItems.filter((item) => item != medicineId));\r\n    setOrders(orders.filter((item) => item.medicineId != medicineId));\r\n  };\r\n\r\n  let handleAdd = () => {\r\n    setOrders([\r\n      ...orders,\r\n      { medicineId: selectedRowId, amount, name: selectedName },\r\n    ]);\r\n    setSelectedItems([...selectedItems, selectedRowId]);\r\n    setSelectedRowId(-1);\r\n    setSelectedName(\"\");\r\n  };\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    d.setHours(0, 0, 0);\r\n    let now = new Date();\r\n    if (d.getTime() > now.getTime()) setStartDate(d);\r\n    else {\r\n      setStartDate(null);\r\n      addToast(\"End date should be in future!\", {\r\n        appearance: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setSelectedRowId(-1);\r\n        setAmount(100);\r\n        setOrders([]);\r\n        setSelectedItems([]);\r\n        setSelectedName(\"\");\r\n        setStartDate(null);\r\n      }}\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add order items\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} md={8} lg={8}>\r\n              <Table bordered hover striped variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Code</th>\r\n                    <th>Name</th>\r\n                    <th>Avg. grade</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {props?.medicineList?.length != 0 &&\r\n                    props?.medicineList?.map((item, index) => (\r\n                      <tr\r\n                        onClick={() => {\r\n                          if (!selectedItems.includes(item.medicine.id))\r\n                            handleClick(item.medicine.id, item.medicine.name);\r\n                        }}\r\n                        className={`${\r\n                          selectedRowId == item.medicine.id && \"selectedRow\"\r\n                        }  ${\r\n                          selectedItems.includes(item.medicine.id)\r\n                            ? \"disabledRow\"\r\n                            : \"pointer\"\r\n                        } `}\r\n                      >\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.medicine.code}</td>\r\n                        <td>{item.medicine.name}</td>\r\n                        <td>{item.medicine.avgGrade}</td>\r\n                        <td>{item.amount}</td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n              <Form.Group controlId=\"amountPicker\" di>\r\n                <Form.Label>Order amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={amount}\r\n                  disabled={selectedRowId == -1}\r\n                  onChange={(event) =>\r\n                    setAmount(Number.parseInt(event.target.value))\r\n                  }\r\n                  min=\"1\"\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                disabled={selectedRowId == -1}\r\n                onClick={handleAdd}\r\n                variant=\"success\"\r\n              >\r\n                Add item\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <ListGroup variant=\"flush\">\r\n                {orders?.map((item) => (\r\n                  <ListGroup.Item\r\n                    onClick={() => handleRemove(item.medicineId)}\r\n                    className=\"pointer\"\r\n                    variant=\"dark\"\r\n                  >\r\n                    {item?.name} {item?.amount}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <hr></hr>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"datePicker\" di>\r\n                <Form.Label>Deadline date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(event) => changeDate(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={orders?.length == 0 || startDate === null}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd({ orders, startDate });\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddPurchaseOrderModal;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Button, Table, Modal } from \"react-bootstrap\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nfunction SelectOfferModal(props) {\r\n  const [offers, setOffers] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n\r\n  let handleClick = (medicineId) => {\r\n    setSelectedRowId(medicineId);\r\n  };\r\n\r\n  async function fetchOffer() {\r\n    const request = await api.get(\r\n      `/api/suppliers/offers/byorderid/${props.orderId}`\r\n    ).catch(() => { });\r\n    setOffers(!!request ? request.data : []);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.orderId != undefined) {\r\n      fetchOffer();\r\n    }\r\n  }, [props.orderId]);\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setSelectedRowId(-1);\r\n      }}\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Choose offer\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Table bordered hover striped variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Price</th>\r\n              <th>Delivery date</th>\r\n              <th>Supplier</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {offers?.length != 0 &&\r\n              offers?.map((item, index) => (\r\n                <tr\r\n                  onClick={() => {\r\n                    handleClick(item.id);\r\n                  }}\r\n                  className={`${selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                    }`}\r\n                >\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.price}</td>\r\n                  <td>\r\n                    {moment(item.deliveryDat).format(\"DD MMM YYYY   hh:mm a\")}\r\n                  </td>\r\n                  <td>{item.worker}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={selectedRowId == -1}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleSelect(selectedRowId);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SelectOfferModal;\r\n","import { React, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\nimport moment from \"moment\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction EditOrderModal(props) {\r\n  const { addToast } = useToasts();\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    d.setHours(0, 0, 0);\r\n    let now = new Date();\r\n    if (d.getTime() > now.getTime()) setStartDate(d);\r\n    else {\r\n      setStartDate(null);\r\n      addToast(\"The date must be in the future.\", {\r\n        appearance: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setStartDate(null);\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit deadline\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h4>\r\n                Old deadline is{\" \"}\r\n                {moment(props.order.deliveryDat).format(\"DD MMM YYYY\")}\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"datePicker\" di>\r\n                <Form.Label>Deadline date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(event) => changeDate(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={startDate === null}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleEdit(startDate);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditOrderModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport {\r\n  Pagination,\r\n  Table,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport AddPurchaseOrderModal from \"./AddPurchaseOrderModal\";\r\nimport SelectOfferModal from \"./SelectOfferModal\";\r\nimport EditOrderModal from \"./EditOrderModal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction DisplayPurchaseOrders({\r\n  idOfPharmacy,\r\n  priceListId,\r\n  refresh,\r\n  refreshInq,\r\n  setRefreshInq,\r\n}) {\r\n  const { addToast } = useToasts();\r\n  const [orders, setOrders] = useState([]);\r\n  const [filterValue, setFilterValue] = useState(\"All\");\r\n  const [showedOrders, setShowedOrders] = useState([]);\r\n  const [showedOrder, setShowedOrder] = useState(null);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"All\");\r\n\r\n  const [selectOfferModalShow, setSelectOfferModalShow] = useState(false);\r\n  const [showEditOrderModal, setShowEditOrderModal] = useState(false);\r\n\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [medicineItems, setMedicineItems] = useState([]);\r\n\r\n  async function fetchPriceList() {\r\n    const request = await api\r\n      .get(`/api/pricelist/${priceListId}`)\r\n      .then((res) => {\r\n        setMedicineItems(res.data.medicineItems);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (priceListId != undefined) {\r\n      fetchPriceList();\r\n    }\r\n  }, [priceListId, refresh]);\r\n\r\n  async function fetchOrders() {\r\n    const request = await api.get(\r\n      `/api/orders/bypharmacyid/${idOfPharmacy}`,\r\n      { params: { filter: filterValue } }\r\n    ).catch(() => { });\r\n    setOrders(!!request ? request.data : []);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchOrders();\r\n    }\r\n  }, [idOfPharmacy, filterValue]);\r\n\r\n  let filterOrders = (param) => {\r\n    setShowedOrder(null);\r\n    setPugNummber(0);\r\n    setFilterValue(param);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(orders?.length / 4) - 1;\r\n    if (orders?.length / 4 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [orders]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 4;\r\n    let max = orders.length < first + 4 ? orders?.length : first + 4;\r\n    setShowedOrders(orders?.slice(first, max));\r\n  }, [orders, pagNumber]);\r\n\r\n  async function addPurchaseOrder(data) {\r\n    let dto = {\r\n      pharmacyId: idOfPharmacy,\r\n      deadline: data.startDate.getTime(),\r\n      items: [...data.orders],\r\n      adminId: getIdFromToken(),\r\n    };\r\n\r\n    const request = await api\r\n      .post(`/api/orders/addorder`, dto)\r\n      .then((res) => {\r\n        fetchOrders();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  let handleAddModalSave = (orders) => {\r\n    setAddModalShow(false);\r\n    addPurchaseOrder(orders);\r\n  };\r\n\r\n  let handleAddModalClose = () => {\r\n    setAddModalShow(false);\r\n  };\r\n\r\n  async function deletePOrder() {\r\n    const request = await api\r\n      .delete(`/api/orders/${showedOrder.id}`)\r\n      .then((res) => {\r\n        fetchOrders();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let deleteOrder = () => {\r\n    deletePOrder();\r\n  };\r\n\r\n  async function selectOrder(selectedOfferId) {\r\n    let dto = {\r\n      selectedOfferId,\r\n      orderId: showedOrder.id,\r\n      adminId: getIdFromToken(),\r\n    };\r\n    setShowSpinner(true);\r\n    const request = await api\r\n      .post(`/api/suppliers/offers/accept/`, dto)\r\n      .then((res) => {\r\n        setShowSpinner(false);\r\n        filterOrders(\"All\");\r\n        setDropdownLabel(\"All\");\r\n        setRefreshInq(!refreshInq);\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleSelectOfferModalSave = (selectedOfferId) => {\r\n    setSelectOfferModalShow(false);\r\n    selectOrder(selectedOfferId);\r\n  };\r\n\r\n  let handleSelectOfferModalClose = () => {\r\n    setSelectOfferModalShow(false);\r\n  };\r\n\r\n  async function editOrder(date) {\r\n    const request = await api\r\n      .put(`/api/orders/${showedOrder.id}/${date.getTime()}/`)\r\n      .then((res) => {\r\n        fetchOrders();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleEditModalSave = (date) => {\r\n    setShowEditOrderModal(false);\r\n    editOrder(date);\r\n  };\r\n\r\n  let handleEditModalClose = () => {\r\n    setShowEditOrderModal(false);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"seventh\">\r\n      <h1 className=\"content-header\">Purchase orders</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        {\" \"}\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n            Filter : {dropdownLabel}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"All\");\r\n                setDropdownLabel(\"All\");\r\n              }}\r\n            >\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"InProgress\");\r\n                setDropdownLabel(\"InProgress\");\r\n              }}\r\n            >\r\n              In progress\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"OnHold\");\r\n                setDropdownLabel(\"OnHold\");\r\n              }}\r\n            >\r\n              On hold\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterOrders(\"Processed\");\r\n                setDropdownLabel(\"Processed\");\r\n              }}\r\n            >\r\n              Ended\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Button\r\n          variant=\"success\"\r\n          size=\"md\"\r\n          onClick={() => {\r\n            setAddModalShow(true);\r\n          }}\r\n        >\r\n          Add purchase order\r\n        </Button>\r\n        <AddPurchaseOrderModal\r\n          medicineList={medicineItems}\r\n          idOfPharmacy={idOfPharmacy}\r\n          show={addModalShow}\r\n          onHide={handleAddModalClose}\r\n          handleAdd={handleAddModalSave}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        {showedOrders != [] &&\r\n          showedOrders?.map((order, index) => (\r\n            <Col className=\"my__flex\" key={index} lg={3} md={6} sm={4}>\r\n              <Card\r\n                onClick={() => {\r\n                  setShowedOrder(order);\r\n                }}\r\n                className=\"my__card\"\r\n                style={{ width: \"22rem\", height: \"10rem\" }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Title>Order {order.id}</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  {moment(order.deadline).format(\"DD MMM YYYY   hh:mm a\")}\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      <Row className=\"my__row__pagination\">\r\n        <Col className=\"my__flex\">\r\n          <Pagination size=\"lg\">\r\n            <Pagination.Prev\r\n              disabled={pagNumber === 0}\r\n              onClick={handleSlideLeft}\r\n            />\r\n            <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n            <Pagination.Next\r\n              disabled={pagNumber === maxPag}\r\n              onClick={handleSlideRight}\r\n            />\r\n          </Pagination>\r\n        </Col>\r\n      </Row>\r\n      {showedOrder != null && (\r\n        <Row>\r\n          <Col>\r\n            <Alert variant=\"secondary\">\r\n              <Alert.Heading>Order {showedOrder.id}</Alert.Heading>\r\n            </Alert>\r\n          </Col>\r\n          <Col className=\"center\">\r\n            <Button\r\n              disabled={\r\n                showedOrder == null || showedOrder.adminId != getIdFromToken()\r\n              }\r\n              variant=\"info\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                setShowEditOrderModal(true);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <EditOrderModal\r\n              order={showedOrder}\r\n              show={showEditOrderModal}\r\n              onHide={handleEditModalClose}\r\n              handleEdit={handleEditModalSave}\r\n            />\r\n            <Button\r\n              disabled={\r\n                showedOrder == null ||\r\n                dropdownLabel !== \"OnHold\" ||\r\n                showedOrder.adminId != getIdFromToken()\r\n              }\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                setSelectOfferModalShow(true);\r\n              }}\r\n            >\r\n              Choose offer\r\n            </Button>\r\n            <Button\r\n              disabled={\r\n                showedOrder == null || showedOrder.adminId != getIdFromToken()\r\n              }\r\n              variant=\"danger\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                deleteOrder();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Col></Col>\r\n        <Col className=\"center\">\r\n          {\" \"}\r\n          <Spinner\r\n            style={{ display: showSpinner ? \"block\" : \"none\" }}\r\n            animation=\"border\"\r\n          />\r\n          <hr></hr>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {showedOrder && (\r\n            <Table striped bordered variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Code</th>\r\n                  <th>Name</th>\r\n                  <th>Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <SelectOfferModal\r\n                  orderId={showedOrder.id}\r\n                  show={selectOfferModalShow}\r\n                  onHide={handleSelectOfferModalClose}\r\n                  handleSelect={handleSelectOfferModalSave}\r\n                />\r\n                {showedOrder &&\r\n                  showedOrder.orderItem.map((item, index) => (\r\n                    <tr>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.medicine.code}</td>\r\n                      <td>{item.medicine.name}</td>\r\n                      <td>{item.amount}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayPurchaseOrders;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { Button, Tab, Row, Col, Table, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction AddAppointment({ idOfPharmacy }) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [dermatologists, setDermatologists] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startHour, setStartHour] = useState(\"10:00\");\r\n  const [dermatogistPicked, setDermatogistPicked] = useState(0);\r\n  const [duration, setDuration] = useState(15);\r\n  const [price, setPrice] = useState(2000);\r\n  const [refresh, setRefresh] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      async function fetchDermatologists() {\r\n        const request = await api.get(\r\n          `/api/workplace/dermatologists/bypharmacyid/${idOfPharmacy}`\r\n        ).catch(() => { });\r\n        setDermatologists(!!request ? request.data : []);\r\n        return request;\r\n      }\r\n      fetchDermatologists();\r\n    }\r\n  }, [idOfPharmacy]);\r\n\r\n  useEffect(() => {\r\n    if (dermatogistPicked != 0) {\r\n      async function fetchAppointments() {\r\n        const request = await api\r\n          .get(`/api/appointment/all/bydermatologistid/${dermatogistPicked}`, {\r\n            params: { date: startDate.getTime() },\r\n          })\r\n          .then((res) => {\r\n            setAppointments(res.data);\r\n          })\r\n          .catch((err) => {\r\n            addToast(getErrorMessage(err), {\r\n              appearance: \"error\",\r\n            });\r\n          });\r\n\r\n        return request;\r\n      }\r\n      fetchAppointments();\r\n    } else {\r\n      setAppointments([]);\r\n    }\r\n  }, [startDate, dermatogistPicked, refresh]);\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    setStartDate(d);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dermatologists !== []) {\r\n      let i;\r\n      let flag = false;\r\n      for (i = 0; i < dermatologists.length; i++) {\r\n        if (dermatologists[i].worker.id == dermatogistPicked) {\r\n          let j;\r\n          for (j = 0; j < dermatologists[i].workDays.length; j++) {\r\n            if (\r\n              !dermatologists[i].workDays[j].weekday.localeCompare(\r\n                startDate.toString().substring(0, 3).toUpperCase()\r\n              )\r\n            ) {\r\n              let d1 = new Date();\r\n              let d2 = new Date();\r\n              d1.setHours(dermatologists[i].workDays[j].startTime);\r\n              d2.setHours(dermatologists[i].workDays[j].endTime);\r\n\r\n              addToast(\r\n                `Workshedule : ${moment(d1.getTime()).format(\r\n                  \"hh:00 a\"\r\n                )} - ${moment(d2.getTime()).format(\"hh:00 a\")}`,\r\n                {\r\n                  appearance: \"info\",\r\n                }\r\n              );\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (!flag) {\r\n        if (dermatogistPicked != 0) {\r\n          addToast(\"It's a non-working day\", {\r\n            appearance: \"info\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [dermatogistPicked, startDate]);\r\n\r\n  let sendAppointment = () => {\r\n    let date = startDate;\r\n    let hour = startHour;\r\n    let array = hour.split(\":\");\r\n    date.setHours(Number.parseInt(array[0]), Number.parseInt(array[1]), 0);\r\n    let long = date.getTime();\r\n    let request = { duration, price: price, startTime: long };\r\n    console.log(request);\r\n\r\n    api\r\n      .post(`/api/appointment/${idOfPharmacy}/${dermatogistPicked}`, request)\r\n      .then((res) => {\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n        reloadForm();\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let reloadForm = () => {\r\n    setStartHour(\"10:00\");\r\n    setDuration(15);\r\n    setRefresh(!refresh);\r\n    setPrice(2000);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"fourth\">\r\n      <h1 className=\"content-header\">Add appointment</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col lg={4} md={4} sm={12}>\r\n          <Form.Group controlId=\"dermatologistSelect\">\r\n            <Form.Label>Dermatologist</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(event) => setDermatogistPicked(event.target.value)}\r\n              defaultValue=\"0\"\r\n            >\r\n              <option value=\"0\">Not Selected</option>\r\n              {dermatologists != [] &&\r\n                dermatologists?.map((dermatologist) => (\r\n                  <option value={dermatologist.worker.id}>\r\n                    {dermatologist.worker.lastName}{\" \"}\r\n                    {dermatologist.worker.firstName}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"datePicker\" di>\r\n            <Form.Label>Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) => changeDate(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"timePicker\" di>\r\n            <Form.Label>Start time</Form.Label>\r\n            <Form.Control\r\n              type=\"time\"\r\n              value={startHour}\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) => setStartHour(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"durationPicker\" di>\r\n            <Form.Label>Duration (in minutes)</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={duration}\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) =>\r\n                setDuration(Number.parseInt(event.target.value))\r\n              }\r\n              min=\"0\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"pricePicker\" di>\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={price}\r\n              disabled={dermatogistPicked == 0}\r\n              onChange={(event) =>\r\n                setPrice(Number.parseInt(event.target.value))\r\n              }\r\n              min=\"0\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={dermatogistPicked == 0}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={sendAppointment}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          {appointments.length != 0 && (\r\n            <div>\r\n              <Alert variant=\"primary\">\r\n                <Alert.Heading>Appointments on that date</Alert.Heading>\r\n                <p>\r\n                  These are already created meetings that day. Try to find free\r\n                  time for your meeting.\r\n                </p>\r\n              </Alert>\r\n              <Table bordered striped variant=\"dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Start time</th>\r\n                    <th>End time</th>\r\n                    <th>State</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {appointments != [] &&\r\n                    appointments.map((appointment, index) => (\r\n                      <tr>\r\n                        <td>{index + 1}</td>\r\n                        <td>\r\n                          {moment(appointment.startTime).format(\"hh:mm a\")}\r\n                        </td>\r\n                        <td>{moment(appointment.endTime).format(\"hh:mm a\")}</td>\r\n                        <td>{appointment.appointmentState}</td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default AddAppointment;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Button, Table, Modal, Form } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nfunction AddingMedicineModal(props) {\r\n  const [medicineList, setMedicineList] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [price, setPrice] = useState(2000);\r\n\r\n  let handleClick = (medicineId) => {\r\n    setSelectedRowId(medicineId);\r\n  };\r\n\r\n  async function fetchMedicine() {\r\n    const request = await api.get(\r\n      `/api/medicine/notexistingmedicinebypharmacyid/${props.idOfPharmacy}`\r\n    ).catch(() => { });\r\n    setMedicineList(!!request ? request.data : []);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.idOfPharmacy != undefined) {\r\n      fetchMedicine();\r\n    }\r\n  }, [props.idOfPharmacy, props.medicineItemsLength]);\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setSelectedRowId(-1);\r\n        setPrice(2000);\r\n      }}\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Choose medicine\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Table bordered hover striped variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Code</th>\r\n              <th>Name</th>\r\n              <th>Content</th>\r\n              <th>Avg. grade</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {medicineList?.length != 0 &&\r\n              medicineList?.map((item, index) => (\r\n                <tr\r\n                  onClick={() => {\r\n                    handleClick(item.id);\r\n                  }}\r\n                  className={`${selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                    }`}\r\n                >\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.code}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.content}</td>\r\n                  <td>{item.avgGrade}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n        <Form.Group controlId=\"pricePicker\" di>\r\n          <Form.Label>Starting price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={price}\r\n            disabled={selectedRowId == -1}\r\n            onChange={(event) => setPrice(Number.parseInt(event.target.value))}\r\n            min=\"0\"\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={selectedRowId == -1}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd(selectedRowId, price);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddingMedicineModal;\r\n","import { React, useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nfunction ChangePriceModal(props) {\r\n  const [price, setPrice] = useState(0);\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setPrice(0);\r\n      }}\r\n      onEntered={() => {\r\n        setPrice(props.oldPrice);\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Change price\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group controlId=\"pricePicker\" di>\r\n          <Form.Label>Price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={price}\r\n            onChange={(event) => setPrice(Number.parseInt(event.target.value))}\r\n            min=\"0\"\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleChange(price);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePriceModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Button, Table, Modal, Alert } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmacy.css\";\r\n\r\nimport AddingMedicineModal from \"./AddingMedicineModal\";\r\nimport ChangePriceModal from \"./ChangePriceModal\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction DisplayMedicine({\r\n  idOfPharmacy,\r\n  priceListId,\r\n  refreshPriceList,\r\n  setRefreshPriceList,\r\n}) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [medicineItems, setMedicineItems] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [selectedRowPrice, setSelectedRowPrice] = useState(-1);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [changePriceModalShow, setChangePriceModalShow] = useState(false);\r\n  const [removeModalShow, setRemoveModalShow] = useState(false);\r\n\r\n  async function fetchPriceList() {\r\n    const request = await api\r\n      .get(`/api/pricelist/${priceListId}`)\r\n      .then((res) => {\r\n        setMedicineItems(res.data.medicineItems);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (priceListId != undefined) {\r\n      fetchPriceList();\r\n    }\r\n  }, [priceListId]);\r\n\r\n  let handleClick = (medicineItemId, price) => {\r\n    setSelectedRowId(medicineItemId);\r\n    setSelectedRowPrice(price);\r\n  };\r\n\r\n  async function addMedicine(selectedMedicineId, price) {\r\n    const request = await api\r\n      .post(\r\n        `/api/pricelist/${priceListId}/addmedicine/${selectedMedicineId}/${price}`\r\n      )\r\n      .then((res) => {\r\n        fetchPriceList();\r\n        setRefreshPriceList(!refreshPriceList);\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function removeMedicine() {\r\n    const request = await api\r\n      .delete(`/api/pricelist/${priceListId}/removemedicine/${selectedRowId}`)\r\n      .then((res) => {\r\n        fetchPriceList();\r\n        setRefreshPriceList(!refreshPriceList);\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function changePrice(price) {\r\n    const request = await api\r\n      .post(\r\n        `/api/pricelist/${priceListId}/changeprice/${selectedRowId}/${price}`\r\n      )\r\n      .then((res) => {\r\n        fetchPriceList();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let handleAddModalSave = (selectedMedicineId, price) => {\r\n    setAddModalShow(false);\r\n    addMedicine(selectedMedicineId, price);\r\n  };\r\n\r\n  let handleChangePriceModalSave = (price) => {\r\n    setChangePriceModalShow(false);\r\n    if (selectedRowPrice != price) changePrice(price);\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  let handleAddModalClose = () => {\r\n    setAddModalShow(false);\r\n  };\r\n\r\n  let handleChangePriceModalClose = () => {\r\n    setChangePriceModalShow(false);\r\n  };\r\n\r\n  let handleRemove = () => {\r\n    removeMedicine();\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"third\">\r\n      <h1 className=\"content-header\">Medicine</h1>\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Code</th>\r\n                <th>Name</th>\r\n                <th>Content</th>\r\n                <th>Avg. grade</th>\r\n                <th>Price</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {medicineItems?.length != 0 &&\r\n                medicineItems?.map((item, index) => (\r\n                  <tr\r\n                    onClick={() => {\r\n                      handleClick(item.id, item.price2);\r\n                    }}\r\n                    className={`${selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                      } `}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.medicine.code}</td>\r\n                    <td>{item.medicine.name}</td>\r\n                    <td>{item.medicine.content}</td>\r\n                    <td>{item.medicine.avgGrade}</td>\r\n                    <td>{item.price2}$</td>\r\n                    <td>{item.amount}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <div className=\"center\">\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              variant=\"secondary\"\r\n              onClick={() => {\r\n                setChangePriceModalShow(true);\r\n              }}\r\n            >\r\n              Change price\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={() => {\r\n                setAddModalShow(true);\r\n                setSelectedRowId(-1);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                setRemoveModalShow(true);\r\n              }}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n\r\n          <AddingMedicineModal\r\n            medicineItemsLength={medicineItems?.length}\r\n            idOfPharmacy={idOfPharmacy}\r\n            show={addModalShow}\r\n            onHide={handleAddModalClose}\r\n            handleAdd={handleAddModalSave}\r\n          />\r\n          <ChangePriceModal\r\n            oldPrice={selectedRowPrice}\r\n            show={changePriceModalShow}\r\n            onHide={handleChangePriceModalClose}\r\n            handleChange={handleChangePriceModalSave}\r\n          />\r\n          <Modal\r\n            oldPrice={idOfPharmacy}\r\n            show={removeModalShow}\r\n            onHide={() => {\r\n              setRemoveModalShow(false);\r\n            }}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Attention</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              Are you sure you want to delete the medicine?\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  setRemoveModalShow(false);\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => {\r\n                  handleRemove();\r\n                  setRemoveModalShow(false);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayMedicine;\r\n","import { React, useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nfunction RejectRequestModal(props) {\r\n  const [reason, setReason] = useState(\"\");\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setReason(\"\");\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Reason for rejecting request\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Write a reason for rejecting request</Form.Label>\r\n          <Form.Control\r\n            onChange={(event) => setReason(event.target.value)}\r\n            as=\"textarea\"\r\n            rows={3}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={reason === \"\"}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.rejectRequest(reason);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default RejectRequestModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Button, Table, Modal, Alert } from \"react-bootstrap\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmacy.css\";\r\nimport RejectRequestModal from \"./RejectRequestModal\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\nfunction DisplayHolidayRequests({ idOfPharmacy }) {\r\n  const { addToast } = useToasts();\r\n  const [requests, setRequests] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  async function fetchRequests() {\r\n    const request = await api.get(\r\n      `/api/vacation/getunresolvedrequestsbypharmacyid/${idOfPharmacy}`\r\n    ).catch(() => { });\r\n    setRequests(!!request ? request.data : []);\r\n\r\n    return request;\r\n  }\r\n\r\n  async function rejectRequest(reason) {\r\n    const request = await api\r\n      .post(`/api/vacation/rejectrequest/${selectedRowId}`, reason)\r\n      .then((res) => {\r\n        fetchRequests();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function acceptRequest() {\r\n    const request = await api\r\n      .post(`/api/vacation/acceptrequest/${selectedRowId}`)\r\n      .then((res) => {\r\n        fetchRequests();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchRequests();\r\n    }\r\n  }, [idOfPharmacy]);\r\n\r\n  let handleClick = (requestId) => {\r\n    setSelectedRowId(requestId);\r\n  };\r\n\r\n  let handleReject = (reason) => {\r\n    setShowAlert(false);\r\n    rejectRequest(reason);\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  let handleAccept = () => {\r\n    acceptRequest();\r\n    setSelectedRowId(-1);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"fifth\">\r\n      <h1 className=\"content-header\">Requests for vacations and absences</h1>\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Type</th>\r\n                <th>State</th>\r\n                <th>Start time</th>\r\n                <th>End time</th>\r\n                <th>Worker details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\" \"}\r\n              {requests?.length != 0 &&\r\n                requests?.map((item, index) => (\r\n                  <tr\r\n                    onClick={() => {\r\n                      handleClick(item.id);\r\n                    }}\r\n                    className={`${selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                      } `}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.absenceType}</td>\r\n                    <td>{item.requestState}</td>\r\n                    <td>{moment(item.start).format(\"DD-MM-YYYY\")}</td>\r\n                    <td>{moment(item.end).format(\"DD-MM-YYYY\")}</td>\r\n                    <td>{item.workerDetails}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <RejectRequestModal\r\n            show={showAlert}\r\n            onHide={() => setShowAlert(false)}\r\n            rejectRequest={handleReject}\r\n          />\r\n\r\n          <div className=\"center\">\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              onClick={handleAccept}\r\n              variant=\"primary\"\r\n            >\r\n              Accept request\r\n            </Button>\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              onClick={() => setShowAlert(true)}\r\n              variant=\"secondary\"\r\n            >\r\n              Reject request\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayHolidayRequests;\r\n","import { React, useState } from \"react\";\r\nimport { Button, Table, Modal, Form, Row, Col } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction AddingWorkerModal(props) {\r\n  const { addToast } = useToasts();\r\n  const [workerList, setWorkerList] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n\r\n  const [startHour, setStartHour] = useState(10);\r\n  const [endHour, setEndHour] = useState(17);\r\n\r\n  const [enable1, setEnable1] = useState(false);\r\n  const [enable2, setEnable2] = useState(false);\r\n  const [enable3, setEnable3] = useState(false);\r\n  const [enable4, setEnable4] = useState(false);\r\n  const [enable5, setEnable5] = useState(false);\r\n  const [enable6, setEnable6] = useState(false);\r\n  const [enable7, setEnable7] = useState(false);\r\n\r\n  let handleClick = (medicineId) => {\r\n    setSelectedRowId(medicineId);\r\n  };\r\n\r\n  async function fetchWorkers() {\r\n    setSelectedRowId(-1);\r\n    let dto = {\r\n      startHour,\r\n      endHour,\r\n      enable1,\r\n      enable2,\r\n      enable3,\r\n      enable4,\r\n      enable5,\r\n      enable6,\r\n      enable7,\r\n    };\r\n    const request = await api\r\n      .post(\r\n        `/api/workers/notexistingworkplacebypharmacyid/${props.idOfPharmacy}`,\r\n        dto\r\n      )\r\n      .then((res) => {\r\n        setWorkerList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setWorkerList([]);\r\n        setSelectedRowId(-1);\r\n        setStartHour(10);\r\n        setEndHour(17);\r\n        setEnable1(false);\r\n        setEnable2(false);\r\n        setEnable3(false);\r\n        setEnable4(false);\r\n        setEnable5(false);\r\n        setEnable6(false);\r\n        setEnable7(false);\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Adding worker\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"startPicker\" di>\r\n              <Form.Label>Shift start</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={startHour}\r\n                onChange={(event) => setStartHour(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"endPicker\" di>\r\n              <Form.Label>Shift end</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={endHour}\r\n                onChange={(event) => setEndHour(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p>Mark days</p>\r\n            <Table bordered hover striped size=\"sm\" variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Weekday</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  className={`${enable1 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable1(!enable1)}\r\n                >\r\n                  <td>1</td>\r\n                  <td>Monday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable2 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable2(!enable2)}\r\n                >\r\n                  <td>2</td>\r\n                  <td>Tuesday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable3 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable3(!enable3)}\r\n                >\r\n                  <td>3</td>\r\n                  <td>Wednesday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable4 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable4(!enable4)}\r\n                >\r\n                  <td>4</td>\r\n                  <td>Thursday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable5 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable5(!enable5)}\r\n                >\r\n                  <td>5</td>\r\n                  <td>Friday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable6 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable6(!enable6)}\r\n                >\r\n                  <td>6</td>\r\n                  <td>Saturday</td>\r\n                </tr>\r\n                <tr\r\n                  className={`${enable7 && \"selectedRow\"} pointer`}\r\n                  onClick={() => setEnable7(!enable7)}\r\n                >\r\n                  <td>7</td>\r\n                  <td>Sunday</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"center\">\r\n            <Button\r\n              disabled={\r\n                !enable1 &&\r\n                !enable2 &&\r\n                !enable3 &&\r\n                !enable4 &&\r\n                !enable5 &&\r\n                !enable6 &&\r\n                !enable7\r\n              }\r\n              variant=\"primary\"\r\n              onClick={fetchWorkers}\r\n            >\r\n              Check\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Table bordered hover striped variant=\"dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Type</th>\r\n                  <th>Firstname</th>\r\n                  <th>LastName</th>\r\n                  <th>Avg. grade</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {workerList?.length != 0 &&\r\n                  workerList?.map((item, index) => (\r\n                    <tr\r\n                      onClick={() => {\r\n                        handleClick(item.id);\r\n                      }}\r\n                      className={`${selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                        }`}\r\n                    >\r\n                      <td>{index + 1}</td>\r\n                      <td>{item?.roleName}</td>\r\n                      <td>{item.firstName}</td>\r\n                      <td>{item.lastName}</td>\r\n                      <td>{item.avgGrade}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={selectedRowId == -1}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd(selectedRowId, {\r\n              startHour,\r\n              endHour,\r\n              enable1,\r\n              enable2,\r\n              enable3,\r\n              enable4,\r\n              enable5,\r\n              enable6,\r\n              enable7,\r\n            });\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddingWorkerModal;\r\n","import { React } from \"react\";\r\nimport { Button, Modal, ListGroup } from \"react-bootstrap\";\r\n\r\nfunction DetailsOfWorkerModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Worker pharmacies\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {props?.map[props?.workerId]?.length == 0 && (\r\n          <h4>He does not work in any pharmacy.</h4>\r\n        )}\r\n        {props?.map[props?.workerId]?.length != 0 &&\r\n          props?.map[props?.workerId]?.map((item) => (\r\n            <ListGroup.Item>{item}</ListGroup.Item>\r\n          ))}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default DetailsOfWorkerModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Search, Reply } from \"react-bootstrap-icons\";\r\n\r\nimport { Tab, Row, Col, Button, Table, Form } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/pharmacy.css\";\r\nimport AddingWorkerModal from \"./AddingWorkerModal\";\r\nimport DetailsOfWorkerModal from \"./DetailsOfWorkerModal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction DisplayWorkers({ idOfPharmacy }) {\r\n  const { addToast } = useToasts();\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [pharamcyNameMap, setPharamcyNameMap] = useState([]);\r\n\r\n  const [workers, setWorkers] = useState([]);\r\n  const [showedWorkers, setShowedWorkers] = useState([]);\r\n\r\n  const [selectedRowId, setSelectedRowId] = useState(-1);\r\n\r\n  const [selectedWorker, setSelectedWorker] = useState(-1);\r\n\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [detailsModalShow, setDetailsModalShow] = useState(false);\r\n\r\n  // -------------------\r\n  const [fsearch, setFSearch] = useState(\"\");\r\n  const [filterGrade, setFilterGrade] = useState(\"\");\r\n  const [filterPharmacyName, setFilterPharmacyName] = useState(\"\");\r\n\r\n  async function fetchNames() {\r\n    const request = await api.get(`/api/workplace/pharmacies/all/`).catch(() => { });\r\n    setPharamcyNameMap(!!request ? request.data : []);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacies() {\r\n      const request = await api.get(\"/api/pharmacy/\").catch(() => { });\r\n      setPharmacies(!!request ? request.data : []);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  }, []);\r\n\r\n  async function fetchWorkers() {\r\n    const request = await api\r\n      .get(`/api/workplace/bypharmacyid/${idOfPharmacy}`)\r\n      .then((resp) => {\r\n        setWorkers(resp.data);\r\n      }).catch(() => { });\r\n\r\n    return request;\r\n  }\r\n\r\n  async function addWorker(id, dto) {\r\n    const request = await api\r\n      .post(`/api/workplace/addworker/bypharmacyid/${idOfPharmacy}/${id}`, dto)\r\n      .then((res) => {\r\n        fetchWorkers();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  async function removeWorker() {\r\n    const request = await api\r\n      .delete(\r\n        `/api/workplace/removeworker/bypharmacyid/${idOfPharmacy}/${selectedRowId}`\r\n      )\r\n      .then((res) => {\r\n        fetchWorkers();\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchWorkers();\r\n      fetchNames();\r\n    }\r\n  }, [idOfPharmacy]);\r\n\r\n  let handleClick = (requestId, workerId) => {\r\n    setSelectedRowId(requestId);\r\n    setSelectedWorker(workerId);\r\n  };\r\n\r\n  let handleRemove = () => {\r\n    removeWorker();\r\n    setSelectedRowId(-1);\r\n    setSelectedWorker(-1);\r\n  };\r\n\r\n  let handleAddModalSave = (selectedMedicineId, dto) => {\r\n    setAddModalShow(false);\r\n    addWorker(selectedMedicineId, dto);\r\n  };\r\n\r\n  let handleInfo = () => {\r\n    setDetailsModalShow(true);\r\n  };\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (fsearch.length === 0) {\r\n      fetchWorkers();\r\n    } else {\r\n      api\r\n        .get(`/api/workplace/search/${idOfPharmacy}`, {\r\n          params: { searchValue: fsearch },\r\n        })\r\n        .then((resp) => {\r\n          setWorkers(resp.data);\r\n        }).catch(() => { });\r\n    }\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    setFSearch(\"\");\r\n    fetchWorkers();\r\n  };\r\n\r\n  const formFilter = (event) => {\r\n    event.preventDefault();\r\n    filter();\r\n  };\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [workers]);\r\n\r\n  // UseEffect za filter\r\n  useEffect(() => {\r\n    if (showedWorkers == null) setShowedWorkers(workers);\r\n    else {\r\n      if (filterPharmacyName === \"\" && filterGrade == \"\") return;\r\n\r\n      if (filterPharmacyName != \"\") {\r\n        const result = showedWorkers.filter((worker) => {\r\n          if (pharamcyNameMap[worker.worker.id].includes(filterPharmacyName))\r\n            return true;\r\n          return false;\r\n        });\r\n        if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n      }\r\n\r\n      if (filterGrade != \"\") {\r\n        if (filterGrade === \"LOW\") {\r\n          const result = showedWorkers.filter(\r\n            (worker) => worker.worker.avgGrade < 3\r\n          );\r\n          if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n        } else if (filterGrade === \"MEDIUM\") {\r\n          const result = showedWorkers.filter(\r\n            (worker) => worker.worker.avgGrade == 3\r\n          );\r\n          if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n        } else if (filterGrade === \"HIGH\") {\r\n          const result = showedWorkers.filter(\r\n            (worker) => worker.worker.avgGrade > 3\r\n          );\r\n          if (showedWorkers.length != result.length) setShowedWorkers(result);\r\n        }\r\n      }\r\n    }\r\n  }, [showedWorkers]);\r\n\r\n  let filter = () => {\r\n    setShowedWorkers(null);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"second\">\r\n      <Row>\r\n        <Col>\r\n          <Form onSubmit={formSearch}>\r\n            <Form.Group className=\"my__flex\" style={{ marginTop: \"20px\" }}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"searchValue\"\r\n                value={fsearch}\r\n                onChange={(e) => setFSearch(e.target.value)}\r\n                placeholder=\"Enter name or lastname...\"\r\n              />\r\n\r\n              <Button type=\"submit\" className=\"my__search__buttons\">\r\n                <Search />\r\n              </Button>\r\n              <Button\r\n                className=\"my__search__buttons my__flex\"\r\n                onClick={resetSearch}\r\n              >\r\n                Reset <Reply />\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Form onSubmit={formFilter} className=\"my__div__filter\">\r\n            <Form.Group controlId=\"gradeSelect\">\r\n              <Form.Label>Grade</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterGrade(event.target.value)}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\">Not Selected</option>\r\n                <option value=\"LOW\">Low</option>\r\n                <option value=\"MEDIUM\">Medium</option>\r\n                <option value=\"HIGH\">High</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"pharmacySelect\">\r\n              <Form.Label>Pharmacy name</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterPharmacyName(event.target.value)}\r\n                defaultValue={\"\"}\r\n              >\r\n                <option value=\"\">Not Selected</option>\r\n                {pharmacies?.length != 0 &&\r\n                  pharmacies?.map((item, index) => (\r\n                    <option value={item.name}>{item.name}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"my__search__buttons\">\r\n              <Search />\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Type</th>\r\n                <th>Firstname</th>\r\n                <th>Lastname</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Avg. grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\" \"}\r\n              {showedWorkers?.length != 0 &&\r\n                showedWorkers?.map((item, index) => (\r\n                  <tr\r\n                    onClick={() => {\r\n                      handleClick(item.id, item.worker.id);\r\n                    }}\r\n                    className={`${selectedRowId == item.id ? \"selectedRow\" : \"pointer\"\r\n                      } `}\r\n                  >\r\n                    <td>{index + 1}</td>\r\n                    <td>{item?.worker?.roleName}</td>\r\n                    <td>{item?.worker?.firstName}</td>\r\n                    <td>{item?.worker?.lastName}</td>\r\n                    <td>{item?.worker?.email}</td>\r\n                    <td>{item?.worker?.telephone}</td>\r\n                    <td>{item?.worker?.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <div className=\"center\">\r\n            {idOfPharmacy != -1 && (\r\n              <div>\r\n                <Button\r\n                  onClick={() => {\r\n                    setAddModalShow(true);\r\n                    setSelectedRowId(-1);\r\n                  }}\r\n                  variant=\"success\"\r\n                >\r\n                  Add worker\r\n                </Button>\r\n                <Button\r\n                  disabled={selectedRowId == -1}\r\n                  onClick={handleRemove}\r\n                  variant=\"danger\"\r\n                >\r\n                  Remove worker\r\n                </Button>\r\n\r\n                <AddingWorkerModal\r\n                  workersLength={workers?.length}\r\n                  idOfPharmacy={idOfPharmacy}\r\n                  show={addModalShow}\r\n                  onHide={() => {\r\n                    setAddModalShow(false);\r\n                  }}\r\n                  handleAdd={handleAddModalSave}\r\n                />\r\n              </div>\r\n            )}\r\n            <Button\r\n              disabled={selectedRowId == -1}\r\n              onClick={handleInfo}\r\n              variant=\"info\"\r\n            >\r\n              Show pharmacies\r\n            </Button>\r\n            <DetailsOfWorkerModal\r\n              map={pharamcyNameMap}\r\n              workerId={selectedWorker}\r\n              show={detailsModalShow}\r\n              handleClose={() => {\r\n                setDetailsModalShow(false);\r\n              }}\r\n              onHide={() => {\r\n                setDetailsModalShow(false);\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayWorkers;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Table, Tab, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport moment from \"moment\";\r\n\r\nfunction DisplayInquiries({ idOfPharmacy, refreshInq }) {\r\n  const [inquiries, setInquiries] = useState([]);\r\n  const [showedInquiries, setShowedInquiries] = useState([]);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"Active\");\r\n\r\n  async function fetchInquiries() {\r\n    const request = await api.get(\r\n      `/api/inquiry/bypharmacyid/${idOfPharmacy}`\r\n    ).catch(() => { });\r\n    setInquiries(!!request ? request.data : []);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      filterInquiries(\"Active\");\r\n    }\r\n  }, [inquiries]);\r\n\r\n  useEffect(() => {\r\n    if (idOfPharmacy != undefined) {\r\n      fetchInquiries();\r\n    }\r\n  }, [idOfPharmacy, refreshInq]);\r\n\r\n  let filterInquiries = (filter) => {\r\n    let result = inquiries.filter((item) => {\r\n      if (filter == \"Active\") return item.active;\r\n      else return !item.active;\r\n    });\r\n\r\n    setShowedInquiries(result);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"eight\">\r\n      <h1 className=\"content-header\">Inquiries</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        {\" \"}\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n            Filter : {dropdownLabel}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterInquiries(\"Active\");\r\n                setDropdownLabel(\"Active\");\r\n              }}\r\n            >\r\n              Active\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                filterInquiries(\"End\");\r\n                setDropdownLabel(\"Ended\");\r\n              }}\r\n            >\r\n              Ended\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Row>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col>\r\n          <Table striped bordered variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Medicine</th>\r\n                <th>Date</th>\r\n                <th>Worker</th>\r\n                <th>Active</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {showedInquiries &&\r\n                showedInquiries.map((item, index) => (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.medicineItems.medicine.name}</td>\r\n                    <td>{moment(item.date).format(\"DD MMM YYYY\")}</td>\r\n                    <td>\r\n                      {item.worker.firstName} {item.worker.lastName}\r\n                    </td>\r\n                    <td>{item.active ? \"True\" : \"False\"}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayInquiries;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Dropdown, InputGroup, Form } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport { Line, Bar, Radar, Doughnut, PolarArea, Pie } from \"react-chartjs-2\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction DisplayReports({ pharmacyDetails }) {\r\n  const { addToast } = useToasts();\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const [selectedChart, setSelectedChart] = useState(\"Bar\");\r\n  const [selectedPeriod, setSelectedPeriod] = useState(\"Monthly\");\r\n  const [profitDisplay, setProfitDisplay] = useState(\"HiddenProfit\");\r\n\r\n  const [appointmentsData, setAppointmentsData] = useState(null);\r\n  const [drugConsumptionData, setDrugConsumptionData] = useState(null);\r\n  const [profitData, setProfitData] = useState(null);\r\n\r\n  const [duration, setDuration] = useState(0);\r\n\r\n  const properties = {\r\n    height: 400,\r\n    width: 600,\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      scales: { yAxes: [{ ticks: { beginAtZero: true } }] },\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Appointments and medicine consumption\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  async function fetchDataOfAppointmentsForReport() {\r\n    const request = await api.get(\r\n      `/api/appointment/report/${pharmacyDetails?.id}/${selectedPeriod}`\r\n    ).catch(() => { });\r\n    setAppointmentsData(!!request ? request.data : null);\r\n    return request;\r\n  }\r\n\r\n  async function fetchDataForDrugConsumptionForReport() {\r\n    const request = await api.get(\r\n      `/api/medicine-reservation/report/${pharmacyDetails?.id}/${selectedPeriod}`\r\n    ).catch(() => { });\r\n    setDrugConsumptionData(!!request ? request.data : null);\r\n    return request;\r\n  }\r\n\r\n  async function fetchProfitReport() {\r\n    const request = await api.get(\r\n      `/api/pharmacy/report/${pharmacyDetails?.id}/${selectedPeriod}/${duration}`\r\n    ).catch(() => { });\r\n    setProfitData(!!request ? request.data : null);\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pharmacyDetails != undefined) {\r\n      fetchDataOfAppointmentsForReport();\r\n      fetchDataForDrugConsumptionForReport();\r\n      if (profitDisplay == \"DisplayProfit\" && duration != 0)\r\n        fetchProfitReport();\r\n    }\r\n  }, [pharmacyDetails, selectedPeriod, profitDisplay, duration]);\r\n\r\n  useEffect(() => {\r\n    if (appointmentsData != null && drugConsumptionData != null) {\r\n      if (profitDisplay === \"DisplayProfit\" && profitData != null) drawGraph();\r\n      if (profitDisplay === \"HiddenProfit\") drawGraph();\r\n    }\r\n  }, [appointmentsData, drugConsumptionData, profitData, selectedChart]);\r\n\r\n  let drawGraph = () => {\r\n    let datasets = [];\r\n    let labels = Object.keys(appointmentsData);\r\n\r\n    let colors = genRandomColors(labels.length);\r\n    let dataset1 = {\r\n      label: \"Number of appointments\",\r\n      data: Object.values(appointmentsData),\r\n      backgroundColor: colors,\r\n      borderColor: \"black\",\r\n      borderWidth: 2,\r\n    };\r\n    datasets.push(dataset1);\r\n\r\n    let colors2;\r\n    if (\r\n      selectedChart === \"Bar\" ||\r\n      selectedChart === \"Line\" ||\r\n      selectedChart === \"Radar\"\r\n    )\r\n      colors2 = genRandomColors(Object.keys(drugConsumptionData).length);\r\n    else colors2 = colors;\r\n\r\n    let dataset2 = {\r\n      label: \"Medicine consumption\",\r\n      data: Object.values(drugConsumptionData),\r\n      backgroundColor: colors2,\r\n      borderColor: \"black\",\r\n      borderWidth: 2,\r\n    };\r\n\r\n    datasets.push(dataset2);\r\n\r\n    if (profitDisplay === \"DisplayProfit\") {\r\n      let colors3;\r\n      if (\r\n        selectedChart === \"Bar\" ||\r\n        selectedChart === \"Line\" ||\r\n        selectedChart === \"Radar\"\r\n      )\r\n        colors3 = genRandomColors(Object.keys(profitData).length);\r\n      else colors3 = colors;\r\n\r\n      let dataset3 = {\r\n        label: \"Profit\",\r\n        data: Object.values(profitData),\r\n        backgroundColor: colors3,\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n      };\r\n\r\n      datasets.push(dataset3);\r\n    }\r\n\r\n    setChartData({ labels, datasets });\r\n  };\r\n\r\n  let genRandomColors = (length) => {\r\n    if (\r\n      selectedChart === \"Bar\" ||\r\n      selectedChart === \"Line\" ||\r\n      selectedChart === \"Radar\"\r\n    ) {\r\n      return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n    }\r\n    let array = [];\r\n    let i;\r\n    let randomColor;\r\n    for (i = 0; i < length; i++) {\r\n      randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n      array.push(\"#\" + randomColor);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  let getMax = () => {\r\n    if (selectedPeriod === \"Monthly\") return 12;\r\n    else if (selectedPeriod === \"Yearly\") return 10;\r\n    else return 4;\r\n  };\r\n\r\n  const charTypes = [\"Line\", \"Bar\", \"Radar\", \"Doughnut\", \"PolarArea\", \"Pie\"];\r\n  const periods = [\"Monthly\", \"Quarterly\", \"Yearly\"];\r\n  const profit = [\"HiddenProfit\", \"DisplayProfit\"];\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"sixth\">\r\n      <h1 className=\"content-header\">Reports</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col className=\"center\">\r\n          <h4>Average grade: {pharmacyDetails?.avgGrade}</h4>\r\n        </Col>\r\n        <Col className=\"center\">\r\n          <h4>\r\n            Average grades of workers can be seen on tab 'Pharmacists and\r\n            dermatologists'\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              {selectedChart}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {charTypes.map((item) => (\r\n                <Dropdown.Item\r\n                  active={selectedChart == item}\r\n                  onClick={() => {\r\n                    setSelectedChart(item);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              {selectedPeriod}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {periods.map((item) => (\r\n                <Dropdown.Item\r\n                  active={selectedPeriod == item}\r\n                  onClick={() => {\r\n                    setSelectedPeriod(item);\r\n                    setDuration(0);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              {profitDisplay}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {profit.map((item) => (\r\n                <Dropdown.Item\r\n                  active={profitDisplay == item}\r\n                  onClick={() => {\r\n                    if (duration == 0 && profitDisplay == \"HiddenProfit\")\r\n                      addToast(\r\n                        \"Duration cannot be 0! Change it if u want to see profit!\",\r\n                        {\r\n                          appearance: \"warning\",\r\n                        }\r\n                      );\r\n                    else setProfitDisplay(item);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"basic-addon3\">\r\n                Duration in past\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              id=\"basic-url\"\r\n              type=\"number\"\r\n              value={duration}\r\n              onChange={(event) =>\r\n                setDuration(Number.parseInt(event.target.value))\r\n              }\r\n              max={getMax()}\r\n              min=\"0\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col className=\"center\">\r\n          {selectedChart == \"Line\" && <Line data={chartData} {...properties} />}\r\n          {selectedChart == \"Bar\" && <Bar data={chartData} {...properties} />}\r\n          {selectedChart == \"Radar\" && (\r\n            <Radar data={chartData} {...properties} />\r\n          )}\r\n          {selectedChart == \"Doughnut\" && (\r\n            <Doughnut data={chartData} {...properties} />\r\n          )}\r\n          {selectedChart == \"PolarArea\" && (\r\n            <PolarArea data={chartData} {...properties} />\r\n          )}\r\n          {selectedChart == \"Pie\" && <Pie data={chartData} {...properties} />}\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default DisplayReports;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, Container, Modal, Form } from \"react-bootstrap\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\nimport api from \"../../app/api\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AddAdvertismentModal(props) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n  const [type, setType] = useState(\"0\");\r\n  const [medicineItems, setMedicineItems] = useState([]);\r\n  const [selectedRowId, setSelectedRowId] = useState(0);\r\n\r\n  async function fetchPriceList() {\r\n    const request = await api\r\n      .get(`/api/pricelist/${props.priceListId}`)\r\n      .then((res) => {\r\n        setMedicineItems(res.data.medicineItems);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.priceListId != undefined) {\r\n      fetchPriceList();\r\n    }\r\n  }, [props.priceListId]);\r\n\r\n  let changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    d.setHours(0, 0, 0);\r\n    let now = new Date();\r\n    if (d.getTime() > now.getTime()) setEndDate(d);\r\n    else {\r\n      setEndDate(null);\r\n      addToast(\"End date should be in future!\", {\r\n        appearance: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      onExited={() => {\r\n        setEndDate(null);\r\n        setDiscount(0);\r\n        setSelectedRowId(0);\r\n        setText(\"\");\r\n        setType(\"0\");\r\n      }}\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add advertisment\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"typeSelect\">\r\n                <Form.Label>Types</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(event) => setType(event.target.value)}\r\n                  defaultValue=\"0\"\r\n                >\r\n                  <option value=\"0\">Not Selected</option>\r\n                  <option value=\"1\">Promotion</option>\r\n                  <option value=\"2\">Sale</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"medicineSelect\">\r\n                <Form.Label>Medicine</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(event) => setSelectedRowId(event.target.value)}\r\n                  defaultValue=\"0\"\r\n                >\r\n                  <option value=\"0\">Not Selected</option>\r\n                  {medicineItems?.length != 0 &&\r\n                    medicineItems?.map((item, index) => (\r\n                      <option value={item?.id}>{item?.medicine?.name}</option>\r\n                    ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"datePicker\" di>\r\n                <Form.Label>End date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(event) => changeDate(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"discountPicker\" di>\r\n                <Form.Label>Discount</Form.Label>\r\n                <Form.Control\r\n                  disabled={type != \"2\"}\r\n                  type=\"number\"\r\n                  onChange={(event) => setDiscount(event.target.value)}\r\n                  max=\"100\"\r\n                  min=\"0\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"contentPicker\" di>\r\n                <Form.Label>Content</Form.Label>\r\n                <Form.Control\r\n                  disabled={type != \"1\"}\r\n                  type=\"text\"\r\n                  onChange={(event) => setText(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          disabled={type == \"0\" || selectedRowId == \"0\" || endDate == null}\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.handleAdd({\r\n              type,\r\n              selectedRowId,\r\n              endDate: endDate.getTime(),\r\n              discount,\r\n              text,\r\n            });\r\n          }}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdvertismentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tab, Row, Col, Button, Table } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\nimport AddAdvertismentModal from \"./AddAdvertismentModal\";\r\n\r\nimport moment from \"moment\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction AdvertismentTab({ pharmacyDetails }) {\r\n  const { addToast } = useToasts();\r\n  const [list, setList] = useState([]);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  async function fetchAdvertisment() {\r\n    const request = await api\r\n      .get(`/api/sales/${pharmacyDetails.id}`)\r\n      .then((res) => {\r\n        setList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pharmacyDetails?.id != undefined) {\r\n      fetchAdvertisment();\r\n    }\r\n  }, [pharmacyDetails, refresh]);\r\n\r\n  async function addAdverb(data) {\r\n    const request = await api\r\n      .post(`/api/sales/${pharmacyDetails.id}`, data)\r\n      .then((res) => {\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n        setRefresh(!refresh);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n\r\n    return request;\r\n  }\r\n\r\n  let handleAddModalSave = (data) => {\r\n    setAddModalShow(false);\r\n    addAdverb(data);\r\n  };\r\n\r\n  let handleAddModalClose = () => {\r\n    setAddModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"ninth\">\r\n      <h1 className=\"content-header\">Advertisment</h1>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col>\r\n          <Table bordered striped variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Medicine</th>\r\n                <th>Type</th>\r\n                <th>Discount(percent)</th>\r\n                <th>Start date</th>\r\n                <th>End date</th>\r\n                <th>Content</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {list?.length != 0 &&\r\n                list?.map((item, index) => (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.medicineItem.medicine.name}</td>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.discountPercent}</td>\r\n                    <td>{moment(item.startDate).format(\"DD MMM YYYY\")}</td>\r\n                    <td>{moment(item.endDate).format(\"DD MMM YYYY\")}</td>\r\n                    <td>{item.advertisementText}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <AddAdvertismentModal\r\n          show={addModalShow}\r\n          onHide={handleAddModalClose}\r\n          handleAdd={handleAddModalSave}\r\n          priceListId={pharmacyDetails?.priceListId}\r\n        />\r\n        <Col className=\"center\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              setAddModalShow(true);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <hr></hr>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default AdvertismentTab;\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Button, Row } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport PasswordFormGroup from '../formGroups/PasswordFormGroup'\r\nimport api from '../../../app/api'\r\nimport { getIdFromToken } from '../../../app/jwtTokenUtils'\r\nimport { logout } from '../../../app/slices/userSlice'\r\nimport Validator from '../../../app/validator'\r\n\r\n// Use when user is logging in for the first time\r\nconst SetPasswordModal = (props) => {\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repeatPassword, setRepeatPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    const validate = () => {\r\n        return Validator['password'](password) && Validator['password'](repeatPassword);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (validate()) {\r\n            if (password !== repeatPassword) {\r\n                setErrorMessage('Passwords do not match');\r\n            } else {\r\n                setErrorMessage('');\r\n                handleSet();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSet = () => {\r\n        let data = {\r\n            newPassword: password\r\n        }\r\n        api.put(\"/api/users/set-password/\" + getIdFromToken(), data)\r\n            .then(() => {\r\n                props.onPasswordSet()\r\n            })\r\n            .catch(() => {\r\n                setErrorMessage('Oops! Something went wrong, try again!')\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} onHide={handleClose} backdrop=\"static\">\r\n            <Modal.Header className=\"justify-content-center\" backdrop=\"static\" closeButton>\r\n                <p>Welcome! Please set new password!</p>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"justify-content-center\">\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                    <PasswordFormGroup onChange={(event) => setPassword(event.target.value)}></PasswordFormGroup>\r\n                    <PasswordFormGroup name=\"Repeat password\" onChange={(event) => setRepeatPassword(event.target.value)}></PasswordFormGroup>\r\n                    <Button className=\"float-center\" variant=\"outline-secondary\" type=\"submit\" >Set Password</Button>\r\n                </Form>\r\n                {errorMessage.length > 0 &&\r\n                    <Row className=\"justify-content-center m-3\">\r\n                        <p className=\"text-danger\">{errorMessage}</p>\r\n                    </Row>\r\n                }\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nSetPasswordModal.defaultProps = {\r\n    isPasswordSet: false,\r\n};\r\n\r\nexport default SetPasswordModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../../styling/pharmacyHomePage.css\";\r\nimport \"../../styling/pharmacy.css\";\r\nimport \"../../styling/home_page.css\";\r\n\r\nimport EditBasicInfo from \"./EditBasicInfo\";\r\nimport DisplayPurchaseOrders from \"./DisplayPurchaseOrders\";\r\nimport AddAppointment from \"./AddAppointment\";\r\nimport DisplayMedicine from \"./DisplayMedicine\";\r\nimport DisplayHolidayRequests from \"./DisplayHolidayRequests\";\r\nimport DisplayWorkers from \"./DisplayWorkers\";\r\nimport DisplayInquiries from \"./DisplayInquiries\";\r\n\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport DisplayReports from \"./DisplayReports\";\r\nimport AdvertismentTab from \"./AdvertismentTab\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport SetPasswordModal from \"../utilComponents/modals/SetPasswordModal\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction PharmacyAdminHomePage() {\r\n  const { addToast } = useToasts();\r\n  const [pharmacyDetails, setPharmacyDetails] = useState({});\r\n  const [refreshPriceList, setRefreshPriceList] = useState(false);\r\n\r\n  const [pharmacyId, setPharmacyId] = useState(null);\r\n\r\n  const [refreshInq, setRefreshInq] = useState(false);\r\n\r\n  const [loadingPWChanged, setLoadingPWChanged] = useState(true);\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  async function fetchPharmacyid() {\r\n    const request = await api\r\n      .get(`/api/pharmacy/getpharmacyidbyadmin/${getIdFromToken()}`)\r\n      .then((res) => {\r\n        setPharmacyId(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err),\r\n          {\r\n            appearance: \"error\",\r\n          }\r\n        );\r\n      });\r\n    return request;\r\n  }\r\n\r\n  async function fetchPharmacy() {\r\n    const request = await api\r\n      .get(`/api/pharmacy/${pharmacyId}`)\r\n      .then((res) => {\r\n        setPharmacyDetails(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n    return request;\r\n  }\r\n\r\n  let changedPharmacy = () => {\r\n    fetchPharmacy();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pharmacyId != null) fetchPharmacy();\r\n  }, [pharmacyId]);\r\n\r\n  useEffect(() => {\r\n    fetchPharmacyid();\r\n\r\n    api.get(\"/api/users/\" + getIdFromToken()).then((res) => {\r\n      if (!res.data.passwordChanged) {\r\n        setShowModalPWChange(true);\r\n        setLoadingPWChanged(false);\r\n      } else {\r\n        setShowModalPWChange(false);\r\n        setLoadingPWChanged(false);\r\n      }\r\n    }).catch(() => { });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Basic informations\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                  Pharmacists and dermatologists\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                  Medicine\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"fourth\">\r\n                  Add appointment\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"fifth\">\r\n                  Holiday requests\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"sixth\">\r\n                  Reports\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"seventh\">\r\n                  Purchase orders\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"eight\">\r\n                  Inquiries\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"ninth\">\r\n                  Advertisment\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <EditBasicInfo\r\n                pharmacyDetails={pharmacyDetails}\r\n                changedPharmacy={changedPharmacy}\r\n              />\r\n              <DisplayWorkers idOfPharmacy={pharmacyDetails?.id} />\r\n              <DisplayHolidayRequests idOfPharmacy={pharmacyDetails?.id} />\r\n              <AddAppointment idOfPharmacy={pharmacyDetails?.id} />\r\n              <DisplayMedicine\r\n                setRefreshPriceList={setRefreshPriceList}\r\n                refreshPriceList={refreshPriceList}\r\n                idOfPharmacy={pharmacyDetails?.id}\r\n                priceListId={pharmacyDetails?.priceListId}\r\n              />\r\n              <DisplayPurchaseOrders\r\n                refreshInq={refreshInq}\r\n                setRefreshInq={setRefreshInq}\r\n                refresh={refreshPriceList}\r\n                idOfPharmacy={pharmacyDetails?.id}\r\n                priceListId={pharmacyDetails?.priceListId}\r\n              />\r\n              <DisplayInquiries\r\n                refreshInq={refreshInq}\r\n                idOfPharmacy={pharmacyDetails?.id}\r\n              />\r\n              <DisplayReports pharmacyDetails={pharmacyDetails} />\r\n              <AdvertismentTab pharmacyDetails={pharmacyDetails} />\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n      <SetPasswordModal\r\n        show={showModalPWChange}\r\n        onPasswordSet={() => {\r\n          setShowModalPWChange(false);\r\n        }}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacyAdminHomePage;\r\n","import React from \"react\";\r\nimport { Button, Modal, Container } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentStartModal(props) {\r\n  // prosledis appointment\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n\r\n  const onStart = () => {\r\n    if (\r\n      !(\r\n        moment(Date.now()) >\r\n        moment(props.appointment.start).subtract(15, \"minutes\")\r\n      )\r\n    ) {\r\n      // ne moze da se krene vise od 15 min ranije\r\n      addToast(\"You can't start this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", props.appointment.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/start_appointment\", bodyFormData)\r\n      .then(() => {\r\n        history.push({\r\n          pathname: \"/worker/appointment_report\",\r\n          state: {\r\n            // location state\r\n            appointmentID: props.appointment.id,\r\n          },\r\n        });\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't start this appointment!\", { appearance: \"error\" })\r\n      );\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (\r\n      !(moment(Date.now()) > moment(props.appointment.start).add(5, \"minutes\"))\r\n    ) {\r\n      // ne moze da se cancelluje dok ne prodje bar 5 minuta od pocetka sastanka TODO check na backu\r\n      addToast(\"You can't cancel this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", props.appointment.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/cancel_appointment\", bodyFormData)\r\n      .then(() => {\r\n        addToast(\"Appointment cancelled! Patient didn't show up!\", {\r\n          appearance: \"info\",\r\n        });\r\n        props.onCancelMethod();\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't cancel this appointment yet!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Initialize appointment for {props.appointment.patient}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Button onClick={onStart}>Start appointment</Button>\r\n          <Button onClick={onCancel}>Patient didn't show up</Button>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppointmentStartModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport AppointmentStartModal from \"../appointment_start_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../../app/api\";\r\nimport { getUserTypeFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport SetPasswordModal from \"../../utilComponents/modals/SetPasswordModal\";\r\nimport \"../../../styling/worker.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PharmHomePage() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [startAppt, setStartAppt] = useState({});\r\n\r\n  const [loadingPWChanged, setLoadingPWChanged] = useState(true);\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  const [loadingAppts, setLoadingAppts] = useState(true);\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      let id = getIdFromToken();\r\n      if (!id) {\r\n        addToast(\"Invalid user!\", { appearance: \"error\" });\r\n        setAppointments([]);\r\n        return;\r\n      }\r\n      await api\r\n        .get(\"/api/appointment/workers_upcoming?id=\" + id + \"&page=0&size=10\")\r\n        .then((resp) => {\r\n          setAppointments(resp.data);\r\n          setLoadingAppts(false);\r\n        })\r\n        .catch(() => {\r\n          setAppointments([]);\r\n          setLoadingAppts(false);\r\n        });\r\n    }\r\n    let id = getIdFromToken();\r\n    api.get(\"/api/users/\" + id).then((res) => {\r\n      if (!res.data.passwordChanged) {\r\n        setShowModalPWChange(true);\r\n        setLoadingPWChanged(false);\r\n      } else {\r\n        setShowModalPWChange(false);\r\n        setLoadingPWChanged(false);\r\n      }\r\n    }).catch(() => { });;\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const initiateAppt = (appointment) => {\r\n    if (\r\n      !(moment(Date.now()) > moment(appointment.start).subtract(15, \"minutes\"))\r\n    ) {\r\n      // nikako ga ne mozemo zapoceti vise od 15 minuta ranije\r\n      addToast(\r\n        \"You can't initiate appointment until at least 15 minutes before!\",\r\n        { appearance: \"error\" }\r\n      );\r\n      return;\r\n    }\r\n    setStartAppt(appointment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCancelMethod = () => {\r\n    setShowModal(false);\r\n    let id_farm = getIdFromToken();\r\n    if (!id_farm) {\r\n      addToast(\"Invalid user!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/appointment/workers_upcoming\", {\r\n        params: { id: id_farm, page: 0, size: 10 },\r\n      })\r\n      .then((resp) => setAppointments(resp.data))\r\n      .catch(() => setAppointments([])); //resetujemo prikaz\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 pb-3 pl-3 pr-3 align-items-center\">\r\n        <h2 className=\"my_content_header\">Upcomming appointments</h2>\r\n      </Row>\r\n\r\n      {appointments.length === 0 && !loadingAppts && (\r\n        <Row className=\"justify-content-center m-3 align-items-center\">\r\n          <h3>There are no upcomming appointments!</h3>\r\n        </Row>\r\n      )}\r\n\r\n      {loadingPWChanged ? (\r\n        <Row className=\"justify-content-center m-5 align-items-center\">\r\n          <h3>Checking user data...</h3>\r\n        </Row>\r\n      ) : (\r\n        <div>\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center p-4 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col md={7}>\r\n                  <Card className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        Appointment date:{\" \"}\r\n                        {moment(value.start).format(\"DD MMM YYYY\")}\r\n                        <span style={{ float: \"right\" }}>\r\n                          Time: {moment(value.start).format(\"hh:mm a\")} -{\" \"}\r\n                          {moment(value.end).format(\"hh:mm a\")}\r\n                        </span>\r\n                      </Card.Title>\r\n                      <hr\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"black\",\r\n                          height: 1,\r\n                        }}\r\n                      />\r\n                      <Card.Text className=\"mb-2\">\r\n                        Patient: {value.patient}\r\n                      </Card.Text>\r\n                      <Card.Text className=\"mb-2\">\r\n                        Price: {value.price}\r\n                      </Card.Text>\r\n\r\n                      <Card.Text style={{ textAlign: \"center\" }}>\r\n                        <Card.Link\r\n                          as={Link}\r\n                          to=\"#\"\r\n                          onClick={() => initiateAppt(value)}\r\n                        >\r\n                          Start appointment\r\n                        </Card.Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <AppointmentStartModal\r\n        show={showModal}\r\n        onCancelMethod={onCancelMethod}\r\n        appointment={startAppt}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentStartModal>\r\n\r\n      <SetPasswordModal\r\n        show={showModalPWChange}\r\n        onPasswordSet={() => {\r\n          setShowModalPWChange(false);\r\n        }}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmHomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport AppointmentStartModal from \"../appointment_start_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../../app/api\";\r\nimport { getUserTypeFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport SetPasswordModal from \"../../utilComponents/modals/SetPasswordModal\";\r\nimport \"../../../styling/worker.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DermHomePage() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [startAppt, setStartAppt] = useState({});\r\n\r\n  const [loadingPWChanged, setLoadingPWChanged] = useState(true);\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  const [loadingAppts, setLoadingAppts] = useState(true);\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      let id = getIdFromToken();\r\n      if (!id) {\r\n        addToast(\"Invalid user!\", { appearance: \"error\" });\r\n        setAppointments([]);\r\n        return;\r\n      }\r\n\r\n      await api\r\n        .get(\"/api/appointment/workers_upcoming?id=\" + id + \"&page=0&size=10\")\r\n        .then((resp) => {\r\n          setAppointments(resp.data);\r\n          setLoadingAppts(false);\r\n        })\r\n        .catch(() => {\r\n          setAppointments([]);\r\n          setLoadingAppts(false);\r\n        });\r\n    }\r\n    let id = getIdFromToken();\r\n    api.get(\"/api/users/\" + id).then((res) => {\r\n      if (!res.data.passwordChanged) {\r\n        setShowModalPWChange(true);\r\n        setLoadingPWChanged(false);\r\n      } else {\r\n        setShowModalPWChange(false);\r\n        setLoadingPWChanged(false);\r\n      }\r\n    });\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const initiateAppt = (appointment) => {\r\n    if (\r\n      !(moment(Date.now()) > moment(appointment.start).subtract(15, \"minutes\"))\r\n    ) {\r\n      // nikako ga ne mozemo zapoceti vise od 15 minuta ranije\r\n      addToast(\r\n        \"You can't initiate appointment until at least 15 minutes before!\",\r\n        { appearance: \"error\" }\r\n      );\r\n      return;\r\n    }\r\n    setStartAppt(appointment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCancelMethod = () => {\r\n    setShowModal(false);\r\n    let id_derm = getIdFromToken();\r\n    if (!id_derm) {\r\n      addToast(\"Invalid user!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/appointment/workers_upcoming\", {\r\n        params: { id: id_derm, page: 0, size: 10 },\r\n      })\r\n      .then((resp) => setAppointments(resp.data))\r\n      .catch(() => setAppointments([])); //resetujemo prikaz\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 pb-3 pl-3 pr-3 align-items-center\">\r\n        <h2 className=\"my_content_header\">Upcomming appointments</h2>\r\n      </Row>\r\n\r\n      {appointments.length === 0 && !loadingAppts && (\r\n        <Row className=\"justify-content-center m-3 align-items-center\">\r\n          <h3>There are no upcomming appointments!</h3>\r\n        </Row>\r\n      )}\r\n\r\n      {loadingPWChanged ? (\r\n        <Row className=\"justify-content-center m-5 align-items-center\">\r\n          <h3>Checking user data...</h3>\r\n        </Row>\r\n      ) : (\r\n        <div>\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center p-4 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col md={7}>\r\n                  <Card className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        Appointment date:{\" \"}\r\n                        {moment(value.start).format(\"DD MMM YYYY\")}\r\n                        <span style={{ float: \"right\" }}>\r\n                          Time: {moment(value.start).format(\"hh:mm a\")} -{\" \"}\r\n                          {moment(value.end).format(\"hh:mm a\")}\r\n                        </span>\r\n                      </Card.Title>\r\n                      <hr\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"black\",\r\n                          height: 1,\r\n                        }}\r\n                      />\r\n                      <Card.Text className=\"mb-2\">\r\n                        Pharmacy: {value.pharmacy}\r\n                      </Card.Text>\r\n                      <Card.Text className=\"mb-2\">\r\n                        Patient: {value.patient}\r\n                      </Card.Text>\r\n                      <Card.Text className=\"mb-2\">\r\n                        Price: {value.price}\r\n                      </Card.Text>\r\n\r\n                      <Card.Text style={{ textAlign: \"center\" }}>\r\n                        <Card.Link\r\n                          as={Link}\r\n                          to=\"#\"\r\n                          onClick={() => initiateAppt(value)}\r\n                        >\r\n                          Start appointment\r\n                        </Card.Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      <AppointmentStartModal\r\n        show={showModal}\r\n        onCancelMethod={onCancelMethod}\r\n        appointment={startAppt}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentStartModal>\r\n\r\n      <SetPasswordModal\r\n        show={showModalPWChange}\r\n        onPasswordSet={() => {\r\n          setShowModalPWChange(false);\r\n        }}\r\n      ></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DermHomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n  Nav,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { StarFill, Search, Reply } from \"react-bootstrap-icons\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\n\r\nfunction PharmaciesView() {\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [backup, setBackup] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedPharmacies, setShowedPharmacies] = useState([]);\r\n  const [fsearch, setFSearch] = useState(\"\");\r\n  const [filterGrade, setFilterGrade] = useState(\"\");\r\n  const [filterDistance, setFilterDistance] = useState(\"\");\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [ascDesc, setAscDesc] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const [triggered, setTriggered] = useState(\"none\");\r\n  let div = document.getElementById(\"my__transition__div\");\r\n  let blocker = document.getElementById(\"my__blocker\");\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacies() {\r\n      const request = await api.get(\"/api/pharmacy/\").catch(() => { });;\r\n      setPharmacies(!!request ? request.data : []);\r\n      setBackup(!!request ? request.data : []);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  }, []);\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (fsearch.length === 0) {\r\n      api.get(\"/api/pharmacy/\").then((resp) => {\r\n        setPharmacies(resp.data);\r\n        setBackup(resp.data);\r\n      }).catch(() => { });\r\n    } else {\r\n      api\r\n        .get(\"/api/pharmacy/search\", {\r\n          params: { searchValue: fsearch },\r\n        })\r\n        .then((resp) => {\r\n          setPharmacies(resp.data);\r\n          setBackup(resp.data);\r\n        }).catch(() => { });\r\n    }\r\n  };\r\n\r\n  const formFilter = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (filterGrade === \"\" && filterDistance === \"\") {\r\n      setPharmacies(backup);\r\n      return;\r\n    }\r\n\r\n    var filtered = [];\r\n\r\n    if (filterGrade !== \"\") {\r\n      for (let i = 0; i < backup.length; i++) {\r\n        if (filterGrade === \"HIGH\" && backup[i].avgGrade > 3) {\r\n          filtered.push(backup[i]);\r\n        } else if (filterGrade === \"MEDIUM\" && backup[i].avgGrade === 3) {\r\n          filtered.push(backup[i]);\r\n        } else if (filterGrade === \"LOW\" && backup[i].avgGrade < 3) {\r\n          filtered.push(backup[i]);\r\n        }\r\n      }\r\n\r\n      setPharmacies(filtered);\r\n      if (filtered.length === 0) return;\r\n    }\r\n\r\n    if (filterDistance !== \"\") {\r\n      if (navigator.geolocation) {\r\n        // Ako odredjeni browser podrzava geolocation\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          let filteringList = filtered.length !== 0 ? [...filtered] : backup;\r\n          filtered = [];\r\n          for (let i = 0; i < filteringList.length; i++) {\r\n            if (\r\n              filterDistance === \"5LESS\" &&\r\n              calculateDistance(\r\n                filteringList[i].address,\r\n                position.coords.longitude,\r\n                position.coords.latitude\r\n              ) <= 5\r\n            ) {\r\n              filtered.push(filteringList[i]);\r\n            } else if (\r\n              filterDistance === \"10LESS\" &&\r\n              calculateDistance(\r\n                filteringList[i].address,\r\n                position.coords.longitude,\r\n                position.coords.latitude\r\n              ) <= 10\r\n            ) {\r\n              filtered.push(filteringList[i]);\r\n            } else if (\r\n              filterDistance === \"10HIGHER\" &&\r\n              calculateDistance(\r\n                filteringList[i].address,\r\n                position.coords.longitude,\r\n                position.coords.latitude\r\n              ) > 10\r\n            ) {\r\n              filtered.push(filteringList[i]);\r\n            }\r\n          }\r\n\r\n          setPharmacies(filtered);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateDistance = (address, lon2, lat2) => {\r\n    let lat1 = address.location.latitude;\r\n    let lon1 = address.location.longitude;\r\n\r\n    if (lat1 == lat2 && lon1 == lon2) {\r\n      return 0;\r\n    } else {\r\n      var radlat1 = (Math.PI * lat1) / 180;\r\n      var radlat2 = (Math.PI * lat2) / 180;\r\n      var theta = lon1 - lon2;\r\n      var radtheta = (Math.PI * theta) / 180;\r\n      var dist =\r\n        Math.sin(radlat1) * Math.sin(radlat2) +\r\n        Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n      if (dist > 1) {\r\n        dist = 1;\r\n      }\r\n      dist = Math.acos(dist);\r\n      dist = (dist * 180) / Math.PI;\r\n      dist = dist * 60 * 1.1515 * 1.609344;\r\n      console.log(dist);\r\n      return dist;\r\n    }\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    api\r\n      .get(\"/api/pharmacy/\")\r\n      .then((resp) => {\r\n        setPharmacies(resp.data);\r\n        setBackup(resp.data);\r\n      })\r\n      .catch(() => setPharmacies([]));\r\n    setFSearch(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(pharmacies?.length / 12) - 1;\r\n    if (pharmacies?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [pharmacies, reload]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = pharmacies.length < first + 12 ? pharmacies?.length : first + 12;\r\n    setShowedPharmacies(pharmacies?.slice(first, max));\r\n  }, [pharmacies, pagNumber, reload]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  const doSorting = (type, value) => {\r\n    if (type === \"sorter\") setSorter(value);\r\n    else setAscDesc(value);\r\n\r\n    if (value === \"none\") return;\r\n    if (type === \"sorter\" && ascDesc === \"none\") return;\r\n    if (type === \"ascDesc\" && sorter === \"none\") return;\r\n\r\n    pharmacies.sort(function (ph1, ph2) {\r\n      if (\r\n        (type === \"sorter\" && value === \"grade\") ||\r\n        (type === \"ascDesc\" && sorter === \"grade\")\r\n      )\r\n        return ph1?.avgGrade - ph2?.avgGrade;\r\n      if (\r\n        (type === \"sorter\" && value === \"pharmacy name\") ||\r\n        (type === \"ascDesc\" && sorter === \"pharmacy name\")\r\n      )\r\n        return ph1?.name.localeCompare(ph2?.name);\r\n      if (\r\n        (type === \"sorter\" && value === \"city name\") ||\r\n        (type === \"ascDesc\" && sorter === \"city name\")\r\n      )\r\n        return ph1?.address?.city.localeCompare(ph2?.address?.city);\r\n    });\r\n    if (\r\n      (type === \"ascDesc\" && value === \"descending\") ||\r\n      (type === \"sorter\" && ascDesc === \"descending\")\r\n    )\r\n      pharmacies.reverse();\r\n    setReload(!reload);\r\n  };\r\n\r\n  function hideBlocker() {\r\n    blocker.classList.remove(\"blocker\");\r\n    div.classList.remove(\"my__transition__div__move\");\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"first\">\r\n      <div id=\"my__blocker\" onClick={() => hideBlocker()}></div>\r\n      <div id=\"my__transition__div\" className=\"my__flex\">\r\n        <Form\r\n          onSubmit={formSearch}\r\n          style={{\r\n            display: triggered === \"search\" ? \"block\" : \"none\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <Form.Group className=\"my__flex\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"searchValue\"\r\n              value={fsearch}\r\n              onChange={(e) => setFSearch(e.target.value)}\r\n              placeholder=\"Enter name or place...\"\r\n            />\r\n\r\n            <Button type=\"submit\" className=\"my__search__buttons\">\r\n              <Search />\r\n            </Button>\r\n            <Button\r\n              className=\"my__search__buttons my__flex\"\r\n              onClick={resetSearch}\r\n            >\r\n              Reset <Reply />\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n        <div\r\n          className=\"my__flex\"\r\n          style={{ display: triggered === \"sorter\" ? \"flex\" : \"none\" }}\r\n        >\r\n          <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className=\"my__search__buttons\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              {sorter}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"none\");\r\n                }}\r\n              >\r\n                none\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"pharmacy name\");\r\n                }}\r\n              >\r\n                pharmacy name\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"city name\");\r\n                }}\r\n              >\r\n                city name\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"sorter\", \"grade\");\r\n                }}\r\n              >\r\n                grade\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className=\"my__search__buttons\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              {ascDesc}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"ascDesc\", \"none\");\r\n                }}\r\n              >\r\n                none\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"ascDesc\", \"ascending\");\r\n                }}\r\n              >\r\n                ascending\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  doSorting(\"ascDesc\", \"descending\");\r\n                }}\r\n              >\r\n                descending\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n        <div style={{ display: triggered === \"filter\" ? \"block\" : \"none\" }}>\r\n          <Form onSubmit={formFilter} className=\"my__div__filter\">\r\n            <Form.Group controlId=\"gradeSelect\">\r\n              <Form.Label>Grade</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterGrade(event.target.value)}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\">Not Selected</option>\r\n                <option value=\"LOW\">Low</option>\r\n                <option value=\"MEDIUM\">Medium</option>\r\n                <option value=\"HIGH\">High</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"distanceSelect\">\r\n              <Form.Label>Distance</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(event) => setFilterDistance(event.target.value)}\r\n                defaultValue={\"\"}\r\n              >\r\n                <option value={\"\"}>Not Selected</option>\r\n                <option value=\"5LESS\">5km(Less)</option>\r\n                <option value=\"10LESS\">10km(Less)</option>\r\n                <option value=\"10HIGHER\">10km(Higher)</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"my__search__buttons\">\r\n              <Search />\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"my__flex\" style={{ paddingTop: \"30px\" }}>\r\n        <Button\r\n          className=\"my__search__buttons\"\r\n          onClick={() => {\r\n            div.classList.add(\"my__transition__div__move\");\r\n            blocker.classList.add(\"blocker\");\r\n            setTriggered(\"search\");\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          className=\"my__search__buttons\"\r\n          onClick={() => {\r\n            div.classList.add(\"my__transition__div__move\");\r\n            blocker.classList.add(\"blocker\");\r\n            setTriggered(\"sorter\");\r\n          }}\r\n        >\r\n          Sorter\r\n        </Button>\r\n        <Button\r\n          className=\"my__search__buttons\"\r\n          onClick={() => {\r\n            div.classList.add(\"my__transition__div__move\");\r\n            blocker.classList.add(\"blocker\");\r\n            setTriggered(\"filter\");\r\n          }}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </div>\r\n      <Container fluid>\r\n        <Row>\r\n          {showedPharmacies.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>No result!</h3>\r\n            </Row>\r\n          )}\r\n          {showedPharmacies &&\r\n            showedPharmacies.map((pharmacy, index) => {\r\n              return (\r\n                <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                  <Nav.Link\r\n                    as={Link}\r\n                    className=\"my__nav__link__card\"\r\n                    to={`/pharmacy/${pharmacy.id}`}\r\n                  >\r\n                    <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                      <Card.Body>\r\n                        <Card.Title>{pharmacy.name}</Card.Title>\r\n                        <Card.Text>{pharmacy.description}</Card.Text>\r\n                      </Card.Body>\r\n                      <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem className=\"my__flex\">\r\n                          {[...Array(Math.ceil(pharmacy.avgGrade))].map(() => (\r\n                            <StarFill className=\"my__star\" />\r\n                          ))}\r\n                        </ListGroupItem>\r\n                        <ListGroupItem className=\"my__flex\">\r\n                          {pharmacy.address.street +\r\n                            \", \" +\r\n                            pharmacy.address.city}\r\n                        </ListGroupItem>\r\n                      </ListGroup>\r\n                    </Card>\r\n                  </Nav.Link>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default PharmaciesView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Form, Row, Button } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport api from \"../../app/api\";\r\n\r\nconst MedicineSearchAndFilter = (props) => {\r\n    const [medicineType, setMedicineType] = useState(\"\");\r\n    const [medicineForm, setMedicineForm] = useState(\"\");\r\n    const [medTypes, setMedTypes] = useState([]);\r\n    const [medForms, setMedForms] = useState([]);\r\n    const [medName, setMedName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        api.get(`/api/medicine-types/`).then((res) => {\r\n            setMedTypes(res.data);\r\n        }).catch(() => { });\r\n        api.get(`/api/medicine-forms/`).then((res) => {\r\n            setMedForms(res.data);\r\n        }).catch(() => { });\r\n    }, []);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        props.updateParams(generateSearchParams());\r\n    };\r\n\r\n    const generateSearchParams = () => {\r\n        let searchParam = `name:${medName},medicineType:${medicineType},medicineForm:${medicineForm}`\r\n        return searchParam\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Container style={{ marginBottom: '20px' }}>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        <Form.Group>\r\n                            <Form.Label>Name:</Form.Label>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Form.Group>\r\n                            <Form.Label>Type:</Form.Label>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Form.Group>\r\n                            <Form.Label>Form:</Form.Label>\r\n                        </Form.Group>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                onChange={(event) => { setMedName(event.target.value) }} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Form.Group>\r\n                            <Form.Control as=\"select\" custom onChange={(event) => { setMedicineType(event.target.value) }}>\r\n                                <option value=\"\">Show all</option>\r\n                                {medTypes.map((mt) => {\r\n                                    return <option value={mt.name}>{mt.name}</option>\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Form.Group>\r\n                            <Form.Control as=\"select\" custom onChange={(event) => { setMedicineForm(event.target.value) }}>\r\n                                <option value=\"\">Show all</option>\r\n                                {medForms.map((mf) => {\r\n                                    return <option value={mf.name}>{mf.name}</option>\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form >\r\n    )\r\n}\r\n\r\nexport default MedicineSearchAndFilter\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Nav,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport MedicineSearchAndFilter from \"./MedicineSearchAndFilter\";\r\n\r\nfunction MedicinesView() {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedMedicines, setShowedMedicines] = useState([]);\r\n  const [searchParams, setSearchParams] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicines() {\r\n      const request = await api.get(\"/api/medicine/\").catch(() => { });;\r\n      setMedicines(!!request ? request.data : []);\r\n\r\n      return request;\r\n    }\r\n    fetchMedicines();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicines() {\r\n      const request = await api.get(`/api/medicine?search=${searchParams}`).catch(() => { });;\r\n      setMedicines(!!request ? request.data : []);\r\n\r\n      return request;\r\n    }\r\n    if (!!searchParams) {\r\n      fetchMedicines();\r\n    }\r\n  }, [searchParams]);\r\n\r\n  function updateSearchParams(newParams) {\r\n    setSearchParams(newParams);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(medicines?.length / 12) - 1;\r\n    if (medicines?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [medicines]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = medicines.length < first + 12 ? medicines?.length : first + 12;\r\n    setShowedMedicines(medicines?.slice(first, max));\r\n  }, [medicines, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"third\">\r\n      <Container fluid>\r\n        <MedicineSearchAndFilter\r\n          updateParams={(newParams) => {\r\n            updateSearchParams(newParams);\r\n          }}\r\n        ></MedicineSearchAndFilter>\r\n        <Row>\r\n          {showedMedicines &&\r\n            showedMedicines.map((medicine, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Nav.Link\r\n                  as={Link}\r\n                  className=\"my__nav__link__card\"\r\n                  to={`/medicine/${medicine.id}/pharmacy/-1/price/-1`}\r\n                >\r\n                  <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                    <Card.Body>\r\n                      <Card.Title>{medicine.name}</Card.Title>\r\n                      <Card.Text>#{medicine.code}</Card.Text>\r\n                      <Card.Text>{medicine.content}</Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {[...Array(Math.ceil(medicine.avgGrade))].map(() => (\r\n                          <StarFill className=\"my__star\" />\r\n                        ))}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Nav.Link>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default MedicinesView;\r\n","import { React, useEffect } from \"react\";\r\nimport \"../../styling/home_page.css\";\r\nimport { Nav, Tab, Row, Col } from \"react-bootstrap\";\r\nimport PharmaciesView from \"./PharmaciesView\";\r\nimport MedicinesView from \"./MedicinesView\";\r\nimport DisplayWorkers from \"../pharmacyAdmin/DisplayWorkers\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils.js\";\r\nimport DisplayHolidayRequests from \"../pharmacyAdmin/DisplayHolidayRequests\";\r\n\r\nfunction UnregistredAndPatientHomePage() {\r\n  const user = useSelector((state) => state.user);\r\n  let userType = getUserTypeFromToken();\r\n  useEffect(() => {\r\n    userType = getUserTypeFromToken();\r\n  }, [user]);\r\n\r\n  return (\r\n    <main className=\"home__page\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Pharmacies\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              {userType === \"PATIENT\" && (\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                    Dermatologits and pharmacists\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                  Medicines\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <PharmaciesView />\r\n              <MedicinesView />\r\n              {userType === \"PATIENT\" && <DisplayWorkers idOfPharmacy={-1} />}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default UnregistredAndPatientHomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst AddEditStockItemModal = (props) => {\r\n  const [singleSelection, setSingleSelection] = useState([]);\r\n  const [amount, setAmount] = useState(1);\r\n  const [options, setOptions] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicine() {\r\n      const response = await api.get(`/api/medicine/`).catch(() => { });\r\n      setOptions(!!response ? response.data : []);\r\n    }\r\n    fetchMedicine();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let data = {};\r\n    if (!singleSelection[0]) {\r\n      addToast(\"Medicine not selected\", { appearance: \"warning\" });\r\n      return;\r\n    }\r\n    data.medicineId = singleSelection[0].id;\r\n    data.medicineName = singleSelection[0].name;\r\n    data.amount = amount;\r\n    api.post(`/api/suppliers/stock/${getIdFromToken()}`, data).then(() => {\r\n      addToast(\"Medicine added successfully\", { appearance: \"success\" });\r\n      props.onSuccess();\r\n      props.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add medicine to stock\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Medicine</Form.Label>\r\n            <Typeahead\r\n              labelKey={(option) => `${option.code} -- ${option.name}`}\r\n              onChange={setSingleSelection}\r\n              options={options}\r\n              placeholder=\"Select a medicine...\"\r\n              selected={singleSelection}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Amount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setAmount(event.target.value)}\r\n              defaultValue={1}\r\n              min={1}\r\n              max={1000}\r\n              step={1}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={props.onHide}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEditStockItemModal;\r\n","import StockItem from \"./StockItem\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, ListGroup } from \"react-bootstrap\";\r\nimport AddEditStockItemModal from \"../stock/AddEditStockItemModal\";\r\n\r\nconst SupplierStock = () => {\r\n  const [stock, setStock] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [showAddEditModal, setShowAddEditModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchStock() {\r\n      const response = await api.get(\r\n        `/api/suppliers/stock/${getIdFromToken()}`\r\n      ).catch(() => { });\r\n      setStock(!!response ? response.data : []);\r\n    }\r\n    fetchStock();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  return (\r\n    <ListGroup style={{ margin: \"20px\" }}>\r\n      {stock &&\r\n        stock.map((stockItem) => {\r\n          return (\r\n            <ListGroup.Item\r\n              style={{ margin: \"10px\" }}\r\n              key={stockItem.medicineId}\r\n            >\r\n              {\" \"}\r\n              {`${stockItem.medicineName}  --  ${stockItem.amount}`}\r\n            </ListGroup.Item>\r\n          );\r\n        })}\r\n      <Button onClick={() => setShowAddEditModal(true)}>Add</Button>\r\n      <AddEditStockItemModal\r\n        show={showAddEditModal}\r\n        onHide={() => setShowAddEditModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default SupplierStock;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../../app/errorHandler\";\r\n\r\nconst AddEditOfferModal = (props) => {\r\n  const [totalPrice, setTotalPrice] = useState(\r\n    !props.offer ? 0 : props.offer.price\r\n  );\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    !props.offer ? Date.now() : new Date(props.offer.deliveryDate).getTime()\r\n  );\r\n  const { addToast } = useToasts();\r\n\r\n  const setDateTimestamp = (dateString) => {\r\n    setSelectedDate(new Date(dateString).getTime());\r\n  };\r\n\r\n  const handleClose = () => {};\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let data = {};\r\n    data.price = totalPrice;\r\n    data.deliveryDate = selectedDate;\r\n    data.offerState = props.offer ? props.offer.offerState : \"PENDING\";\r\n    data.orderId = props.order.id;\r\n    props.offer ? editOffer(data) : addOffer(data);\r\n  };\r\n\r\n  const addOffer = (data) => {\r\n    api\r\n      .post(`/api/suppliers/offers/${getIdFromToken()}`, data)\r\n      .then(() => {\r\n        props.onSuccess();\r\n        props.onHide();\r\n        addToast(\"Successfully added\", { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const editOffer = (data) => {\r\n    data.id = props.offer.id;\r\n    api\r\n      .put(`/api/suppliers/offers/${getIdFromToken()}`, data)\r\n      .then(() => {\r\n        addToast(\"Successfully updated\", { appearance: \"success\" });\r\n        props.onSuccess();\r\n        props.onHide();\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const convertDate = (timestamp) => {\r\n    let date = new Date(timestamp);\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    month = month < 10 ? \"0\" + month : month;\r\n    day = day < 10 ? \"0\" + day : day;\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  let itemsToRender;\r\n  if (!!props.order && !!props.order.orderItem) {\r\n    itemsToRender = props.order.orderItem.map((oi) => {\r\n      return (\r\n        <div key={oi.id}>\r\n          <p>{`${oi.medicine.code} -- ${oi.medicine.name} -- Amount: ${oi.amount}`}</p>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal {...props}>\r\n      <Modal.Header\r\n        className=\"justify-content-center\"\r\n        backdrop=\"static\"\r\n        onHide={handleClose}\r\n        closeButton\r\n      >\r\n        <p>{!props.offer ? \"Create offer\" : \"Edit offer\"} </p>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"justify-content-center\">\r\n        {itemsToRender}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Total price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(event) => setTotalPrice(event.target.value)}\r\n              defaultValue={!props.offer ? 0 : props.offer.price}\r\n              min={0}\r\n              step={1}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Due</Form.Label>\r\n\r\n            <Form.Control\r\n              type=\"date\"\r\n              onChange={(event) => setDateTimestamp(event.target.value)}\r\n              defaultValue={\r\n                !props.offer\r\n                  ? convertDate(Date.now())\r\n                  : convertDate(props.offer.deliveryDate)\r\n              }\r\n              min={convertDate(Date.now())}\r\n              max={!!props.order ? convertDate(props.order.deadline) : \"\"}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            className=\"float-center\"\r\n            variant=\"outline-secondary\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEditOfferModal;\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst OrderMedicineList = ({ orderItems }) => {\r\n    return (\r\n        <ListGroup style={{ marginBottom: '20px' }}>\r\n            {orderItems.map((oi) => {\r\n                return <ListGroup.Item>{`Code: ${oi.medicine.code} -- ${oi.medicine.name}   Amount ${oi.amount} pcs`}</ListGroup.Item>\r\n            })}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nOrderMedicineList.defaultProps = {\r\n    orderItems: []\r\n}\r\n\r\nexport default OrderMedicineList\r\n","import React, { useState } from 'react'\r\nimport { Button, Col, Container, FormGroup, FormLabel, Row } from 'react-bootstrap'\r\nimport AddEditOfferModal from '../offers/AddEditOfferModal'\r\nimport OrderMedicineList from './OrderMedicineList';\r\n\r\nconst OrderItem = ({ order, onSuccess }) => {\r\n    const [showAddOfferModal, setShowAddOfferModal] = useState(false);\r\n\r\n    return (\r\n        <Container className=\"border border-primary\" style={{ borderRadius: '10px', padding: '10px', marginTop: '10px', marginBottom: '10px', backgroundColor: 'white' }}>\r\n            <Row className=\"justify-content-between\">\r\n                <Col md={4}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Status: {order.orderState}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Deadline: {new Date(order.deadline).toLocaleDateString(\"sr-sp\")}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <OrderMedicineList orderItems={order.orderItem}></OrderMedicineList>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{ offset: 0, span: 2 }}>\r\n                    <Button onClick={() => { setShowAddOfferModal(true) }} style={{ width: '100%' }}>Create Offer</Button>\r\n                </Col>\r\n            </Row>\r\n            <AddEditOfferModal show={showAddOfferModal} order={order} onHide={() => setShowAddOfferModal(false)} onSuccess={() => { onSuccess() }}></AddEditOfferModal>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default OrderItem\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport AddEditOfferModal from \"../offers/AddEditOfferModal\";\r\n\r\nconst NewOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchOrders() {\r\n      const response = await api.get(\r\n        `/api/orders/without-offers/${getIdFromToken()}`\r\n      ).catch(() => { });\r\n      setOrders(!!response ? response.data : []);\r\n    }\r\n    fetchOrders();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMessage(\r\n      Array.isArray(orders) && orders.length ? \"\" : \"No orders to show\"\r\n    );\r\n  }, [orders]);\r\n\r\n  return (\r\n    <div>\r\n      {orders &&\r\n        orders.map((o) => {\r\n          return (\r\n            <OrderItem\r\n              key={o.id}\r\n              order={o}\r\n              onSuccess={() => reloadTable()}\r\n            ></OrderItem>\r\n          );\r\n        })}\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewOrders;\r\n","import {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AddEditOfferModal from \"../offers/AddEditOfferModal\";\r\nimport api from \"../../../app/api\";\r\n\r\nconst OfferItem = (props) => {\r\n  const [showEditOfferModal, setShowEditOfferModal] = useState(false);\r\n  const [order, setOrder] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchOrder() {\r\n      const res = await api.get(`/api/orders/${props.offer.orderId}`).catch(() => { });\r\n      setOrder(!!res ? res.data : {});\r\n    }\r\n    fetchOrder();\r\n  }, []);\r\n\r\n  const canEdit = () => {\r\n    return props.offer.offerState === \"PENDING\" && order.deadline > Date.now();\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"border border-primary\"\r\n      style={{\r\n        borderRadius: \"10px\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Row className=\"justify-content-between\">\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>State: {props.offer.offerState}</FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>Price: {props.offer.price}</FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>\r\n              Delivery Date:{\" \"}\r\n              {new Date(props.offer.deliveryDate).toLocaleDateString(\"sr-sp\")}\r\n            </FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <FormGroup>\r\n            <FormLabel>\r\n              Deadline:{\" \"}\r\n              {!!order\r\n                ? new Date(order.deadline).toLocaleDateString(\"sr-sp\")\r\n                : \"\"}\r\n            </FormLabel>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 0, span: 2 }}>\r\n          <Button\r\n            disabled={!canEdit()}\r\n            onClick={() => {\r\n              setShowEditOfferModal(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <AddEditOfferModal\r\n        show={showEditOfferModal}\r\n        order={order}\r\n        offer={props.offer}\r\n        onHide={() => setShowEditOfferModal(false)}\r\n        onSuccess={() => {\r\n          props.onSuccess();\r\n        }}\r\n      ></AddEditOfferModal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OfferItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport OfferItem from \"../offers/OfferItem\";\r\n\r\nconst SupplierOffers = () => {\r\n  const [offers, setOffers] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [currentOfferType, setCurrentOfferType] = useState(\"ACCEPTED\");\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    async function fetchOffers() {\r\n      const response = await api.get(\r\n        `/api/suppliers/offers/${id}/?type=${currentOfferType}`\r\n      ).catch(() => { });\r\n      setOffers(!!response ? response.data : []);\r\n    }\r\n    fetchOffers();\r\n  }, [reload, currentOfferType]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const updateCurrentOfferType = (event) => {\r\n    setCurrentOfferType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form.Group controlId=\"selectOffer\">\r\n        <Form.Label>Offer state</Form.Label>\r\n        <Form.Control as=\"select\" onChange={updateCurrentOfferType.bind(this)}>\r\n          <option value=\"ACCEPTED\">Accepted</option>\r\n          <option value=\"PENDING\">Pending</option>\r\n          <option value=\"DENIED\">Denied</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      {offers &&\r\n        offers.map((o) => {\r\n          return (\r\n            <OfferItem\r\n              key={o.id}\r\n              offer={o}\r\n              onSuccess={() => {\r\n                reloadTable();\r\n              }}\r\n            ></OfferItem>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupplierOffers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Nav, Row, Tab, TabPane } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport SetPasswordModal from \"../utilComponents/modals/SetPasswordModal\";\r\nimport SupplierStock from \"../supplier/stock/SupplierStock\";\r\nimport NewOrders from \"../supplier/orders/NewOrders\";\r\nimport SupplierOffers from \"./offers/SupplierOffers\";\r\n\r\nconst SupplierHomePage = () => {\r\n    const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let id = getIdFromToken();\r\n        api.get(\"/api/users/\" + id)\r\n            .then((res) => {\r\n                setShowModalPWChange(!res.data.passwordChanged)\r\n            }).catch(() => { })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"home__page\">\r\n                <Tab.Container unmountOnExit>\r\n                    <Row className=\"my-panel\">\r\n                        <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n                            <Nav variant=\"pills\" className=\"flex-column\">\r\n                                <Nav.Item>\r\n                                    <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                                        New orders\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                                        My offers\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                                        Stock\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Col>\r\n                        <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n                            <Tab.Content>\r\n                                <TabPane eventKey=\"first\">\r\n                                    <NewOrders></NewOrders>\r\n                                </TabPane>\r\n                                <TabPane eventKey=\"second\">\r\n                                    <SupplierOffers></SupplierOffers>\r\n                                </TabPane>\r\n                                <TabPane eventKey=\"third\">\r\n                                    <SupplierStock></SupplierStock>\r\n                                </TabPane>\r\n                            </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                </Tab.Container>\r\n            </main>\r\n            <SetPasswordModal show={showModalPWChange} onPasswordSet={() => setShowModalPWChange(false)}></SetPasswordModal>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SupplierHomePage;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport \"../../styling/home_page.css\";\r\nimport { Nav, Tab, Row, Col } from \"react-bootstrap\";\r\n\r\nimport DisplayHolidayRequests from \"../pharmacyAdmin/DisplayHolidayRequests\";\r\nimport SetPasswordModal from '../utilComponents/modals/SetPasswordModal'\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport api from \"../../app/api\";\r\nimport PharmaciesView from \"../unregisteredAndPatient/PharmaciesView\";\r\nimport MedicinesView from \"../unregisteredAndPatient/MedicinesView\";\r\n\r\nfunction AdminHomePage() {\r\n  const [showModalPWChange, setShowModalPWChange] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    api.get(\"/api/users/\" + id)\r\n      .then((res) => {\r\n        setShowModalPWChange(!res.data.passwordChanged)\r\n      }).catch(() => { })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <main className=\"home__page\">\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n          <Row className=\"my-panel\">\r\n            <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                    Pharmacies\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                    Medicines\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"fifth\">\r\n                    Holiday requests\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Col>\r\n            <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n              <Tab.Content>\r\n                <PharmaciesView />\r\n                <MedicinesView />\r\n                <DisplayHolidayRequests idOfPharmacy={-1} />\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </main>\r\n      <SetPasswordModal show={showModalPWChange} onPasswordSet={() => setShowModalPWChange(false)}></SetPasswordModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport PharmacyAdminHomePage from \"../pharmacyAdmin/PharmacyAdminHomePage\";\r\nimport PharmHomePage from \"../workers/pharmacist/home_page_pharmacist\";\r\nimport DermHomePage from \"../workers/dermatologist/home_page_dermatologist\";\r\nimport UnregistredAndPatientHomePage from \"../unregisteredAndPatient/UnregistredAndPatientHomePage\";\r\nimport SupplierHomePage from \"../supplier/SupplierHomePage\";\r\nimport AdminHomePage from \"./AdminHomePage\";\r\n\r\nconst HomePage = () => {\r\n  const user = useSelector((state) => state.user);\r\n  let userType = getUserTypeFromToken();\r\n  useEffect(() => {\r\n    userType = getUserTypeFromToken();\r\n  }, [user]);\r\n\r\n  let homePage;\r\n  switch (userType) {\r\n    case \"ADMIN\":\r\n      homePage = <AdminHomePage></AdminHomePage>;\r\n      break;\r\n    case \"PHARMACIST\":\r\n      homePage = <PharmHomePage></PharmHomePage>;\r\n      break;\r\n    case \"DERMATOLOGIST\":\r\n      homePage = <DermHomePage></DermHomePage>;\r\n      break;\r\n    case \"SUPPLIER\":\r\n      homePage = <SupplierHomePage></SupplierHomePage>;\r\n      break;\r\n    case \"PATIENT\":\r\n      homePage = (\r\n        <UnregistredAndPatientHomePage></UnregistredAndPatientHomePage>\r\n      );\r\n      break;\r\n    case \"PHARMACY_ADMIN\":\r\n      homePage = <PharmacyAdminHomePage></PharmacyAdminHomePage>;\r\n      break;\r\n    default:\r\n      homePage = (\r\n        <UnregistredAndPatientHomePage></UnregistredAndPatientHomePage>\r\n      );\r\n      break;\r\n  }\r\n  return <div>{homePage}</div>;\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst AllergyRow = ({ allergy, deleteClick }) => {\r\n  return (\r\n    <tr key={allergy.id}>\r\n      <td>{allergy.code}</td>\r\n      <td>{allergy.name}</td>\r\n      <td>{allergy.content}</td>\r\n      <td>\r\n        <Button variant=\"danger\" onClick={deleteClick}>\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AllergyRow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"./../../app/api\";\r\nimport { Table, Button, Modal } from \"react-bootstrap\";\r\nimport AllergyRow from \"./AllergyRow\";\r\nimport { Plus } from \"react-bootstrap-icons\";\r\nimport \"../../styling/allergies.css\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction Allergies() {\r\n  const [reload, setReload] = useState(false);\r\n  const [allergies, setAllergies] = useState([]);\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [selectedMedicine, setSelectedMedicine] = useState({});\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.get(\r\n        \"/api/patients/allergies/all/\" + getIdFromToken()\r\n      ).catch(() => { });\r\n      setAllergies(!!response ? response.data : []);\r\n      if (response.data == \"\") setAllergies(null);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.get(\"/api/medicine/\").catch(() => { });\r\n      setMedicines(!!response ? response.data : []);\r\n      if (response.data == \"\") setMedicines(null);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  const updateSelectedMedicine = (selectedMedicine) => {\r\n    setSelectedMedicine(selectedMedicine);\r\n  };\r\n\r\n  const deleteAllergy = (id) => {\r\n    api\r\n      .delete(\"/api/patients/allergies/\" + getIdFromToken() + \"/\" + id)\r\n      .then((res) => {\r\n        reloadTable();\r\n        addToast(res.data, { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const addAllergy = () => {\r\n    api\r\n      .post(\r\n        \"/api/patients/allergies/\" +\r\n        getIdFromToken() +\r\n        \"/\" +\r\n        selectedMedicine.id\r\n      )\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        reloadTable();\r\n        setShowAddModal(false);\r\n        setSelectedMedicine({});\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"my__allergy__header\">Allergies</h3>\r\n      <Table\r\n        striped\r\n        bordered\r\n        variant=\"light\"\r\n        size=\"lg\"\r\n        style={{ display: allergies != null ? \"block\" : \"none\" }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Code</th>\r\n            <th>Name</th>\r\n            <th>Content</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"my__table__body\">\r\n          {allergies &&\r\n            allergies.map((a) => (\r\n              <AllergyRow\r\n                key={a.id}\r\n                allergy={a}\r\n                deleteClick={() => deleteAllergy(a.id)}\r\n              ></AllergyRow>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n      <Button variant=\"primary\" onClick={() => setShowAddModal(true)}>\r\n        <Plus style={{ width: \"1.5em\", height: \"1.5em\" }} />\r\n        Add\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onHide={() => {\r\n          setShowAddModal(false);\r\n          setSelectedMedicine({});\r\n        }}\r\n        show={showAddModal}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Add new allergy\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            size=\"md\"\r\n            style={{ display: medicines != null ? \"block\" : \"none\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Code</th>\r\n                <th>Name</th>\r\n                <th>Content</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"my__table__body\">\r\n              {medicines &&\r\n                medicines.map((m) => (\r\n                  <tr\r\n                    onClick={() => updateSelectedMedicine(m)}\r\n                    key={m.id}\r\n                    className={\r\n                      selectedMedicine.id === m.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{m.name}</td>\r\n                    <td>{m.code}</td>\r\n                    <td>{m.content}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={addAllergy}\r\n            disabled={Object.keys(selectedMedicine).length === 0 ? true : false}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Allergies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"./../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nfunction PatientBenefits() {\r\n  const [points, setPoints] = useState(0);\r\n  const [category, setCategory] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      ).catch(() => { });\r\n      setPoints(!!request ? request.data : 0);\r\n\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, {});\r\n\r\n  useEffect(() => {\r\n    if (!!points) {\r\n      async function fetchCategory() {\r\n        const request = await api.get(\"/api/ranking-category/points/\" + points).catch(() => { });\r\n        setCategory(!!request ? request.data : {});\r\n\r\n        return request;\r\n      }\r\n      fetchCategory();\r\n    }\r\n  }, [points]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Benefits</h3>\r\n      <p style={{ textAlign: \"center\" }}>Achieved points: {points} </p>\r\n      <div style={{ display: category == \"\" ? \"none\" : \"block\" }}>\r\n        <p style={{ textAlign: \"center\" }}>Category: {category.name} </p>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Requied points: {category.pointsRequired}{\" \"}\r\n        </p>\r\n        <p style={{ textAlign: \"center\" }}>Discount: {category.discount}%</p>\r\n      </div>\r\n      <h5\r\n        style={{\r\n          display: category == \"\" ? \"block\" : \"none\",\r\n          fontWeight: \"bold\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        No category achieved\r\n      </h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientBenefits;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nfunction PatientPenalties() {\r\n  const [penalties, setPenalties] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchPenalties() {\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/penalties\"\r\n      ).catch(() => { });\r\n      setPenalties(!!request ? request.data : null);\r\n\r\n      return request;\r\n    }\r\n    fetchPenalties();\r\n  }, {});\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Penalties</h3>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Achieved points: {penalties} out of 3\r\n      </p>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Reservation functionality is disabled once you reach 3 penalties.\r\n      </p>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Every first day of the month the penalties are set to 0.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientPenalties;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row, Modal } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { Eye } from \"react-bootstrap-icons\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nconst BasicProfileInfo = (props) => {\r\n  const [user, setUser] = useState({});\r\n  const [showUser, setShowUser] = useState({});\r\n  const [passwordDTO, setPasswordDTO] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    repeatPassword: \"\",\r\n  });\r\n  const [isEdit, setEdit] = useState(false);\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  const [inputType, setInputType] = useState(\"password\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchUser() {\r\n      const request = await api.get(\"/api/users/\" + getIdFromToken()).catch(() => { });\r\n      setUser(!!request ? request.data : {});\r\n      setShowUser({\r\n        email: request.data?.email,\r\n        firstName: request.data?.firstName,\r\n        lastName: request.data?.lastName,\r\n        telephone: request.data?.telephone,\r\n        street: request.data?.address?.street,\r\n        city: request.data?.address?.city,\r\n        country: request.data?.address?.country,\r\n      });\r\n      return request;\r\n    }\r\n    fetchUser();\r\n  }, {});\r\n\r\n  const enableEdit = () => {\r\n    setEdit(!isEdit);\r\n  };\r\n\r\n  const cancelData = () => {\r\n    setEdit(!isEdit);\r\n    setShowUser({\r\n      email: user?.email,\r\n      firstName: user?.firstName,\r\n      lastName: user?.lastName,\r\n      telephone: user?.telephone,\r\n      street: user?.address?.street,\r\n      city: user?.address?.city,\r\n      country: user?.address?.country,\r\n    });\r\n  };\r\n\r\n  let handleClick = (event) => {\r\n    let key = event.target.name;\r\n    let value = event.target.value;\r\n    setShowUser({ ...showUser, [key]: value });\r\n  };\r\n\r\n  let handleClick2 = (event) => {\r\n    let key = event.target.name;\r\n    let value = event.target.value;\r\n    setPasswordDTO({ ...passwordDTO, [key]: value });\r\n  };\r\n\r\n  let handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setEdit(!isEdit);\r\n\r\n    if (\r\n      user.firstName === showUser.firstName &&\r\n      user.lastName === showUser.lastName &&\r\n      user.telephone === showUser.telephone &&\r\n      user.address.street === showUser.street &&\r\n      user.address.city === showUser.city &&\r\n      user.address.country === showUser.country\r\n    )\r\n      return;\r\n\r\n    user.firstName = showUser.firstName;\r\n    user.lastName = showUser.lastName;\r\n    user.telephone = showUser.telephone;\r\n    user.address.street = showUser.street;\r\n    user.address.city = showUser.city;\r\n    user.address.country = showUser.country;\r\n\r\n    api\r\n      .put(\"/api/users/\" + getIdFromToken(), user)\r\n      .then((res) => {\r\n        addToast(\"User changed successfully!\", { appearance: \"success\" });\r\n        setUser(res.data);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  const changePassword = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (passwordDTO.newPassword !== passwordDTO.repeatPassword) {\r\n      addToast(\"Passwords not matches!\", { appearance: \"warning\" });\r\n      return;\r\n    }\r\n\r\n    let forSend = { ...passwordDTO };\r\n    delete forSend.repeatPassword;\r\n    api\r\n      .put(\"/api/users/change-password/\" + getIdFromToken(), forSend)\r\n      .then(() => {\r\n        addToast(\"Successfully changed password!\", { appearance: \"success\" });\r\n        passwordDTO.oldPassword = \"\";\r\n        passwordDTO.newPassword = \"\";\r\n        passwordDTO.repeatPassword = \"\";\r\n        setShowPasswordModal(false);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Modal\r\n          show={showPasswordModal}\r\n          onHide={() => setShowPasswordModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Change password</Modal.Title>\r\n          </Modal.Header>\r\n          <Form onSubmit={changePassword}>\r\n            <Modal.Body>\r\n              <Form.Label>Old password</Form.Label>\r\n              <Form.Control\r\n                type={inputType}\r\n                name=\"oldPassword\"\r\n                required\r\n                value={passwordDTO.oldPassword}\r\n                onChange={handleClick2}\r\n                maxLength={30}\r\n              />\r\n\r\n              <Form.Label>New password</Form.Label>\r\n              <Form.Control\r\n                type={inputType}\r\n                name=\"newPassword\"\r\n                required\r\n                value={passwordDTO.newPassword}\r\n                onChange={handleClick2}\r\n                maxLength={30}\r\n              />\r\n\r\n              <Form.Label>Repeat password</Form.Label>\r\n              <Form.Control\r\n                type={inputType}\r\n                name=\"repeatPassword\"\r\n                required\r\n                value={passwordDTO.repeatPassword}\r\n                onChange={handleClick2}\r\n                maxLength={30}\r\n              />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  position: \"absolute\",\r\n                  left: \"30px\",\r\n                }}\r\n                onClick={() =>\r\n                  setInputType(inputType === \"text\" ? \"password\" : \"text\")\r\n                }\r\n              >\r\n                <Eye />\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => setShowPasswordModal(false)}\r\n              >\r\n                Close\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal>\r\n      </Row>\r\n      <Row className=\"justify-content-center m-3\">\r\n        <h4>{props.title}</h4>\r\n      </Row>\r\n      <Row className=\"justify-content-center m-3\">\r\n        <Col md={6}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control disabled type=\"email\" value={showUser.email} />\r\n\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              required\r\n              value={showUser.firstName}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              required\r\n              value={showUser.lastName}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Telephone</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"number\"\r\n              name=\"telephone\"\r\n              pattern=\"[0-9]{10}\"\r\n              required\r\n              value={showUser.telephone}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Street</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"street\"\r\n              required\r\n              value={showUser?.street}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"city\"\r\n              required\r\n              value={showUser?.city}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              disabled={!isEdit}\r\n              type=\"text\"\r\n              name=\"country\"\r\n              required\r\n              value={showUser?.country}\r\n              onChange={handleClick}\r\n            />\r\n\r\n            <Row style={{ marginTop: \"10px\", position: \"relative\" }}>\r\n              <Button\r\n                disabled={!isEdit}\r\n                variant=\"info\"\r\n                type=\"button\"\r\n                onClick={() => setShowPasswordModal(true)}\r\n                style={{ position: \"absolute\", right: \"0px\" }}\r\n              >\r\n                Change password\r\n              </Button>\r\n            </Row>\r\n\r\n            <Form.Group className=\"form__buttons mt-5\" controlId=\"buttons\">\r\n              <Button disabled={!isEdit} variant=\"secondary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                onClick={enableEdit}\r\n                disabled={isEdit}\r\n                variant=\"secondary\"\r\n                type=\"button\"\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                onClick={cancelData}\r\n                disabled={!isEdit}\r\n                variant=\"secondary\"\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BasicProfileInfo;\r\n","import React from \"react\";\r\nimport \"../../styling/profile.css\";\r\nimport Allergies from \"./Allergies\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport PatientBenefits from \"./PatientBenefits\";\r\nimport PatientPenalties from \"./PatientPenalties\";\r\nimport BasicProfileInfo from \"./BasicProfileInfo\";\r\n\r\nfunction UserInfo(props) {\r\n  return (\r\n    <Container>\r\n      <BasicProfileInfo title={props.title}></BasicProfileInfo>\r\n      <hr />\r\n      <Row className=\"justify-content-center m-3\">\r\n        <Allergies />\r\n      </Row>\r\n      <hr />\r\n      <PatientBenefits />\r\n      <hr />\r\n      <PatientPenalties />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport UserInfo from \"./UserInfoComponent\";\r\n\r\nimport \"../../styling/profile.css\";\r\n\r\nfunction UserProfile() {\r\n  return (\r\n    <main>\r\n      <UserInfo title=\"Patient's information\" col_width={6}></UserInfo>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport \"../styling/footer.css\";\r\nimport { Facebook, Instagram, Twitter } from \"react-bootstrap-icons\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"my__footer\">\r\n      <p>Copyright &#169; 2021</p>\r\n      <p>\r\n        Produced by: Dejan Todorovic, Aleksandar Buljevic, Darko Tica and Jovan\r\n        Simic\r\n        <Button className=\"my__footer__btn\">\r\n          <Facebook />\r\n        </Button>\r\n        <Button className=\"my__footer__btn\">\r\n          <Instagram />\r\n        </Button>\r\n        <Button className=\"my__footer__btn\">\r\n          <Twitter />\r\n        </Button>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken, getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport Map from \"ol/Map\";\r\nimport OSM from \"ol/source/OSM\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport { fromLonLat } from \"ol/proj\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\n\r\nfunction PharmacyBasic({ details }) {\r\n  const [isUserSubscribed, setIsUserSubscribed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkIfUserIsSubscribed();\r\n    document.getElementById(\"mapCol\").innerHTML = \"\";\r\n    return new Map({\r\n      target: \"mapCol\",\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM(),\r\n        }),\r\n      ],\r\n\r\n      view: new View({\r\n        center: fromLonLat([\r\n          details?.address?.location?.longitude,\r\n          details?.address?.location?.latitude,\r\n        ]),\r\n        zoom: 10,\r\n        minZoom: 5,\r\n        maxZoom: 12,\r\n      }),\r\n    });\r\n  }, [details]);\r\n\r\n  // CHECK nije moje\r\n  const subscribe = () => {\r\n    if (!!getIdFromToken()) {\r\n      if (isUserSubscribed) {\r\n        api\r\n          .post(`/api/pharmacy/${details.id}/unsubscribe/${getIdFromToken()}`)\r\n          .then(() => {\r\n            alert(\"Success\");\r\n            checkIfUserIsSubscribed();\r\n          })\r\n          .catch(() => {\r\n            alert(\"Error\");\r\n          });\r\n      } else {\r\n        api\r\n          .post(`/api/pharmacy/${details.id}/subscribe/${getIdFromToken()}`)\r\n          .then(() => {\r\n            alert(\"Success\");\r\n            checkIfUserIsSubscribed();\r\n          })\r\n          .catch(() => {\r\n            alert(\"Error\");\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  // CHECK nije moje\r\n  const checkIfUserIsSubscribed = () => {\r\n    if (!!getIdFromToken()) {\r\n      api\r\n        .get(`/api/pharmacy/${details.id}/subscribe/${getIdFromToken()}`)\r\n        .then((res) => {\r\n          setIsUserSubscribed(res.data);\r\n        }).catch(() => { });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"first\">\r\n      <Container fluid>\r\n        <Row className=\"row-content\">\r\n          <Col lg={6} md={6} sm={12} className=\"my-vertical-col center\">\r\n            <h1>{details?.name}</h1>\r\n            <div className=\"center\">\r\n              {details.avgGrade &&\r\n                [...Array(Math.ceil(details.avgGrade))].map(() => (\r\n                  <StarFill className=\"my__star\" />\r\n                ))}\r\n            </div>\r\n            <h5>- {details?.description} -</h5>\r\n            <h4>\r\n              {details?.address?.street}, {details?.address?.city},{\" \"}\r\n              {details?.address?.country}\r\n            </h4>\r\n            <Button\r\n              variant=\"primary\"\r\n              hidden={getUserTypeFromToken() !== \"PATIENT\"}\r\n              onClick={subscribe}\r\n            >\r\n              {isUserSubscribed ? \"Unsubscribe\" : \"Subscribe\"}\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={12} id=\"mapCol\" className=\"center\"></Col>\r\n        </Row>\r\n        <hr></hr>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default PharmacyBasic;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  Nav,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction MedicinesView({ priceListId, pharmacyId }) {\r\n  const { addToast } = useToasts();\r\n\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedMedicines, setShowedMedicines] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (priceListId != undefined) {\r\n      async function fetchPriceList() {\r\n        const request = await api\r\n          .get(`/api/pricelist/${priceListId}`)\r\n          .then((res) => {\r\n            setMedicines(res.data.medicineItems);\r\n          })\r\n          .catch((err) => {\r\n            addToast(getErrorMessage(err), {\r\n              appearance: \"error\",\r\n            });\r\n          });\r\n        return request;\r\n      }\r\n      fetchPriceList();\r\n    }\r\n  }, [priceListId]);\r\n\r\n  useEffect(() => {\r\n    if (medicines.length != 0) {\r\n      let maxNumber = Math.floor(medicines?.length / 12) - 1;\r\n      if (medicines?.length / 12 - 1 > maxNumber) {\r\n        maxNumber = maxNumber + 1;\r\n      }\r\n      setMaxPag(maxNumber);\r\n    }\r\n  }, [medicines]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = medicines?.length < first + 12 ? medicines?.length : first + 12;\r\n    setShowedMedicines(medicines?.slice(first, max));\r\n  }, [medicines, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"second\">\r\n      <Container fluid>\r\n        <Row>\r\n          {showedMedicines &&\r\n            showedMedicines.map((medicine, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Nav.Link\r\n                  as={Link}\r\n                  className=\"my__nav__link__card\"\r\n                  to={`/medicine/${medicine?.medicine?.id}/pharmacy/${pharmacyId}/price/${medicine?.price}`}\r\n                >\r\n                  <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                    <Card.Body>\r\n                      <Card.Title>{medicine?.medicine?.name}</Card.Title>\r\n                      <Card.Text>#{medicine?.medicine?.code}</Card.Text>\r\n                      <Card.Text>{medicine?.medicine?.content}</Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {medicine?.price}$\r\n                      </ListGroupItem>\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {medicines &&\r\n                          [\r\n                            ...Array(Math.ceil(medicine?.medicine?.avgGrade)),\r\n                          ].map(() => <StarFill className=\"my__star\" />)}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Nav.Link>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default MedicinesView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport api from \"./../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getIdFromToken, getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction AppointmentView({ pharmacyId }) {\r\n  const [reload, setReload] = useState(false);\r\n  const [appointsments, setAppointsments] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedAppointsments, setShowedAppointsments] = useState([]);\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [points, setPoints] = useState(0);\r\n  const [category, setCategory] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      if (getIdFromToken() == null) return;\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      ).catch(() => { });\r\n      setPoints(!!request ? request.data : 0);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      if (getIdFromToken() == null) return;\r\n      const request = await api.get(\"/api/ranking-category/points/\" + points).catch(() => { });\r\n      setCategory(!!request ? request.data : {});\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    if (pharmacyId != undefined) {\r\n      async function fetchAppointsments() {\r\n        const request = await api.get(\r\n          `/api/appointment/bypharmacyid/${pharmacyId}`\r\n        ).catch(() => { });\r\n        setAppointsments(!!request ? request.data : []);\r\n\r\n        return request;\r\n      }\r\n      fetchAppointsments();\r\n    }\r\n  }, [pharmacyId, reload]);\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(appointsments?.length / 12) - 1;\r\n    if (appointsments?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [appointsments, reload]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max =\r\n      appointsments.length < first + 12 ? appointsments?.length : first + 12;\r\n    setShowedAppointsments(appointsments?.slice(first, max));\r\n  }, [appointsments, pagNumber, reload]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  const reserveAppointment = (a) => {\r\n    api\r\n      .post(\"/api/appointment/reserve/\" + a.id + \"/patient/\" + getIdFromToken())\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err),\r\n          {\r\n            appearance: \"error\",\r\n          }\r\n        );\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sorter === \"none\") return;\r\n\r\n    let search_params = new URLSearchParams();\r\n\r\n    if (sorter === \"ascPrice\") {\r\n      search_params.append(\"sort\", \"price,asc\");\r\n    }\r\n    if (sorter === \"descPrice\") {\r\n      search_params.append(\"sort\", \"price,desc\");\r\n    }\r\n    if (sorter === \"ascGrade\") {\r\n      search_params.append(\"sort\", \"worker.avgGrade,asc\");\r\n    }\r\n    if (sorter === \"descGrade\") {\r\n      search_params.append(\"sort\", \"worker.avgGrade,desc\");\r\n    }\r\n\r\n    api\r\n      .get(`/api/appointment/bypharmacyid/${pharmacyId}/sort`, {\r\n        params: search_params,\r\n      })\r\n      .then((resp) => setAppointsments(resp.data))\r\n      .catch(setAppointsments([]));\r\n  };\r\n\r\n  const updateSorting = (event) => {\r\n    setSorter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"third\">\r\n      <Container fluid>\r\n        <Row\r\n          className=\"justify-content-center m-3\"\r\n          style={{ display: appointsments.length == 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <Form onSubmit={formSearch}>\r\n            <Form.Group as={Row} className=\"align-items-center\">\r\n              <Col>\r\n                <Form.Label>Choose sorter: </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sorter}\r\n                  onChange={updateSorting.bind(this)}\r\n                  name=\"sorter\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"ascPrice\">Price (ascending)</option>\r\n                  <option value=\"descPrice\">Price (descending)</option>\r\n                  <option value=\"ascGrade\">\r\n                    Dermatologist grade (ascending)\r\n                  </option>\r\n                  <option value=\"descGrade\">\r\n                    Dermatologist grade (descending)\r\n                  </option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col className=\"justify-content-center\">\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Sort{\" \"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setReload(!reload);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Reset{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          {showedAppointsments &&\r\n            showedAppointsments.map((appointsment, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                  <Card.Body>\r\n                    <Card.Title>{appointsment?.appointmentType}</Card.Title>\r\n                    <Card.Text>\r\n                      {moment(appointsment.startTime).format(\"DD MMM YYYY\")}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      {moment(appointsment.startTime).format(\"hh:mm a\")} -{\" \"}\r\n                      {moment(appointsment.endTime).format(\"hh:mm a\")}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem\r\n                      className=\"my__flex\"\r\n                      style={{\r\n                        display:\r\n                          category === \"\" || Object.keys(category).length === 0\r\n                            ? \"flex\"\r\n                            : \"none\",\r\n                      }}\r\n                    >\r\n                      {appointsment.price}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem\r\n                      className=\"my__flex\"\r\n                      style={{\r\n                        display:\r\n                          category !== \"\" && Object.keys(category).length !== 0\r\n                            ? \"flex\"\r\n                            : \"none\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textDecoration: \"line-through\" }}>\r\n                        {appointsment.price}\r\n                      </span>\r\n                      {\"   ->   \"}\r\n                      {(appointsment.price * (100 - category.discount)) / 100}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      {appointsment?.worker?.lastName}{\" \"}\r\n                      {appointsment?.worker?.firstName}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        onClick={() => reserveAppointment(appointsment)}\r\n                        style={{\r\n                          display:\r\n                            getUserTypeFromToken() === \"PATIENT\"\r\n                              ? \"block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        Reserve\r\n                      </Button>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row\r\n          className=\"my__row__pagination\"\r\n          style={{ display: appointsments.length == 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n        <h3\r\n          style={{\r\n            display: appointsments.length == 0 ? \"block\" : \"none\",\r\n            textAlign: \"center\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          There's no empty checkups!\r\n        </h3>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default AppointmentView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\n\r\nfunction WorkersView({ pharmacyId }) {\r\n  const [workers, setWorkers] = useState([]);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedWorkers, setShowedWorkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (pharmacyId != undefined) {\r\n      async function fetchWorkers() {\r\n        const request = await api.get(\r\n          `/api/workplace/bypharmacyid/${pharmacyId}`\r\n        ).catch(() => { });\r\n        setWorkers(!!request ? request.data : []);\r\n\r\n        return request;\r\n      }\r\n      fetchWorkers();\r\n    }\r\n  }, [pharmacyId]);\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(workers?.length / 12) - 1;\r\n    if (workers?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [workers]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = workers.length < first + 12 ? workers?.length : first + 12;\r\n    setShowedWorkers(workers?.slice(first, max));\r\n  }, [workers, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane eventKey=\"forth\">\r\n      <Container fluid>\r\n        <Row>\r\n          {showedWorkers &&\r\n            showedWorkers.map((worker, index) => (\r\n              <Col className=\"my__flex\" key={index} lg={3} md={6} sm={12}>\r\n                <Card className=\"my__card\" style={{ width: \"18rem\" }}>\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      {worker?.worker?.lastName} {worker?.worker?.firstName}\r\n                    </Card.Title>\r\n                    <Card.Text>{worker?.worker?.email}</Card.Text>\r\n                    <Card.Text>{worker?.worker?.telephone}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      {worker?.worker?.roleName}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"my__flex\">\r\n                      {worker &&\r\n                        [...Array(Math.ceil(worker?.worker?.avgGrade))].map(\r\n                          () => <StarFill className=\"my__star\" />\r\n                        )}\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row className=\"my__row__pagination\">\r\n          <Col className=\"my__flex\">\r\n            <Pagination size=\"lg\">\r\n              <Pagination.Prev\r\n                disabled={pagNumber === 0}\r\n                onClick={handleSlideLeft}\r\n              />\r\n              <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n              <Pagination.Next\r\n                disabled={pagNumber === maxPag}\r\n                onClick={handleSlideRight}\r\n              />\r\n            </Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n\r\nexport default WorkersView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst ERecipeSearchInPharmacy = ({ pharmacyId }) => {\r\n  const { addToast } = useToasts();\r\n  const [QRImage, setQRImage] = useState({});\r\n  const [parsedData, setParsedData] = useState({});\r\n\r\n  const handleFileChange = (e) => {\r\n    setQRImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"file\", QRImage);\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/e-recipes/upload-qr/${getIdFromToken()}`,\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        setParsedData(res.data);\r\n      })\r\n      .catch(() => {\r\n        addToast(\"Invalid QR code\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data = parsedData;\r\n    if (Object.keys(data) == 0) return;\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/pharmacy/e-recipe/${pharmacyId}`,\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        addToast(res.data, {\r\n          appearance: \"success\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        addToast(\"E-Recipe is not in the pharmacy!\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  }, [parsedData]);\r\n\r\n  return (\r\n    <div className=\"consultation__insight__content\">\r\n      <Container>\r\n        <Form\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <Container style={{ marginBottom: \"15px\" }}>\r\n            <Row>\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Form.File>\r\n                  <Form.File.Label>Upload QR Code</Form.File.Label>\r\n                  <Form.File.Input onChange={(e) => handleFileChange(e)} />\r\n                </Form.File>\r\n              </Col>\r\n\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERecipeSearchInPharmacy;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport api from \"../../app/api\";\r\n\r\nimport PharmacyBasic from \"./PharmacyBasic\";\r\nimport MedicinesAdminView from \"./MedicineAdminView\";\r\nimport AppointmentView from \"./AppointmentView\";\r\nimport WorkersView from \"./WorkersView\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport TabPane from \"react-bootstrap/TabPane\";\r\n\r\nimport \"../../styling/pharmacy.css\";\r\nimport \"../../styling/home_page.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport ERecipeSearchInPharmacy from \"./ERecipeSearchInPharmacy\";\r\n\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils.js\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction PharmacyProfile() {\r\n  const { addToast } = useToasts();\r\n\r\n  const [details, setPharmacyDetails] = useState({});\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacy() {\r\n      const request = await api\r\n        .get(`/api/pharmacy/${id}`)\r\n        .then((res) => {\r\n          setPharmacyDetails(res.data);\r\n        })\r\n        .catch((err) => {\r\n          addToast(getErrorMessage(err), {\r\n            appearance: \"error\",\r\n          });\r\n        });\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacy();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Basic informations\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                  Medicines\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"third\">\r\n                  Appointsments\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"forth\">\r\n                  Pharmacists and dermatologists\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              {getUserTypeFromToken() === \"PATIENT\" && (\r\n                <Nav.Item>\r\n                  <Nav.Link className=\"my__nav__link\" eventKey=\"fifth\">\r\n                    Check availability\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n            </Nav>\r\n          </Col>\r\n          <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n            <Tab.Content>\r\n              <PharmacyBasic details={details} />\r\n              <MedicinesAdminView\r\n                priceListId={details?.priceListId}\r\n                pharmacyId={details?.id} // isAdmin={true}\r\n              />\r\n              <AppointmentView pharmacyId={id} />\r\n              <WorkersView pharmacyId={id} />\r\n              <TabPane eventKey=\"fifth\">\r\n                <ERecipeSearchInPharmacy pharmacyId={id} />\r\n              </TabPane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacyProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { FileEarmarkText } from \"react-bootstrap-icons\"\r\n\r\nimport {\r\n  getIdFromToken,\r\n  getUserTypeFromToken,\r\n} from \"./../../app/jwtTokenUtils\";\r\n\r\nimport api from \"./../../app/api\";\r\n\r\nimport \"../../styling/medicineProfile.css\";\r\nimport \"../../styling/allergies.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction MedicineProfile() {\r\n  const [medicine, setMedicine] = useState({});\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [pickupDate, setPickupDate] = useState(null);\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  let { id, pid, priceid } = useParams();\r\n\r\n  const [points, setPoints] = useState(0);\r\n  const [category, setCategory] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      ).catch(() => { });\r\n      setPoints(!!request ? request.data : 0);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      const request = await api.get(\"/api/ranking-category/points/\" + points).catch(() => { });\r\n      setCategory(!!request ? request.data : {});\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicine() {\r\n      const request = await api.get(`/api/medicine/${id}`).catch(() => { });\r\n      setMedicine(!!request ? request.data : {});\r\n      return request;\r\n    }\r\n    fetchMedicine();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPharmacies() {\r\n      const request = await api.get(`/api/pharmacy/medicine/${id}`).catch(() => { });\r\n      setPharmacies(!!request ? request.data : []);\r\n      return request;\r\n    }\r\n    if (pid == -1) {\r\n      fetchPharmacies();\r\n    }\r\n  }, [id, pid]);\r\n\r\n  const updateSelectedPharmacy = (selectedPharmacy) => {\r\n    setSelectedPharmacy(selectedPharmacy);\r\n  };\r\n\r\n  const createReservation = () => {\r\n    if (pickupDate) {\r\n      if (pickupDate < new Date()) {\r\n        addToast(\"Choose date from the future!\", { appearance: \"warning\" });\r\n        return;\r\n      }\r\n    }\r\n\r\n    let forSend = {\r\n      pickupDate: pickupDate.getTime(),\r\n      medicineId: id,\r\n      pharmacyId: pid == -1 ? selectedPharmacy.id : pid,\r\n      userId: getIdFromToken(),\r\n      price: priceid == -1 ? selectedPharmacy.price : priceid,\r\n    };\r\n\r\n    api\r\n      .post(\"/api/medicine-reservation/\", forSend)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n\r\n    setSelectedPharmacy({});\r\n    setPickupDate(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"medicine__profile__container\">\r\n      <div className=\"medicine__content\">\r\n        <p className=\"my__medicine__header\">\r\n          <h2>{medicine.name}</h2>\r\n          <a href={`https://apotekaprojekat.herokuapp.com/api/medicine/${id}/get-pdf`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <h4><FileEarmarkText /></h4>\r\n          </a>\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Code: </span>\r\n          {medicine.code}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Content:</span>{\" \"}\r\n          {medicine.content}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Side effects:</span>{\" \"}\r\n          {medicine.sideEffects}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Daily intake: </span>\r\n          {medicine.dailyIntake}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Recipe:</span>{\" \"}\r\n          {medicine.recipeRequired === \"REQUIRED\" ? \"Required\" : \"Not required\"}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Additional notes: </span>\r\n          {medicine.additionalNotes}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Average grade: </span>{\" \"}\r\n          {medicine.avgGrade}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Points: </span>\r\n          {medicine.points}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Type: </span>\r\n          {medicine.medicineType}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Form: </span>\r\n          {medicine.medicineForm}\r\n        </p>\r\n        <p className=\"my__medicine__paragraph\">\r\n          <span className=\"my__start_paragraph\">Manufacturer: </span>\r\n          {medicine.manufacturer}\r\n        </p>\r\n        <div>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            style={{\r\n              display: pharmacies.length !== 0 || pid == -1 ? \"table\" : \"none\",\r\n            }}\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pharmacies &&\r\n                pharmacies.map((p) => (\r\n                  <tr\r\n                    key={p.id}\r\n                    onClick={() => updateSelectedPharmacy(p)}\r\n                    className={\r\n                      selectedPharmacy.id === p.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{p.name}</td>\r\n                    <td>{p.address}</td>\r\n                    <td>{p.price}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <div style={{ display: getUserTypeFromToken() === \"PATIENT\" ? \"block\" : \"none\" }}>\r\n            <p className=\"my__medicine__paragraph\">\r\n              <span className=\"my__start_paragraph\">Pickup deadline: </span>\r\n              <DatePicker\r\n                closeOnScroll={true}\r\n                selected={pickupDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setPickupDate(date)}\r\n                isClearable\r\n              />\r\n            </p>\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                display: category == \"\" ? \"none\" : \"block\",\r\n              }}\r\n            >\r\n              You have a discount of {category.discount}%\r\n            </p>\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"1.3rem\",\r\n                display:\r\n                  pid == -1 && Object.keys(selectedPharmacy).length != 0\r\n                    ? \"block\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              Total price:{\" \"}\r\n              <span style={{ textDecoration: \"line-through\" }}>\r\n                {selectedPharmacy.price}\r\n              </span>\r\n              {\"   ->   \"}\r\n              {(selectedPharmacy.price * (100 - category.discount)) / 100}\r\n            </p>\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"1.3rem\",\r\n                display: pid != -1 ? \"block\" : \"none\",\r\n              }}\r\n            >\r\n              Total price:{\" \"}\r\n              <span style={{ textDecoration: \"line-through\" }}>{priceid}</span>\r\n              {\"   ->   \"}\r\n              {(priceid * (100 - category.discount)) / 100}\r\n            </p>\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={createReservation}\r\n              disabled={\r\n                pickupDate == null ||\r\n                (Object.keys(selectedPharmacy).length === 0 && pid == -1)\r\n              }\r\n              style={{\r\n                marginBottom: \"25px\",\r\n              }}\r\n            >\r\n              Reserve\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default MedicineProfile;\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nfunction DeleteModal(props) {\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <p class=\"text-danger\">{props.bodyText ? props.bodyText : 'Delete this item?'}</p>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={props.onDelete}>Confirm</Button>\r\n                <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteModal\r\n","import { Feature, Map, View } from 'ol'\r\nimport Point from 'ol/geom/Point'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport { fromLonLat, transform } from 'ol/proj'\r\nimport OSM from 'ol/source/OSM'\r\nimport VectorSource from 'ol/source/Vector'\r\nimport Icon from 'ol/style/Icon'\r\nimport Style from 'ol/style/Style'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport api from '../../app/api'\r\n\r\nconst MapElement = ({ onChange, defAddress }) => {\r\n    const [map, setMap] = useState()\r\n    const [featuresLayer, setFeaturesLayer] = useState()\r\n    const [selectedCoord, setSelectedCoord] = useState(!!defAddress && !!defAddress.location ? [defAddress.location.longitude, defAddress.location.latitude] : [20.4820788, 44.7901252])\r\n    const [address, setAddress] = useState({})\r\n    const [location, setLocation] = useState({})\r\n\r\n    const mapElement = useRef()\r\n\r\n    const mapRef = useRef()\r\n    mapRef.current = map\r\n\r\n    useEffect(() => {\r\n        let locationPoint = new Feature({\r\n            type: 'icon',\r\n            geometry: new Point(fromLonLat(selectedCoord)),\r\n        });\r\n\r\n        let iconStyle = new Style({\r\n            image: new Icon(({\r\n                anchor: [0.5, 1],\r\n                src: \"http://cdn.mapmarker.io/api/v1/pin?text=P&size=30&hoffset=1\"\r\n            }))\r\n        });\r\n\r\n        locationPoint.setStyle(iconStyle)\r\n\r\n        let vectorSource = new VectorSource({\r\n            features: [locationPoint]\r\n        });\r\n\r\n        const initFeatureLayer = new VectorLayer({\r\n            source: vectorSource\r\n        })\r\n\r\n        const initMap = new Map({\r\n            target: mapElement.current,\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new OSM()\r\n                }),\r\n                initFeatureLayer\r\n            ],\r\n            view: new View({\r\n                center: fromLonLat(selectedCoord),\r\n                zoom: 16,\r\n                min: 4,\r\n                max: 20\r\n            }),\r\n        })\r\n\r\n        initMap.on('click', handleMapClick)\r\n        setFeaturesLayer(initFeatureLayer);\r\n        setMap(initMap);\r\n    }, [])\r\n\r\n    const handleMapClick = (event) => {\r\n\r\n        let newCoordinates = event.coordinate;\r\n        let transformed = transform(newCoordinates, \"EPSG:3857\", \"EPSG:4326\");\r\n\r\n        setSelectedCoord(transformed)\r\n        updateFields(transformed);\r\n        console.log(transformed)\r\n    }\r\n\r\n    const updateFields = (coords) => {\r\n        let url = \"https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=\" + coords[1] + \"&lon=\" + coords[0];\r\n        api\r\n            .get(url)\r\n            .then((response) => {\r\n                let jsonData = response.data;\r\n                parseJsonData(jsonData);\r\n            }).catch(() => { });\r\n    }\r\n\r\n    const parseJsonData = (data) => {\r\n        let addressData = data[\"address\"]\r\n\r\n        let l = {\r\n            \"longitude\": data && data[\"lon\"] ? data[\"lon\"] : \"\",\r\n            \"latitude\": data && data[\"lat\"] ? data[\"lat\"] : \"\",\r\n        };\r\n\r\n        let a = {\r\n            \"city\": addressData && !!addressData[\"city\"] ? addressData[\"city\"] : \"\",\r\n            \"street\": addressData && !!addressData[\"road\"] ? `${addressData[\"road\"]} ${!!addressData[\"house_number\"] ? addressData[\"house_number\"] : \"\"}` : \"\",\r\n            \"country\": addressData && !!addressData[\"country\"] ? addressData[\"country\"] : \"\",\r\n            \"location\": l\r\n        };\r\n\r\n        onChange(a)\r\n\r\n        setLocation(l)\r\n        setAddress(a)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!!selectedCoord && !!map) {\r\n\r\n            let locationPoint = new Feature({\r\n                type: 'icon',\r\n                geometry: new Point(fromLonLat(selectedCoord)),\r\n            });\r\n\r\n            let iconStyle = new Style({\r\n                image: new Icon(({\r\n                    anchor: [0.5, 1],\r\n                    src: \"http://cdn.mapmarker.io/api/v1/pin?text=P&size=30&hoffset=1\"\r\n                }))\r\n            });\r\n\r\n            locationPoint.setStyle(iconStyle)\r\n\r\n            let vectorSource = new VectorSource({\r\n                features: [locationPoint]\r\n            });\r\n\r\n            const newFeatureLayer = new VectorLayer({\r\n                source: vectorSource\r\n            })\r\n\r\n            map.removeLayer(featuresLayer);\r\n            map.addLayer(newFeatureLayer);\r\n            setFeaturesLayer(newFeatureLayer);\r\n        }\r\n\r\n    }, [selectedCoord])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row h-100 w-100 mt-4\">\r\n                <div className=\"col-lg-12\" style={{ height: '300px', width: '500px' }}>\r\n                    <div className=\"h-100 w-100\" id=\"pharmacyMap\" ref={mapElement}></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row w-100 mt-4\">\r\n                <div className=\"col-lg-6\">\r\n                    <label for=\"longPharmacy\">Longitude</label>\r\n                    <input className=\"form-control\" id=\"longPharmacy\" value={location.longitude} defaultValue={defAddress ? defAddress.location.longitude : \"\"} disabled />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <label for=\"latPharmacy\">Latitude</label>\r\n                    <input className=\"form-control\" id=\"latPharmacy\" value={location.latitude} defaultValue={defAddress ? defAddress.location.latitude : \"\"} disabled />\r\n                </div>\r\n            </div>\r\n            <div className=\"row w-100 mt-4\">\r\n                <div className=\"col-lg-4\">\r\n                    <label for=\"streetPharmacy\">Street</label>\r\n                    <input className=\"form-control\" id=\"streetPharmacy\" value={address.street} defaultValue={defAddress ? defAddress.street : \"\"} disabled />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <label for=\"cityPharmacy\">City</label>\r\n                    <input className=\"form-control\" id=\"cityPharmacy\" value={address.city} defaultValue={defAddress ? defAddress.city : \"\"} disabled />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <label for=\"countryPharmacy\">Country</label>\r\n                    <input className=\"form-control\" id=\"countryPharmacy\" value={address.country} defaultValue={defAddress ? defAddress.country : \"\"} disabled />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapElement\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport Map from '../utilComponents/MapElement'\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport api from '../../app/api'\r\nimport { Token, Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nfunction AddPharmacyModal(props) {\r\n\r\n    const [form, setForm] = useState({\r\n        pharmacyAdmin: {\r\n            id: -1,\r\n            name: ''\r\n        },\r\n        name: '',\r\n        description: '',\r\n        pointsForAppointment: 0,\r\n        address: {\r\n            city: '',\r\n            street: '',\r\n            country: '',\r\n            location: {\r\n                latitude: 0,\r\n                longitude: 0\r\n            }\r\n        }\r\n    })\r\n    const [address, setAddress] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [pharmacyAdmins, setPharmacyAdmins] = useState([]);\r\n    const [multiSelections, setMultiSelections] = useState([]);\r\n    const { addToast } = useToasts();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await api\r\n                .get('/api/users/?type=PHARMACY_ADMIN')\r\n                .then((res) => {\r\n                    setPharmacyAdmins(res.data);\r\n                }).catch(() => { });\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        const { name, description } = form\r\n        const newErrors = {}\r\n        // name errors\r\n        if (!name || name === '') newErrors.name = 'Name cannot be blank!'\r\n        else if (name.length > 40) newErrors.name = 'Name is too long!'\r\n        // Description errors\r\n        if (!description || description === '') newErrors.description = 'Description cannot be blank!'\r\n        else if (description.length > 300) newErrors.description = 'Description is too long!'\r\n\r\n        return newErrors\r\n    }\r\n\r\n    const validateAddress = () => {\r\n        const { city, street, country } = address;\r\n\r\n        // City errors\r\n        if (!city || city === '') return false;\r\n        // Street errors\r\n        if (!street || street === '') return false;\r\n        // Country errors\r\n        if (!country || country === '') return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    const validateAdmin = () => {\r\n        return (!!multiSelections || multiSelections.length === 0)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        const newErrors = validate()\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n        } else {\r\n            if (!validateAddress())\r\n                addToast(\"Please select valid address\", { appearance: 'warning' })\r\n            else if (!validateAdmin())\r\n                addToast(\"Please select pharmacy admins\", { appearance: 'warning' })\r\n            else\r\n                sendPostRequest()\r\n        }\r\n    }\r\n\r\n    const sendPostRequest = () => {\r\n        let data = convertForm();\r\n        api\r\n            .post('/api/pharmacy/', data)\r\n            .then(() => {\r\n                setForm({})\r\n                props.onSuccess()\r\n                props.onHide()\r\n                addToast(\"Pharmacy added successfully.\", { appearance: 'success' });\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: 'error' })\r\n            })\r\n    }\r\n\r\n    const convertForm = () => {\r\n        let data = {}\r\n        data.name = form.name;\r\n        data.description = form.description;\r\n        data.address = address\r\n        data.admins = multiSelections.map(pa => { return { 'id': pa.id, 'name': `${pa.firstName} ${pa.lastName}` } })\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" dialogClassName=\"modal-50w\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add new pharmacy\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            Admins\r\n                        </Form.Label>\r\n                        <Typeahead\r\n                            id=\"basic-typeahead-multiple-admins\"\r\n                            labelKey={(option) => `${option.firstName} ${option.lastName}`}\r\n                            multiple\r\n                            onChange={setMultiSelections}\r\n                            options={pharmacyAdmins}\r\n                            placeholder=\"Select admins...\"\r\n                            selected={multiSelections}\r\n                            renderToken={(option, { onRemove }, index) => (\r\n                                <Token\r\n                                    key={index}\r\n                                    onRemove={onRemove}\r\n                                    option={option}>\r\n                                    {`${option.firstName} ${option.lastName}`}\r\n                                </Token>\r\n                            )}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            isInvalid={!!errors.name}\r\n                            onChange={e => setField('name', e.target.value)}\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            {errors.name}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"pharmacyDescription\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            isInvalid={!!errors.description}\r\n                            onChange={e => setField('description', e.target.value)}\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            {errors.description}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Points for appointment</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            onChange={(event) => setField('pointsForAppointment', event.target.value)}\r\n                            defaultValue={0}\r\n                            min={0}\r\n                            max={10000}\r\n                            step={1}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Map onChange={(address) => setAddress(address)}></Map>\r\n\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddPharmacyModal;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport api from '../../app/api';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport Map from '../utilComponents/MapElement';\r\n\r\nfunction EditPharmacyModal(props) {\r\n\r\n    const [form, setForm] = useState({\r\n        name: props.pharmacy.name || '',\r\n        description: props.pharmacy.description || '',\r\n        pointsForAppointment: props.pharmacy.pointsForAppointment || '',\r\n        address: props.pharmacy.address\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [address, setAddress] = useState({});\r\n    const [pharmacyAdmins, setPharmacyAdmins] = useState([]);\r\n    const [selected, setSelected] = useState();\r\n    const { addToast } = useToasts();\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchData() {\r\n    //         await api\r\n    //             .get('http://localhost:8080/api/users/?type=PHARMACY_ADMIN')\r\n    //             .then((res) => {\r\n    //                 setPharmacyAdmins(res.data);\r\n    //             });\r\n    //     }\r\n    //     fetchData();\r\n    // }, [])\r\n\r\n    const showHandler = () => {\r\n        setForm({\r\n            ...form,\r\n            name: props.pharmacy.name || '',\r\n            description: props.pharmacy.description || '',\r\n            pointsForAppointment: props.pharmacy.pointsForAppointment || '',\r\n            address: props.pharmacy.address\r\n        })\r\n        setAddress(props.pharmacy.address)\r\n        setSelected([])\r\n    }\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n\r\n        if (!!errors[field]) setErrors({\r\n            ...errors,\r\n            [field]: null\r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        const { name, description } = form\r\n        const newErrors = {}\r\n        // name errors\r\n        if (!name || name === '') newErrors.name = 'Name cannot be blank!'\r\n        else if (name.length > 40) newErrors.name = 'Name is too long!'\r\n        // Description errors\r\n        if (!description || description === '') newErrors.description = 'Description cannot be blank!'\r\n        else if (description.length > 300) newErrors.description = 'Description is too long!'\r\n\r\n        return newErrors\r\n    }\r\n\r\n    const validateAddress = () => {\r\n        const { city, street, country } = address;\r\n\r\n        // City errors\r\n        if (!city || city === '') return false;\r\n        // Street errors\r\n        if (!street || street === '') return false;\r\n        // Country errors\r\n        if (!country || country === '') return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    const validateAdmin = () => {\r\n        return (!!selected)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        const newErrors = validate()\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors)\r\n        } else {\r\n            if (!validateAddress())\r\n                addToast(\"Please select valid address\", { appearance: 'warning' })\r\n            // else if (!validateAdmin())\r\n            //     addToast(\"Please select pharmacy admin\", { appearance: 'warning' })\r\n            else\r\n                sendPutRequest()\r\n        }\r\n    }\r\n\r\n    const sendPutRequest = () => {\r\n        let data = convertForm();\r\n        api\r\n            .put('/api/pharmacy/' + props.pharmacy.id, data)\r\n            .then(() => {\r\n                setForm({})\r\n                addToast(\"Pharmacy updated successfully.\", { appearance: 'success' });\r\n                props.onSuccess()\r\n                props.onHide()\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: 'error' })\r\n            })\r\n    }\r\n\r\n    const convertForm = () => {\r\n        let data = {}\r\n        data.id = props.pharmacy.id;\r\n        data.pharmacyAdmin = selected;\r\n        data.name = form.name;\r\n        data.description = form.description;\r\n        data.pointsForAppointment = form.pointsForAppointment;\r\n        data.address = address\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" dialogClassName=\"modal-50w\" centered onShow={showHandler}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Edit pharmacy\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            Pharmacy admin\r\n                        </Form.Label>\r\n                        <Form.Control as=\"select\" custom >\r\n                            {!!props.pharmacy.admins && props.pharmacy.admins.map((pa) => {\r\n                                return <option value={pa.id}>{pa.name}</option>\r\n                            })}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue={props.pharmacy.name}\r\n                            isInvalid={!!errors.name}\r\n                            onChange={e => setField('name', e.target.value)}\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            {errors.name}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"pharmacyDescription\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue={props.pharmacy.description}\r\n                            isInvalid={!!errors.description}\r\n                            onChange={e => setField('description', e.target.value)}\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>\r\n                            {errors.description}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Points for appointment</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            onChange={(event) => setField('pointsForAppointment', event.target.value)}\r\n                            defaultValue={props.pharmacy.pointsForAppointment}\r\n                            min={0}\r\n                            max={100.00}\r\n                            step={0.01}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Map onChange={(address) => setAddress(address)} defAddress={props.pharmacy.address}></Map>\r\n\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditPharmacyModal;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Row, Table } from 'react-bootstrap'\r\nimport DeleteModal from '../utilComponents/modals/DeleteModal';\r\nimport AddPharmacyModal from './AddPharmacyModal';\r\nimport EditPharmacyModal from './EditPharmacyModal';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport api from '../../app/api';\r\n\r\nfunction PharmacyTable(props) {\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.get(\"/api/pharmacy/crud\").catch(() => { });\r\n      setPharmacies(!!response ? response.data : []);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload)\r\n  };\r\n\r\n  const deletePharmacy = () => {\r\n    api\r\n      .delete(\"/api/pharmacy/\" + selected.id)\r\n      .then(() => {\r\n        reloadTable()\r\n        setShowDeleteModal(false)\r\n        addToast(\"Pharmacy deleted successfully.\", { appearance: 'success' });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: 'error' })\r\n      })\r\n  }\r\n\r\n  const updateSelected = (selectedPharmacy) => {\r\n    setSelected(selectedPharmacy);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\" }}>\r\n      <Row className=\"justify-content-md-between\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddModal(true)}\r\n        >\r\n          Add new pharmacy\r\n        </Button>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Descriptioin</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pharmacies.map((pharmacy) => (\r\n            <tr onClick={() => updateSelected(pharmacy)} key={pharmacy.id}>\r\n              <td>{pharmacy.name}</td>\r\n              <td>{pharmacy.description}</td>\r\n              <td>\r\n                <Button onClick={() => setShowEditModal(true)}>Edit</Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => setShowDeleteModal(true)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <AddPharmacyModal show={showAddModal} onHide={() => setShowAddModal(false)} onSuccess={reloadTable} />\r\n      <EditPharmacyModal show={showEditModal} pharmacy={selected} onHide={() => setShowEditModal(false)} onSuccess={reloadTable} />\r\n      <DeleteModal title={\"Remove \" + selected.name} show={showDeleteModal} onHide={() => setShowDeleteModal(false)} onDelete={deletePharmacy} />\r\n    </Container >\r\n  )\r\n}\r\n\r\nexport default PharmacyTable;\r\n","import React from 'react'\r\n\r\nconst PharmacySearchPanel = props => {\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PharmacySearchPanel\r\n","import React from 'react'\r\nimport PharmacyTable from './PharmacyTable'\r\nimport PharmacySearchPanel from './PharmacySearchPanel'\r\n\r\nconst PharmacyCrud = props => {\r\n    return (\r\n        <div>\r\n            <PharmacySearchPanel></PharmacySearchPanel>\r\n            <PharmacyTable> </PharmacyTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PharmacyCrud\r\n","import React from 'react'\r\n\r\nfunction MedicineSearchPanel() {\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicineSearchPanel","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FileEarmarkText } from \"react-bootstrap-icons\";\r\n\r\nconst MedicineRow = ({\r\n  medicine,\r\n  onClick,\r\n  editClick,\r\n  detailsClick,\r\n  deleteClick,\r\n}) => {\r\n  return (\r\n    <tr onClick={onClick} key={medicine.id}>\r\n      <td>{medicine.name}</td>\r\n      <td>{medicine.code}</td>\r\n      <td>{medicine.content}</td>\r\n      <td>\r\n        <span>\r\n          <Button onClick={editClick}>Edit</Button>\r\n          <Button variant=\"danger\" onClick={deleteClick}>\r\n            Delete\r\n          </Button>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={() =>\r\n              window.open(`https://apotekaprojekat.herokuapp.com/api/medicine/${medicine.id}/get-pdf`, \"_blank\")\r\n            }\r\n          >\r\n            {\" \"}\r\n            Details\r\n          </Button>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default MedicineRow;\r\n","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction MedicineNameFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Medicine Name *\"}\r\n            placeholder={\"Enter medicine name...\"}\r\n            minLength={1}\r\n            maxLength={50}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default MedicineNameFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction MedicineCodeFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Medicine Code *\"}\r\n            placeholder={\"Enter medicine code...\"}\r\n            minLength={1}\r\n            maxLength={30}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default MedicineCodeFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction MedicineContentFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Medicine Content *\"}\r\n            placeholder={\"Enter medicine content...\"}\r\n            minLength={1}\r\n            maxLength={200}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default MedicineContentFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction SideEffectsFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Side effects *\"}\r\n            placeholder={\"Enter side effects...\"}\r\n            minLength={1}\r\n            maxLength={250}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={true}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default SideEffectsFormGroup","import React from 'react'\r\nimport TextFormGroup from '../formGroups/TextFormGroup'\r\n\r\nfunction AdditionalNotesFormGroup(props) {\r\n\r\n    return (\r\n        <TextFormGroup\r\n            {...props}\r\n            name={\"Additional notes\"}\r\n            placeholder={\"Additional notes...\"}\r\n            minLength={0}\r\n            maxLength={250}\r\n            onChange={(event) => { props.onChange(event) }}\r\n            required={false}\r\n        ></TextFormGroup>\r\n    )\r\n}\r\n\r\nexport default AdditionalNotesFormGroup","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap'\r\nimport MedicineNameFormGroup from \"../utilComponents/medicineFormGroups/MedicineNameFromGroup\"\r\nimport MedicineCodeFormGroup from \"../utilComponents/medicineFormGroups/MedicineCodeFormGroup\"\r\nimport MedicineContentFormGroup from \"../utilComponents/medicineFormGroups/MedicineContentFormGroup\"\r\nimport SideEffectsFormGroup from \"../utilComponents/medicineFormGroups/SideEffectsFormGroup\"\r\nimport AdditionalNotesFormGroup from \"../utilComponents/medicineFormGroups/AdditionalNotesFormGroup\"\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler'\r\nimport { Token, Typeahead } from 'react-bootstrap-typeahead'\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\nimport api from '../../app/api'\r\nimport Validator from '../../app/validator'\r\n\r\nfunction AddMedicineModal(props) {\r\n    const [form, setForm] = useState({\r\n        // name: '',\r\n        // code: '',\r\n        // content: '',\r\n        // sideEffects: '',\r\n        // additionalNotes: '',\r\n        // recipeRequired: 'REQUIRED',\r\n        // medicineType: '',\r\n        // medicineForm: '',\r\n        // manufacturer: '',\r\n        // dailyIntake: 0,\r\n        // points: 0,\r\n        // manufacturer: '',\r\n        // substitutes: []\r\n    })\r\n    const [multiSelections, setMultiSelections] = useState([]);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTypes, setMedTypes] = useState([]);\r\n    const [manufacturers, setManufacturers] = useState([]);\r\n    const [medForms, setMedForms] = useState([]);\r\n    const { addToast } = useToasts();\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n    }\r\n\r\n    const validateForm = () => {\r\n        return Validator['medicineName'](form['name'])\r\n            && Validator['medicineCode'](form['code'])\r\n            && Validator['medicineContent'](form['content'])\r\n            && Validator['sideEffects'](form['sideEffects'])\r\n            && Validator['additionalNotes'](form['additionalNotes'], false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMedicine()\r\n    }, [])\r\n\r\n    function fetchMedicine() {\r\n        api.get(`/api/medicine/`)\r\n            .then((res) => {\r\n                setMedicines(res.data);\r\n            }).catch(() => { });\r\n    }\r\n\r\n    function fetchTypesAndForms() {\r\n        api.get(`/api/medicine-types/`)\r\n            .then((res) => {\r\n                setMedTypes(res.data)\r\n                setField('medicineTypeName', res.data[0].name || '');\r\n            }).catch(() => { });\r\n        api.get(`/api/medicine-forms/`)\r\n            .then((res) => {\r\n                setMedForms(res.data)\r\n                setField('medicineFormName', res.data[0].name || '');\r\n            }).catch(() => { });\r\n    }\r\n\r\n    function fetchManufacturers() {\r\n        api.get(`/api/manufacturers/`)\r\n            .then((res) => {\r\n                setManufacturers(res.data)\r\n                setField('manufacturer', res.data[0].name || '');\r\n            }).catch(() => { });\r\n    }\r\n\r\n\r\n    const showHandler = () => {\r\n        setForm({\r\n            ...form,\r\n            recipeRequired: 'REQUIRED',\r\n            dailyIntake: 0,\r\n            points: 0,\r\n            alternativeMedicine: []\r\n        })\r\n        fetchMedicine();\r\n        fetchTypesAndForms();\r\n        fetchManufacturers();\r\n        setMultiSelections([])\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (validateForm()) {\r\n            sendPostRequest()\r\n        }\r\n    }\r\n\r\n\r\n    const sendPostRequest = () => {\r\n        let data = {\r\n            ...form,\r\n            alternativeMedicine: multiSelections\r\n        }\r\n\r\n        if (!form['medicineTypeName'] || !form['medicineFormName'] || !form['manufacturerName'] || !form['recipeRequired']) {\r\n            addToast(\"Please fill required fields\", { appearance: 'error' })\r\n            return\r\n        }\r\n        api\r\n            .post('/api/medicine/', data)\r\n            .then(() => {\r\n                setForm({})\r\n                props.onSuccess()\r\n                props.onHide()\r\n                addToast(\"Medicine added successfully.\", { appearance: 'success' });\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: 'error' })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} centered onShow={showHandler}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    Add new medicine\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <MedicineNameFormGroup onChange={(event) => setField('name', event.target.value)} />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <MedicineCodeFormGroup onChange={(event) => setField('code', event.target.value)} />\r\n                        </Col>\r\n                    </Row>\r\n                    <MedicineContentFormGroup onChange={(event) => setField('content', event.target.value)} />\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Medicine Type *</Form.Label>\r\n                                <Form.Control as=\"select\" custom onChange={(event) => setField('medicineTypeName', event.target.value)} defaultValue={form['medicineTypeName']}>\r\n                                    <option value=\"\">Select...</option>\r\n                                    {medTypes.map((mt) => {\r\n                                        return <option value={mt.name}>{mt.name}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Medicine Form *</Form.Label>\r\n                                <Form.Control as=\"select\" custom onChange={(event) => setField('medicineFormName', event.target.value)} defaultValue={form['medicineFormName']}>\r\n                                    <option value=\"\">Select...</option>\r\n                                    {medForms.map((mf) => {\r\n                                        return <option value={mf.name}>{mf.name}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <SideEffectsFormGroup onChange={(event) => setField('sideEffects', event.target.value)} />\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"userTypeSelect\">\r\n                                <Form.Label>Recipe Required *</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={(event) => setField('recipeRequired', event.target.value)}>\r\n                                    <option value=\"\">Select...</option>\r\n                                    <option value=\"REQUIRED\">Required</option>\r\n                                    <option value=\"NOTREQUIRED\">Not required</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"userTypeSelect\">\r\n                                <Form.Label>Daily Intake</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    onChange={(event) => setField('dailyIntake', event.target.value)}\r\n                                    defaultValue={0}\r\n                                    step=\"0.1\"\r\n                                    min=\"0\"\r\n                                    max=\"10\">\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group>\r\n                                <Form.Label>Points</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    onChange={(event) => setField('points', event.target.value)}\r\n                                    defaultValue={0}\r\n                                    min={0}\r\n                                    max={10000}\r\n                                    step={1}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Manufacturer *</Form.Label>\r\n                        <Form.Control as=\"select\" custom onChange={(event) => setField('manufacturerName', event.target.value)} value={form['manufacturerName']}>\r\n                            <option value=\"\">Select....</option>\r\n                            {manufacturers.map((mt) => {\r\n                                return <option value={mt.name}>{mt.name}</option>\r\n                            })}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <AdditionalNotesFormGroup onChange={(event) => setField('additionalNotes', event.target.value)} />\r\n                    <Form.Group>\r\n                        <Form.Label>Medicine substitutes</Form.Label>\r\n                        <Typeahead\r\n                            id=\"basic-typeahead-multiple\"\r\n                            labelKey={(option) => `${option.code} -- ${option.name}`}\r\n                            multiple\r\n                            onChange={setMultiSelections}\r\n                            options={medicines}\r\n                            placeholder=\"Select substitutes...\"\r\n                            selected={multiSelections}\r\n                            renderToken={(option, { onRemove }, index) => (\r\n                                <Token\r\n                                    key={index}\r\n                                    onRemove={onRemove}\r\n                                    option={option}>\r\n                                    {`${option.name}`}\r\n                                </Token>\r\n                            )}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default AddMedicineModal;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\r\nimport MedicineNameFormGroup from \"../utilComponents/medicineFormGroups/MedicineNameFromGroup\"\r\nimport MedicineCodeFormGroup from \"../utilComponents/medicineFormGroups/MedicineCodeFormGroup\"\r\nimport MedicineContentFormGroup from \"../utilComponents/medicineFormGroups/MedicineContentFormGroup\"\r\nimport SideEffectsFormGroup from \"../utilComponents/medicineFormGroups/SideEffectsFormGroup\"\r\nimport AdditionalNotesFormGroup from \"../utilComponents/medicineFormGroups/AdditionalNotesFormGroup\"\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport Validator from '../../app/validator'\r\nimport api from '../../app/api'\r\nimport { Token, Typeahead } from 'react-bootstrap-typeahead'\r\n\r\nfunction EditMedicineModal(props) {\r\n    const [code, setCode] = useState();\r\n    const [name, setName] = useState();\r\n    const [content, setContent] = useState();\r\n    const [medicineTypeName, setMedicineTypeName] = useState();\r\n    const [medicineFormName, setMedicineFormName] = useState();\r\n    const [sideEffects, setSideEffects] = useState();\r\n    const [recipeRequired, setRecipeRequired] = useState();\r\n    const [dailyIntake, setDailyIntake] = useState();\r\n    const [points, setPoints] = useState();\r\n    const [manufacturerName, setManufacturerName] = useState();\r\n    const [additionalNotes, setAdditionalNotes] = useState();\r\n    const [alternativeMedicine, setAlternativeMedicine] = useState();\r\n\r\n    const [multiSelections, setMultiSelections] = useState([]);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTypes, setMedTypes] = useState([]);\r\n    const [medForms, setMedForms] = useState([]);\r\n    const [manufacturers, setManufacturers] = useState([]);\r\n    const { addToast } = useToasts();\r\n\r\n    useEffect(() => {\r\n        fetchMedicine();\r\n        fetchTypesAndForms();\r\n        fetchManufacturers();\r\n        setMultiSelections(props.medicine['substitutes'] || [])\r\n        setName(props.medicine.name)\r\n        setCode(props.medicine.code)\r\n        setContent(props.medicine.content)\r\n        setMedicineTypeName(props.medicine.medicineType ? props.medicine.medicineType.name : \"\")\r\n        setMedicineFormName(props.medicine.medicineForm ? props.medicine.medicineForm.name : \"\")\r\n        setSideEffects(props.medicine.sideEffects)\r\n        setRecipeRequired(props.medicine.recipeRequired)\r\n        setDailyIntake(props.medicine.dailyIntake)\r\n        setPoints(props.medicine.points)\r\n        setManufacturerName(props.medicine.manufacturer ? props.medicine.manufacturer.name : \"\")\r\n        setAdditionalNotes(props.medicine.additionalNotes)\r\n        setAlternativeMedicine(props.medicine.alternativeMedicine)\r\n    }, [props.medicine])\r\n\r\n    const validateForm = () => {\r\n        return Validator['medicineName'](name)\r\n            && Validator['medicineCode'](code)\r\n            && Validator['medicineContent'](content)\r\n            && Validator['sideEffects'](sideEffects)\r\n            && Validator['additionalNotes'](additionalNotes, false)\r\n    }\r\n\r\n    function fetchMedicine() {\r\n        api.get(`/api/medicine/`)\r\n            .then((res) => {\r\n                setMedicines(res.data);\r\n            }).catch(() => { });\r\n    }\r\n\r\n    function fetchTypesAndForms() {\r\n        api.get(`/api/medicine-types/`)\r\n            .then((res) => {\r\n                setMedTypes(res.data)\r\n            }).catch(() => { });\r\n        api.get(`/api/medicine-forms/`)\r\n            .then((res) => {\r\n                setMedForms(res.data)\r\n            }).catch(() => { });\r\n    }\r\n\r\n    function fetchManufacturers() {\r\n        api.get(`/api/manufacturers/`)\r\n            .then((res) => {\r\n                setManufacturers(res.data)\r\n            });\r\n    }\r\n\r\n    const showHandler = () => {\r\n        if (!props.pharmacy) return;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (validateForm()) {\r\n            sendPutRequest()\r\n        }\r\n    }\r\n\r\n    const sendPutRequest = () => {\r\n        let data = {\r\n            code: code,\r\n            name: name,\r\n            content: content,\r\n            medicineTypeName: medicineTypeName,\r\n            medicineFormName: medicineFormName,\r\n            sideEffects: sideEffects,\r\n            recipeRequired: recipeRequired,\r\n            dailyIntake: dailyIntake,\r\n            points: points,\r\n            manufacturerName: manufacturerName,\r\n            additionalNotes: additionalNotes,\r\n            alternativeMedicine: multiSelections\r\n        }\r\n        api\r\n            .put('/api/medicine/' + props.medicine.id, data)\r\n            .then(() => {\r\n                props.onSuccess()\r\n                props.onHide()\r\n                addToast(\"Medicine updated successfully.\", { appearance: 'success' });\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: 'error' })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered onShow={showHandler}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Edit {props.medicine.name}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <MedicineNameFormGroup\r\n                                onChange={(event) => setName(event.target.value)}\r\n                                defaultValue={!!props.medicine.name ? props.medicine.name : \"\"} value={name} />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <MedicineCodeFormGroup\r\n                                onChange={(event) => setCode(event.target.value)}\r\n                                defaultValue={!!props.medicine.code ? props.medicine.code : \"\"} value={code} />\r\n                        </Col>\r\n                    </Row>\r\n                    <MedicineContentFormGroup\r\n                        onChange={(event) => setContent(event.target.value)}\r\n                        defaultValue={!!props.medicine.content ? props.medicine.content : \"\"} />\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Medicine Type *</Form.Label>\r\n                                <Form.Control as=\"select\" custom onChange={(event) => setMedicineTypeName(event.target.value)} defaultValue={!!props.medicine && !!props.medicine.medicineType ? props.medicine.medicineType.name : \"\"} value={medicineTypeName}>\r\n                                    <option value=\"\">Select....</option>\r\n                                    {medTypes.map((mt) => {\r\n                                        return <option key={mt.id} value={mt.name}>{mt.name}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Medicine Form *</Form.Label>\r\n                                <Form.Control as=\"select\" custom onChange={(event) => setMedicineFormName(event.target.value)} defaultValue={!!props.medicine.medicineForm ? props.medicine.medicineForm.name : \"\"} value={medicineFormName}>\r\n                                    <option value=\"\">Select....</option>\r\n                                    {medForms.map((mf) => {\r\n                                        return <option key={mf.id} value={mf.name}>{mf.name}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <SideEffectsFormGroup\r\n                        onChange={(event) => setSideEffects(event.target.value)}\r\n                        defaultValue={!!props.medicine.sideEffects ? props.medicine.sideEffects : \"\"} value={sideEffects} />\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"userTypeSelect\">\r\n                                <Form.Label>Recipe Required</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    onChange={(event) => setRecipeRequired(event.target.value)}\r\n                                    defaultValue={props.medicine.recipeRequired}\r\n                                    value={recipeRequired}>\r\n\r\n                                    <option value=\"REQUIRED\">Required</option>\r\n                                    <option value=\"NOTREQUIRED\">Not required</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group controlId=\"userTypeSelect\">\r\n                                <Form.Label>Daily Intake</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    onChange={(event) => setDailyIntake(event.target.value)}\r\n                                    step=\"0.1\"\r\n                                    min=\"0\"\r\n                                    max=\"10\"\r\n                                    defaultValue={props.medicine.dailyIntake}\r\n                                    value={dailyIntake}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group>\r\n                                <Form.Label>Points</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    onChange={(event) => setPoints(event.target.value)}\r\n                                    defaultValue={props.medicine.points}\r\n                                    min={0}\r\n                                    max={10000}\r\n                                    step={1}\r\n                                    defaultValue={props.medicine.dailyIntake}\r\n                                    value={points}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Manufacturer *</Form.Label>\r\n                        <Form.Control as=\"select\" custom onChange={(event) => setManufacturerName(event.target.value)} defaultValue={!!props.medicine.manufacturer ? props.medicine.manufacturer : \"\"} value={manufacturerName}>\r\n                            <option value=\"\">Select....</option>\r\n                            {manufacturers.map((mt) => {\r\n                                return <option key={mt.id} value={mt.name}>{mt.name}</option>\r\n                            })}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <AdditionalNotesFormGroup\r\n                        onChange={(event) => setAdditionalNotes(event.target.value)}\r\n                        defaultValue={props.medicine.additionalNotes} />\r\n                    <Form.Group>\r\n                        <Form.Label>Substitutes: </Form.Label>\r\n                        {!!alternativeMedicine && alternativeMedicine.map((mt) => {\r\n                            return ` ${mt.name} `;\r\n                        })}\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medicine substitutes</Form.Label>\r\n                        <Typeahead\r\n                            id=\"basic-typeahead-multiple\"\r\n                            labelKey={(option) => `${option.code} -- ${option.name}`}\r\n                            multiple\r\n                            onChange={setMultiSelections}\r\n                            options={medicines}\r\n                            placeholder=\"Select substitutes...\"\r\n                            selected={multiSelections}\r\n                            renderToken={(option, { onRemove }, index) => (\r\n                                <Token\r\n                                    key={index}\r\n                                    onRemove={onRemove}\r\n                                    option={option}>\r\n                                    {`${option.name}`}\r\n                                </Token>\r\n                            )}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                </Form>\r\n            </Modal.Body >\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default EditMedicineModal;\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport api from '../../app/api';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst AddMedicineTypeModal = (props) => {\r\n    const [type, setType] = useState(\"\");\r\n    const { addToast } = useToasts();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        api.post(`/api/medicine-types/${type}`)\r\n            .then(() => {\r\n                addToast(\"Medicine type added successfully\", { appearance: \"success\" })\r\n                props.onHide()\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: \"error\" })\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add medicine type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Medicine type</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            onChange={(event) => setType(event.target.value)}\r\n                            required>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Confirm</Button>\r\n                    <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddMedicineTypeModal\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport api from '../../app/api';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst AddMedicineFormModal = (props) => {\r\n    const [form, setForm] = useState(\"\");\r\n    const { addToast } = useToasts();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        api.post(`/api/medicine-forms/${form}`)\r\n            .then(() => {\r\n                addToast(\"Medicine form added successfully\", { appearance: \"success\" })\r\n                props.onHide()\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: \"error\" })\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add medicine form\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Medicine form</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            onChange={(event) => setForm(event.target.value)}\r\n                            required>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Confirm</Button>\r\n                    <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddMedicineFormModal\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport api from '../../app/api';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst AddManufacturerModal = (props) => {\r\n    const [manufacturer, setManufacturer] = useState(\"\");\r\n    const { addToast } = useToasts();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        api.post(`/api/manufacturers/${manufacturer}`)\r\n            .then(() => {\r\n                addToast(\"Manufacturer added successfully\", { appearance: \"success\" })\r\n                props.onHide()\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: \"error\" })\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add medicine manufacturer\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Manufacturer</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            onChange={(event) => setManufacturer(event.target.value)}\r\n                            required>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Confirm</Button>\r\n                    <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManufacturerModal\r\n","import api from \"../../app/api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Row, Table } from \"react-bootstrap\";\r\nimport MedicineRow from \"./MedicineRow\";\r\nimport AddMedicineModal from \"./AddMedicineModal\";\r\nimport EditMedicineModal from \"./EditMedicineModal\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport AddMedicineTypeModal from \"./AddMedicineTypeModal\";\r\nimport AddMedicineFormModal from \"./AddMedicineFormModal\";\r\nimport AddManufacturerModal from \"./AddManufacturerModal\";\r\n\r\nfunction MedicineTable() {\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [medicine, setMedicine] = useState([]);\r\n\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showAddMedicineTypeModal, setShowAddMedicineTypeModal] = useState(false);\r\n  const [showAddMedicineFormModal, setShowAddMedicineFormModal] = useState(false);\r\n  const [showAddManufacturerModal, setShowAddManufacturerModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.get(\"/api/medicine/crud\").catch(() => { });\r\n      setMedicine(!!response ? response.data : []);\r\n    }\r\n    fetchData();\r\n  }, [reload]);\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const updateSelected = (selectedMedicine) => {\r\n    setSelected(selectedMedicine);\r\n  };\r\n\r\n  const deleteMedicine = () => {\r\n    api\r\n      .delete(\"/api/medicine/\" + selected.id)\r\n      .then(() => {\r\n        reloadTable();\r\n        setShowDeleteModal(false);\r\n        addToast(\"Medicine deleted successfully.\", { appearance: 'success' });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: 'error' })\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\" }} className=\"justify-content-center\">\r\n      <Row className=\"justify-content-md-between\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddModal(true)}\r\n        >\r\n          Add new medicine\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddMedicineTypeModal(true)}\r\n        >\r\n          Add new medicine type\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddMedicineFormModal(true)}\r\n        >\r\n          Add new medicine form\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ float: \"right\", margin: \"20px\" }}\r\n          onClick={() => setShowAddManufacturerModal(true)}\r\n        >\r\n          Add new medicine manufacturer\r\n        </Button>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Code</th>\r\n            <th>Ingredients</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {medicine.map((medi) => (\r\n            <MedicineRow\r\n              key={medi.id}\r\n              medicine={medi}\r\n              onClick={() => updateSelected(medi)}\r\n              editClick={() => setShowEditModal(true)}\r\n              deleteClick={() => setShowDeleteModal(true)}\r\n            ></MedicineRow>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <AddMedicineModal\r\n        show={showAddModal}\r\n        onHide={() => setShowAddModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n      <AddMedicineTypeModal\r\n        show={showAddMedicineTypeModal}\r\n        onHide={() => setShowAddMedicineTypeModal(false)}\r\n      />\r\n      <AddMedicineFormModal\r\n        show={showAddMedicineFormModal}\r\n        onHide={() => setShowAddMedicineFormModal(false)}\r\n      />\r\n      <AddManufacturerModal\r\n        show={showAddManufacturerModal}\r\n        onHide={() => setShowAddManufacturerModal(false)}\r\n      />\r\n      <DeleteModal\r\n        title={\"Remove \" + selected.name}\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        onDelete={deleteMedicine}\r\n      />\r\n      <EditMedicineModal\r\n        show={showEditModal}\r\n        medicine={selected}\r\n        onHide={() => setShowEditModal(false)}\r\n        onSuccess={reloadTable}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MedicineTable;\r\n","import React from 'react'\r\nimport MedicineSearchPanel from \"./MedicineSearchPanel\"\r\nimport MedicineTable from \"./MedicineTable\"\r\n\r\nconst MedicineCrud = () => {\r\n    return (\r\n        <div>\r\n            <MedicineSearchPanel> </MedicineSearchPanel>\r\n            <MedicineTable> </MedicineTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicineCrud\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport api from \"../../app/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentsModal(props) {\r\n  // id usera, id workera, bool farmaceut, name\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const showHandler = () => {\r\n    async function fetchAppointments() {\r\n      let bodyFormData = new FormData();\r\n      bodyFormData.append(\"patient\", props?.info.patient);\r\n      bodyFormData.append(\"worker\", props?.info.worker);\r\n      const request = api\r\n        .post(\"/api/appointment/byPatWorker\", bodyFormData)\r\n        .then((resp) => setAppointments(resp.data))\r\n        .catch(() => setAppointments([]));\r\n      return request;\r\n    }\r\n    fetchAppointments();\r\n  };\r\n\r\n  const onStart = (appt) => {\r\n    if (!(moment(Date.now()) > moment(appt.start).subtract(15, \"minutes\"))) {\r\n      // ne moze da se krene vise od 15 min ranije\r\n      addToast(\"You can't start this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", appt.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/start_appointment\", bodyFormData)\r\n      .then(() => {\r\n        history.push({\r\n          pathname: \"/worker/appointment_report\",\r\n          state: {\r\n            // location state\r\n            appointmentID: appt.id,\r\n          },\r\n        });\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't start this appointment yet!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  const onCancelAppointment = () => {\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"patient\", props?.info.patient);\r\n    bodyFormData.append(\"worker\", props?.info.worker);\r\n    api\r\n      .post(\"/api/appointment/byPatWorker\", bodyFormData)\r\n      .then((resp) => setAppointments(resp.data))\r\n      .catch(() => setAppointments([]));\r\n  };\r\n\r\n  const onCancel = (appt) => {\r\n    if (!(moment(Date.now()) > moment(appt.start).add(5, \"minutes\"))) {\r\n      // ne moze da se cancelluje pre 5 min od pocetka\r\n      addToast(\"You can't cancel this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"id\", appt.id);\r\n\r\n    api\r\n      .post(\"/api/appointment/cancel_appointment\", bodyFormData)\r\n      .then(() => {\r\n        addToast(\"Appointment cancelled! Patient didn't show up!\", {\r\n          appearance: \"info\",\r\n        });\r\n        onCancelAppointment();\r\n      })\r\n      .catch(() =>\r\n        addToast(\"You can't cancel this appointment yet!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n      onHide={() => {\r\n        props.onCloseModal();\r\n        setAppointments([]);\r\n      }}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Your upcomming appointments for {props.info.patientName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          {appointments.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>No result!</h3>\r\n            </Row>\r\n          )}\r\n\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center m-5 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid>\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        Date:{\" \"}\r\n                        <Moment format=\"DD/MM/yyyy HH:mm\">{value.start}</Moment>\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        {getUserTypeFromToken().trim() === \"DERMATOLOGIST\" && (\r\n                          <div>Pharmacy: {value.pharmacy} </div>\r\n                        )}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                      <ButtonGroup>\r\n                        <Button onClick={() => onStart(value)}>\r\n                          Start appointment\r\n                        </Button>\r\n                        <Button onClick={() => onCancel(value)}>\r\n                          Patient didn't show up\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Card.Footer>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppointmentsModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport AppointmentsModal from \"./appointments_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction SearchPatPage() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [patient, setPatient] = useState({}); //appointments of currently picked patient\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currFetchState, setCurrFetchState] = useState(\"Loading...\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPatients() {\r\n      await api\r\n        .get(\"/api/patients/all\")\r\n        .then((resp) => setPatients(resp.data))\r\n        .catch(() => setPatients([]));\r\n    }\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n    setCurrFetchState(\"Loading...\");\r\n    if (fName.length === 0 && lName.length === 0) {\r\n      api\r\n        .get(\"/api/patients/all\")\r\n        .then((resp) => {\r\n          setPatients(resp.data);\r\n          if (resp.data.length === 0) {\r\n            setCurrFetchState(\"No result!\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setPatients([]);\r\n          setCurrFetchState(\"No result!\");\r\n        });\r\n    } else {\r\n      api\r\n        .get(\"/api/patients/search\", {\r\n          params: { firstName: fName, lastName: lName },\r\n        })\r\n        .then((resp) => {\r\n          setPatients(resp.data);\r\n          if (resp.data.length === 0) {\r\n            setCurrFetchState(\"No result!\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setPatients([]);\r\n          setCurrFetchState(\"No result!\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    setCurrFetchState(\"Loading...\");\r\n    api\r\n      .get(\"/api/patients/all\")\r\n      .then((resp) => {\r\n        setPatients(resp.data);\r\n        if (resp.data.length === 0) {\r\n          setCurrFetchState(\"No result!\");\r\n        }\r\n      })\r\n      .catch(() => setPatients([]));\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n  };\r\n\r\n  const onShowAppointmentsButton = function (pat_to_show) {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      setPatients([]);\r\n      return;\r\n    }\r\n    setPatient({\r\n      patient: pat_to_show?.email,\r\n      worker: id,\r\n      patientName: pat_to_show?.firstName + \" \" + pat_to_show?.lastName,\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setPatient({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 pb-3 pl-3 pr-3 align-items-center\">\r\n        <h4 className=\"my_content_header\">Search for registered patients</h4>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center m-3\">\r\n        <Form onSubmit={formSearch}>\r\n          <Form.Group as={Row} className=\"align-items-center search_field\">\r\n            <Form.Label> First name: </Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={fName}\r\n                onChange={(e) => setFName(e.target.value)}\r\n                placeholder=\"Enter first name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Form.Label> Last name: </Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lName}\r\n                onChange={(e) => setLName(e.target.value)}\r\n                placeholder=\"Enter last name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <ButtonGroup size=\"sm\">\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Search{\" \"}\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={resetSearch}>\r\n                  {\" \"}\r\n                  Reset search{\" \"}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Row>\r\n      <Row className=\"justify-content-center mt-3 ml-3 mr-3 pb-3\">\r\n        <Col md={6}>\r\n          {patients.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>{currFetchState}</h3>\r\n            </Row>\r\n          )}\r\n\r\n          {patients.map((value, index) => {\r\n            console.log(value);\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center m-5 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {value.firstName + \" \" + value.lastName}{\" \"}\r\n                      </Card.Title>\r\n                      <Card.Footer className=\"justify-content-right\">\r\n                        <Row className=\"justify-content-center align-items-center\">\r\n                          <Button\r\n                            variant=\"secondary\"\r\n                            onClick={() => onShowAppointmentsButton(value)}\r\n                          >\r\n                            Upcomming appointments with{\" \"}\r\n                            {value.firstName + \" \" + value.lastName}\r\n                          </Button>\r\n                        </Row>\r\n                      </Card.Footer>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <AppointmentsModal\r\n        show={showModal}\r\n        info={patient}\r\n        onCloseModal={closeModal}\r\n      ></AppointmentsModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPatPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Modal,\r\n  ButtonGroup,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport AppointmentsModal from \"./appointments_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/worker.css\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction SearchExaminedPatPage() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [patient, setPatient] = useState({}); //appointments of currently picked patient\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const [sort1, setSort1] = useState(\"none\");\r\n  const [sort2, setSort2] = useState(\"none\");\r\n  const [sort3, setSort3] = useState(\"none\");\r\n  const [sortWay1, setSortWay1] = useState(\"asc\");\r\n  const [sortWay2, setSortWay2] = useState(\"asc\");\r\n  const [sortWay3, setSortWay3] = useState(\"asc\");\r\n\r\n  const [currUserType, setCurrUserType] = useState(\"PHARMACIST\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPatients() {\r\n      let id = getIdFromToken();\r\n      if (!id) {\r\n        addToast(\"Token error!\", { appearance: \"error\" });\r\n        setPatients([]);\r\n        return;\r\n      }\r\n      let user_type = getUserTypeFromToken().trim();\r\n      if (user_type !== \"DERMATOLOGIST\" && user_type !== \"PHARMACIST\") {\r\n        addToast(\"Invalid user type!\", { appearance: \"error\" });\r\n        return;\r\n      }\r\n      setCurrUserType(user_type);\r\n      const request = await api\r\n        .get(\"/api/patients/getAllExaminedPatients?workerID=\" + id)\r\n        .then((resp) => setPatients(resp.data))\r\n        .catch(setPatients([]));\r\n      return request;\r\n    }\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      setPatients([]);\r\n      return;\r\n    }\r\n    let search_params = new URLSearchParams();\r\n    if (fName.length != 0) {\r\n      search_params.append(\"firstName\", fName);\r\n    }\r\n    if (lName.length != 0) {\r\n      search_params.append(\"firstName\", lName);\r\n    }\r\n    if (startDate) {\r\n      search_params.append(\"lowerTime\", Math.floor(startDate.getTime()));\r\n    }\r\n    if (endDate) {\r\n      if (startDate) {\r\n        if (startDate.getTime() >= endDate.getTime()) {\r\n          addToast(\"Invalid date params!\", { appearance: \"error\" });\r\n          return;\r\n        }\r\n      }\r\n      search_params.append(\"upperTime\", Math.floor(endDate.getTime()));\r\n    }\r\n\r\n    if (sort1 !== \"none\" && (sort1 === sort2 || sort1 === sort3)) {\r\n      addToast(\"Invalid sort params!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (sort2 !== \"none\" && (sort2 === sort1 || sort2 == sort3)) {\r\n      addToast(\"Invalid sort params!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    console.log(sort1 + \" \" + sortWay1);\r\n\r\n    if (sort1 !== \"none\") {\r\n      search_params.append(\"sort\", sort1 + \",\" + sortWay1);\r\n    }\r\n\r\n    if (sort2 !== \"none\") {\r\n      search_params.append(\"sort\", sort2 + \",\" + sortWay2);\r\n    }\r\n\r\n    if (sort3 !== \"none\") {\r\n      search_params.append(\"sort\", sort3 + \",\" + sortWay3);\r\n    }\r\n    search_params.append(\"workerID\", id);\r\n\r\n    api\r\n      .get(\"/api/patients/getExaminedPatients\", { params: search_params })\r\n      .then((resp) => setPatients(resp.data))\r\n      .catch(setPatients([]));\r\n  };\r\n\r\n  const resetSearch = function () {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      setPatients([]);\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/patients/getAllExaminedPatients?workerID=\" + id)\r\n      .then((resp) => setPatients(resp.data))\r\n      .catch(() => setPatients([]));\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setSort1(\"none\");\r\n    setSortWay1(\"asc\");\r\n    setSort2(\"none\");\r\n    setSortWay2(\"asc\");\r\n    setSort3(\"none\");\r\n    setSortWay3(\"asc\");\r\n  };\r\n\r\n  return (\r\n    //todo mozda hide dugme\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"pt-5 justify-content-center\">\r\n        <h4 className=\"my_content_header\">Search examined patients</h4>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center align-items-center\">\r\n        <Form onSubmit={formSearch} className=\"search_field\">\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"justify-content-center mt-3 pl-3 pr-3 mb-3 align-items-center\"\r\n          >\r\n            <Col>\r\n              <Form.Label>First name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={fName}\r\n                onChange={(e) => setFName(e.target.value)}\r\n                placeholder=\"Enter first name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Label>Last name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lName}\r\n                onChange={(e) => setLName(e.target.value)}\r\n                placeholder=\"Enter last name...\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Label>Date from:</Form.Label>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={startDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setStartDate(date)}\r\n                isClearable\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Label>Date to:</Form.Label>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={endDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setEndDate(date)}\r\n                isClearable\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"justify-content-center mt-3 pl-3 pr-3 mb-3\"\r\n          >\r\n            <Col>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Sort by:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sort1}\r\n                  onChange={(event) => setSort1(event.target.value)}\r\n                  name=\"sort1\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"firstName\">first name</option>\r\n                  <option value=\"lastName\">last name</option>\r\n                  <option value=\"startTime\">date</option>\r\n                </Form.Control>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sortWay1}\r\n                  onChange={(event) => setSortWay1(event.target.value)}\r\n                  name=\"sortWay1\"\r\n                  selected=\"asc\"\r\n                >\r\n                  <option value=\"asc\">ascending</option>\r\n                  <option value=\"desc\">descending</option>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>then by:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sort2}\r\n                  onChange={(event) => setSort2(event.target.value)}\r\n                  name=\"sort1\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"firstName\">first name</option>\r\n                  <option value=\"lastName\">last name</option>\r\n                  <option value=\"startTime\">date</option>\r\n                </Form.Control>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sortWay2}\r\n                  onChange={(event) => setSortWay2(event.target.value)}\r\n                  name=\"sortWay2\"\r\n                  selected=\"asc\"\r\n                >\r\n                  <option value=\"asc\">ascending</option>\r\n                  <option value=\"desc\">descending</option>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>then by:</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sort3}\r\n                  onChange={(event) => setSort3(event.target.value)}\r\n                  name=\"sort1\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"firstName\">first name</option>\r\n                  <option value=\"lastName\">last name</option>\r\n                  <option value=\"startTime\">date</option>\r\n                </Form.Control>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sortWay3}\r\n                  onChange={(event) => setSortWay3(event.target.value)}\r\n                  name=\"sortWay2\"\r\n                  selected=\"asc\"\r\n                >\r\n                  <option value=\"asc\">ascending</option>\r\n                  <option value=\"desc\">descending</option>\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"justify-content-center mt-3 pl-3 pr-3 mb-3\"\r\n          >\r\n            <Col md=\"auto\">\r\n              <ButtonGroup>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Search{\" \"}\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={resetSearch}>\r\n                  {\" \"}\r\n                  Reset search{\" \"}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center mt-3 ml-3 mr-3 pb-3\">\r\n        <Col md={8}>\r\n          {patients.length === 0 && (\r\n            <Row className=\"justify-content-center m-3 align-items-center\">\r\n              <h3>No result!</h3>\r\n            </Row>\r\n          )}\r\n\r\n          {patients.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center m-5 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {value.firstName + \" \" + value.lastName}{\" \"}\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        {\"Last appointment: \" +\r\n                          moment(value.appointmentStart).format(\r\n                            \"DD MMM YYYY hh:mm a\"\r\n                          )}{\" \"}\r\n                      </Card.Text>\r\n                      {currUserType === \"DERMATOLOGIST\" && (\r\n                        <Card.Text>At pharmacy: {value.pharmacy} </Card.Text>\r\n                      )}\r\n                      {/*izmeni ovaj deo da kasnije bude da se prikazu svi sastanci*/}\r\n                      {/* <Button variant=\"secondary\" onClick={() => onShowAppointmentsButton(value)}> Upcomming appointments </Button> */}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <AppointmentsModal\r\n        show={showModal}\r\n        info={patient}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setPatient({});\r\n        }}\r\n      ></AppointmentsModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchExaminedPatPage;\r\n","import React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AdminHeader = ({ userChanged }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/users\">\r\n            Users\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/pharmacies\">\r\n            Pharmacies\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/medicine\">\r\n            Medicine\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/admin/complaint-responses\"\r\n          >\r\n            Complaints\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/admin/loyalty\">\r\n            Loyalty Program\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/infoProfile\">\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst UnregistredHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"my__navbar justify-content-between\"\r\n      sticky=\"top\"\r\n      expand=\"lg\"\r\n    >\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n      <Nav className=\"justify-content-end\">\r\n        <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/registration\">\r\n          Register\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/login\">\r\n          Log In\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default UnregistredHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport api from \"../../../app/api\";\r\nimport { getIdFromToken } from \"../../../app/jwtTokenUtils\";\r\n\r\nconst PatientHeader = () => {\r\n  const [penalties, setPenalties] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchPenalties() {\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/penalties\"\r\n      ).catch(() => { });;\r\n      setPenalties(!!request ? request.data : null);\r\n\r\n      return request;\r\n    }\r\n    fetchPenalties();\r\n  }, {});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/reserve-consultation/pharmacies\"\r\n          >\r\n            Reserve consultation\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/consultations-insight\"\r\n          >\r\n            Consultations\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/checkups-insight\">\r\n            Checkups\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/user/complaints\">\r\n            Complaints\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/subscribed-pharmacies\"\r\n          >\r\n            Subscribed pharmacies\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/reserved-medicines\"\r\n          >\r\n            Reserved medicines\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/rating\">\r\n            Rating\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{\r\n              display: penalties === 3 ? \"none\" : \"block\",\r\n              color: \"white\",\r\n            }}\r\n            to=\"/e-prescription\"\r\n          >\r\n            E-Prescription\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/profile\">\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PatientHeader;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst SupplierHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"my__navbar justify-content-between\"\r\n      sticky=\"top\"\r\n      expand=\"lg\"\r\n    >\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n      <Nav>\r\n        <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/infoProfile\">\r\n          Profile\r\n        </Nav.Link>\r\n        <Nav.Link\r\n          as={Link}\r\n          style={{ color: \"white\" }}\r\n          to=\"/\"\r\n          onClick={() => handleLogout()}\r\n        >\r\n          Log out\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default SupplierHeader;\r\n","import React from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst PharmacyAdminHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Nav>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/infoProfile\">\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PharmacyAdminHeader;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DermatologistHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/search-patients\"\r\n          >\r\n            Search patients\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/calendar\">\r\n            Work Calendar\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/examined\">\r\n            Examined patients\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/vacation\">\r\n            Vacation\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/dermatologist_profile\"\r\n          >\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default DermatologistHeader;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { House } from \"react-bootstrap-icons\";\r\nimport { logout } from \"../../../app/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst PharmacistHeader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"my__navbar\" sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        style={{ color: \"white\" }}\r\n        className=\"my__navbar__house\"\r\n        to=\"/\"\r\n      >\r\n        <House />\r\n        Home\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/search-patients\"\r\n          >\r\n            Search patients\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/issue_medicine\"\r\n          >\r\n            Issue medicine\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/calendar\">\r\n            Work Calendar\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/examined\">\r\n            Examined patients\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} style={{ color: \"white\" }} to=\"/worker/vacation\">\r\n            Vacation\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/worker/pharmacist_profile\"\r\n          >\r\n            Profile\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={Link}\r\n            style={{ color: \"white\" }}\r\n            to=\"/\"\r\n            onClick={() => handleLogout()}\r\n          >\r\n            Log out\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PharmacistHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminHeader from \"./AdminHeader\";\r\nimport UnregistredHeader from \"./UnregistredHeader\";\r\nimport PatientHeader from \"./PatientHeader\";\r\nimport SupplierHeader from \"./SupplierHeader\";\r\nimport PharmacyAdminHeader from \"./PharmacyAdminHeader\";\r\nimport DermatologistHeader from \"./DermatologistHeader\";\r\nimport PharmacistHeader from \"./PharmacistHeader\";\r\nimport { getUserTypeFromToken } from \"../../../app/jwtTokenUtils\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CommonHeader = () => {\r\n  const user = useSelector((state) => state.user);\r\n  let userType = getUserTypeFromToken();\r\n  useEffect(() => {\r\n    userType = getUserTypeFromToken();\r\n  }, [user]);\r\n\r\n  let header;\r\n  switch (userType) {\r\n    case \"ADMIN\":\r\n      header = <AdminHeader></AdminHeader>;\r\n      break;\r\n    case \"PHARMACIST\":\r\n      header = <PharmacistHeader></PharmacistHeader>;\r\n      break;\r\n    case \"DERMATOLOGIST\":\r\n      header = <DermatologistHeader></DermatologistHeader>;\r\n      break;\r\n    case \"SUPPLIER\":\r\n      header = <SupplierHeader></SupplierHeader>;\r\n      break;\r\n    case \"PATIENT\":\r\n      header = <PatientHeader></PatientHeader>;\r\n      break;\r\n    case \"PHARMACY_ADMIN\":\r\n      header = <PharmacyAdminHeader></PharmacyAdminHeader>;\r\n      break;\r\n    default:\r\n      header = <UnregistredHeader></UnregistredHeader>;\r\n      break;\r\n  }\r\n\r\n  return <div>{header}</div>;\r\n};\r\n\r\nexport default CommonHeader;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Container, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport moment from \"moment\";\r\n\r\nfunction AppointmentInfoModal(props) {\r\n  // prosledis appointment\r\n  const { addToast } = useToasts();\r\n  const [apptInfo, setApptInfo] = useState(null);\r\n\r\n  const showHandler = () => {\r\n    if (!props.appointment.id) return;\r\n\r\n    api\r\n      .get(\"/api/appointment/get_info/\" + props.appointment.id)\r\n      .then((resp) => {\r\n        setApptInfo(resp.data);\r\n      })\r\n      .catch(() =>\r\n        addToast(\"Error while fetching appointment info!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  };\r\n\r\n  const hideHandler = () => {\r\n    setApptInfo(null);\r\n    props.onHideFun();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n      onHide={hideHandler}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Appointment information\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      {apptInfo && (\r\n        <Modal.Body>\r\n          <Container>\r\n            <Col style={{ backgroundColor: \"#83CEC2\" }} className=\"p-2\">\r\n              <Row className=\"m-2\">-Patient: {apptInfo.patient}</Row>\r\n              <Row className=\"m-2\">-Pharmacy: {apptInfo.pharmacy}</Row>\r\n              <Row className=\"m-2\">-Price: {apptInfo.price}</Row>\r\n              <Row className=\"m-2\">\r\n                -Start time:{\" \"}\r\n                {moment(apptInfo.start).format(\"DD. MMM YYYY. HH:mm\")}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -End time: {moment(apptInfo.end).format(\"DD. MMM YYYY. HH:mm\")}\r\n              </Row>\r\n              <Row className=\"m-2\">-Info: {apptInfo.info}</Row>\r\n              {apptInfo.therapyDTOList.length > 0 && (\r\n                <div>\r\n                  <Row className=\"m-2\">-Therapy:</Row>\r\n                  {apptInfo.therapyDTOList.map((value, index) => {\r\n                    return (\r\n                      <Row className=\"ml-5 mt-1 mb-1\" key={index}>\r\n                        {value.code} - {value.medicineName} :{\" \"}\r\n                        {value.therapyLength} days\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Container>\r\n        </Modal.Body>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppointmentInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\r\nimport AppointmentStartModal from \"./appointment_start_modal\";\r\nimport AppointmentInfoModal from \"./appointment_info_modal\";\r\nimport moment from \"moment\";\r\nimport api from \"../../app/api\";\r\nimport \"../../styling/calendar.css\";\r\nimport tippy from \"tippy.js\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction WorkCalendar() {\r\n  const [eventi, setEventi] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalInfo, setShowModalInfo] = useState(false);\r\n  const [startAppt, setStartAppt] = useState({});\r\n  const [currUser, setCurrUser] = useState({});\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      let user_id = getIdFromToken();\r\n      let user_type = getUserTypeFromToken().trim();\r\n      console.log(user_type);\r\n      if (!user_id) {\r\n        addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n        setEventi([]);\r\n        return;\r\n      } else if (user_type !== \"DERMATOLOGIST\" && user_type !== \"PHARMACIST\") {\r\n        addToast(\"Invalid user type\", { appearance: \"error\" });\r\n        setEventi([]);\r\n        return;\r\n      }\r\n      setCurrUser({ id: user_id, type: user_type });\r\n      await api\r\n        .get(\"/api/workers/calendarAppointments/\" + user_id)\r\n        .then((resp) => {\r\n          let appts = resp.data;\r\n          api\r\n            .get(\"/api/vacation/getAcceptedVacationsFromWorker?id=\" + user_id)\r\n            .then((resp) => {\r\n              let reqVac = resp.data;\r\n              setEventi(appts.concat(reqVac));\r\n            })\r\n            .catch(() => {\r\n              setEventi(appts);\r\n              addToast(\"Error while getting vacations from server!\", {\r\n                appearance: \"error\",\r\n              });\r\n            });\r\n        })\r\n        .catch(() => {\r\n          setEventi([]);\r\n          addToast(\"Error while getting events!\", { appearance: \"error\" });\r\n        });\r\n    }\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const initiateAppt = (info) => {\r\n    if (info.event.extendedProps.calendarType !== \"appointment\") {\r\n      return;\r\n    }\r\n    if (info.event.extendedProps.appointmentState === \"FINISHED\") {\r\n      let appt = {}; //uga buga zbog id-a\r\n      for (var k in info.event.extendedProps) {\r\n        appt[k] = info.event.extendedProps[k];\r\n      }\r\n      appt.id = info.event.id;\r\n      setStartAppt(appt);\r\n      setShowModalInfo(true);\r\n      return;\r\n    }\r\n\r\n    if (info.event.extendedProps.appointmentState !== \"RESERVED\") {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !(\r\n        moment(Date.now()) >\r\n        moment(info.event.extendedProps.start).subtract(15, \"minutes\")\r\n      )\r\n    ) {\r\n      // nikako ga ne mozemo zapoceti vise od 15 minuta ranije\r\n      addToast(\"You can't initiate this appointment yet!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    let appt = {}; //uga buga zbog id-a\r\n    for (var k in info.event.extendedProps) {\r\n      appt[k] = info.event.extendedProps[k];\r\n    }\r\n    appt.id = info.event.id;\r\n    setStartAppt(appt);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCancelMethod = () => {\r\n    setShowModal(false);\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Invalid user!\", { appearance: \"error\" });\r\n      setEventi([]);\r\n      return;\r\n    }\r\n    //todo ovde probaj samo da promenis atribut bez opet gettovanja\r\n    api\r\n      .get(\"/api/workers/calendarAppointments/\" + id)\r\n      .then((resp) => {\r\n        let appts = resp.data;\r\n        api\r\n          .get(\"/api/vacation/getAcceptedVacationsFromWorker?id=\" + id)\r\n          .then((resp) => {\r\n            let reqVac = resp.data;\r\n            setEventi(appts.concat(reqVac));\r\n          })\r\n          .catch(() => setEventi(appts));\r\n      })\r\n      .catch(() => setEventi([]));\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container p-5\" style={{ minHeight: \"100vh\" }}>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, resourceTimelinePlugin]}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"WeekView,MonthView,YearView\",\r\n        }}\r\n        allDaySlot={false}\r\n        events={eventi}\r\n        initialView=\"MonthView\"\r\n        eventClick={initiateAppt}\r\n        views={{\r\n          WeekView: {\r\n            type: \"timeGrid\",\r\n            buttonText: \"Week View\",\r\n            duration: { weeks: 1 },\r\n            eventContent: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                return { html: \"<div>\" + propi.patient + \"</div>\" };\r\n              } else {\r\n                return { html: \"<div>\" + propi.absenceType + \"</div>\" };\r\n              }\r\n            },\r\n            eventDidMount: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                tippy(info.el, {\r\n                  allowHTML: true,\r\n                  content:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"HH:mm\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"HH:mm\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.patient +\r\n                    \"<br/>\" +\r\n                    (currUser.type === \"DERMATOLOGIST\"\r\n                      ? propi.pharmacy + \"<br/><i>\"\r\n                      : \"<i>\") +\r\n                    propi.appointmentState +\r\n                    \"</i></p></div>\",\r\n                });\r\n              } else {\r\n                info.event.setProp(\r\n                  \"backgroundColor\",\r\n                  \"rgba(20, 87, 97, 0.897)\"\r\n                );\r\n                tippy(info.el, {\r\n                  allowHTML: true,\r\n                  content:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"DD MMM\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"DD MMM\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.absenceType +\r\n                    \"</p></div>\",\r\n                });\r\n              }\r\n            },\r\n          },\r\n          MonthView: {\r\n            type: \"dayGrid\",\r\n            buttonText: \"Month View\",\r\n            duration: { months: 1 },\r\n            slotDuration: { days: 1 },\r\n            dayMaxEvents: 2,\r\n            eventContent: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                return {\r\n                  html:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"HH:mm\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"HH:mm\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.patient +\r\n                    \"<br/>\" +\r\n                    (currUser.type === \"DERMATOLOGIST\"\r\n                      ? propi.pharmacy + \"<br/><i>\"\r\n                      : \"<i>\") +\r\n                    propi.appointmentState +\r\n                    \"</i></p></div>\",\r\n                };\r\n              } else {\r\n                return {\r\n                  html:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"DD MMM\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"DD MMM\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.absenceType +\r\n                    \"</p></div>\",\r\n                };\r\n              }\r\n            },\r\n            eventDidMount: function (info) {\r\n              if (info.event.extendedProps.calendarType !== \"appointment\") {\r\n                info.event.setProp(\r\n                  \"backgroundColor\",\r\n                  \"rgba(20, 87, 97, 0.897)\"\r\n                );\r\n              }\r\n            },\r\n          },\r\n          YearView: {\r\n            type: \"timeline\",\r\n            buttonText: \"Year view\",\r\n            duration: { years: 1 },\r\n            slotDuration: { months: 1 },\r\n            visibleRange: {\r\n              start: moment().startOf(\"year\").toDate(),\r\n              end: moment().endOf(\"year\").toDate(),\r\n            },\r\n            eventContent: function (info) {\r\n              let propi = info.event.extendedProps;\r\n              if (propi.calendarType === \"appointment\") {\r\n                return {\r\n                  html:\r\n                    moment(info.event.start).format(\"DD/MM | HH:mm\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"HH:mm\") +\r\n                    \"<br/>\" +\r\n                    propi.patient +\r\n                    \"<br/>\" +\r\n                    (currUser.type === \"DERMATOLOGIST\"\r\n                      ? propi.pharmacy + \"<br/><i>\"\r\n                      : \"<i>\") +\r\n                    propi.appointmentState +\r\n                    \"</i>\",\r\n                };\r\n              } else {\r\n                return {\r\n                  html:\r\n                    \"<div><p>\" +\r\n                    moment(info.event.start).format(\"DD MMM\") +\r\n                    \"-\" +\r\n                    moment(info.event.end).format(\"DD MMM\") +\r\n                    \"</p>\" +\r\n                    \"<p>\" +\r\n                    propi.absenceType +\r\n                    \"</p></div>\",\r\n                };\r\n              }\r\n            },\r\n            eventDidMount: function (info) {\r\n              if (info.event.extendedProps.calendarType !== \"appointment\") {\r\n                info.event.setProp(\r\n                  \"backgroundColor\",\r\n                  \"rgba(20, 87, 97, 0.897)\"\r\n                );\r\n              }\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <AppointmentInfoModal\r\n        show={showModalInfo}\r\n        appointment={startAppt}\r\n        onHideFun={() => {\r\n          setShowModalInfo(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentInfoModal>\r\n      <AppointmentStartModal\r\n        show={showModal}\r\n        onCancelMethod={onCancelMethod}\r\n        appointment={startAppt}\r\n        onHide={() => {\r\n          setShowModal(false);\r\n          setStartAppt({});\r\n        }}\r\n      ></AppointmentStartModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkCalendar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nconst TherapyMedicineModal = (props) => {\r\n  const [singleSelection, setSingleSelection] = useState([]);\r\n  const [primaryOptions, setPrimaryOptions] = useState([]);\r\n  const [showHidePrimary, setShowHidePrimary] = useState(false);\r\n\r\n  const [alternativeSelection, setAlternativeSelection] = useState([]);\r\n  const [alternativeOptions, setAlternativeOptions] = useState([]);\r\n  const [showHideSecondary, setShowHideSecondary] = useState(false);\r\n\r\n  const [selectedMedicine, setSelectedMedicine] = useState(null);\r\n\r\n  const [alternativeError, setAlternativeError] = useState(false); //todo\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  const reset = () => {\r\n    setSingleSelection([]);\r\n    setPrimaryOptions([]);\r\n    setShowHidePrimary(false);\r\n    setAlternativeSelection([]);\r\n    setAlternativeOptions([]);\r\n    setShowHideSecondary(false);\r\n    setSelectedMedicine(null);\r\n    setAlternativeError(false);\r\n    setAmount(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchMedicine() {\r\n      if (!props.appt) {\r\n        return;\r\n      }\r\n      let pharm_id = props.appt.pharmacyID;\r\n      let pat_id = props.appt.patientID;\r\n      const response = await api\r\n        .get(\r\n          \"/api/pharmacy/getMedicineFromPharmWithoutAllergies?pharm_id=\" +\r\n            pharm_id +\r\n            \"&patient_id=\" +\r\n            pat_id\r\n        )\r\n        .catch(() => {\r\n          addToast(\"No medicine to add to therapy!\", { appearance: \"error\" });\r\n          exitModal();\r\n        });\r\n      if (response.data.length === 0) {\r\n        addToast(\"No medicine to add to therapy!\", { appearance: \"error\" });\r\n        exitModal();\r\n      }\r\n      setPrimaryOptions(response.data);\r\n    }\r\n    fetchMedicine();\r\n  }, [props.clickedShow]);\r\n\r\n  const setAlternatives = (med_item_id, med_id) => {\r\n    if (!props.appt) {\r\n      return;\r\n    }\r\n    let worker_id = getIdFromToken();\r\n    if (!worker_id) {\r\n      return;\r\n    }\r\n    let pharm_id = props.appt.pharmacyID;\r\n    let pat_id = props.appt.patientID;\r\n    api\r\n      .get(\r\n        \"/api/pharmacy/getAlternativeFromPharmacy?worker_id=\" +\r\n          worker_id +\r\n          \"&pharm_id=\" +\r\n          pharm_id +\r\n          \"&patient_id=\" +\r\n          pat_id +\r\n          \"&medicine_item_id=\" +\r\n          med_item_id +\r\n          \"&medicine_id=\" +\r\n          med_id\r\n      )\r\n      .then((resp) => {\r\n        if (resp.data.length == 0) {\r\n          setAlternativeError(true);\r\n        } else {\r\n          setAlternativeOptions(resp.data);\r\n        }\r\n      })\r\n      .catch(() => setAlternativeError(true));\r\n  };\r\n\r\n  const exitModal = () => {\r\n    reset();\r\n    props.onHideModal();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (alternativeError) {\r\n      return;\r\n    }\r\n    if (!selectedMedicine) {\r\n      addToast(\"No medicine is selected!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (!amount) {\r\n      addToast(\"Therapy length not defined!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (isNaN(amount)) {\r\n      addToast(\"Invalid therapy duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    let th = \"\" + amount;\r\n    let therapyLen = parseInt(th);\r\n    if (therapyLen <= 0) {\r\n      addToast(\"Invalid therapy duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    selectedMedicine.duration = therapyLen;\r\n    props.onAddMedicine(selectedMedicine);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      scrollable\r\n      onHide={exitModal}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add medicine for therapy\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Medicine</Form.Label>\r\n            <Typeahead\r\n              id=\"1\"\r\n              labelKey={(option) => `${option.code} -- ${option.name}`}\r\n              onChange={(data) => {\r\n                setAlternativeError(false);\r\n                setSingleSelection(data);\r\n                setAlternativeOptions([]);\r\n                setAlternativeSelection([]);\r\n                if (data.length > 0) {\r\n                  if (data[0].amount <= 0) {\r\n                    setAlternatives(data[0].medicineItemID, data[0].medicineID);\r\n                  } else {\r\n                    setSelectedMedicine(data[0]);\r\n                  }\r\n                } else {\r\n                  setSelectedMedicine(null);\r\n                }\r\n              }}\r\n              options={primaryOptions}\r\n              placeholder=\"Select a medicine...\"\r\n              selected={singleSelection}\r\n            />\r\n          </Form.Group>\r\n          <Row className=\"justify-content-center mb-4\">\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => setShowHidePrimary(!showHidePrimary)}\r\n            >\r\n              Show/Hide info\r\n            </Button>\r\n          </Row>\r\n\r\n          {singleSelection.length > 0 && showHidePrimary && (\r\n            <Col style={{ backgroundColor: \"#83CEC2\" }}>\r\n              <Row className=\"justify-content-center mt-3\">\r\n                Medicine information\r\n              </Row>\r\n              <Row className=\"m-2\">-Code: {singleSelection[0].code}</Row>\r\n              <Row className=\"m-2\">-Name: {singleSelection[0].name}</Row>\r\n              <Row className=\"m-2\">-Price: {singleSelection[0].price}</Row>\r\n              <Row className=\"m-2\">-Content: {singleSelection[0].content}</Row>\r\n              <Row className=\"m-2\">\r\n                -Side effects: {singleSelection[0].sideEffects}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Daily intake: {singleSelection[0].dailyIntake}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Additional notes: {singleSelection[0].additionalNotes}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Type: {singleSelection[0].medicineType}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Form: {singleSelection[0].medicineForm}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Manufacturer: {singleSelection[0].manufacturer}\r\n              </Row>\r\n            </Col>\r\n          )}\r\n\r\n          {singleSelection.length > 0 && singleSelection[0].amount <= 0 && (\r\n            <div>\r\n              {alternativeError ? (\r\n                <div style={{ color: \"red\" }}>\r\n                  Selected medicine '{singleSelection[0].name}' is currently not\r\n                  in stock and has no alternative medicine available. Please\r\n                  chose another.\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      Selected medicine '{singleSelection[0].name}' is currently\r\n                      not in stock. Please select an alternative medicine:\r\n                    </Form.Label>\r\n                    <Typeahead\r\n                      id=\"2\"\r\n                      labelKey={(option) => `${option.code} -- ${option.name}`}\r\n                      onChange={(data) => {\r\n                        setAlternativeSelection(data);\r\n                        if (data.length > 0) {\r\n                          setSelectedMedicine(data[0]);\r\n                        } else {\r\n                          setSelectedMedicine(null);\r\n                        }\r\n                      }}\r\n                      options={alternativeOptions}\r\n                      placeholder=\"Select a medicine...\"\r\n                      selected={alternativeSelection}\r\n                    />\r\n                  </Form.Group>\r\n                  <Row className=\"justify-content-center mb-4\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => setShowHideSecondary(!showHideSecondary)}\r\n                    >\r\n                      Show/Hide alternative info\r\n                    </Button>\r\n                  </Row>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {alternativeSelection.length > 0 && showHideSecondary && (\r\n            <Col style={{ backgroundColor: \"#83CEC2\" }}>\r\n              <Row className=\"justify-content-center mt-3\">\r\n                Alternative medicine information\r\n              </Row>\r\n              <Row className=\"m-2\">-Code: {alternativeSelection[0].code}</Row>\r\n              <Row className=\"m-2\">-Name: {alternativeSelection[0].name}</Row>\r\n              <Row className=\"m-2\">-Price: {alternativeSelection[0].price}</Row>\r\n              <Row className=\"m-2\">\r\n                -Content: {alternativeSelection[0].content}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Side effects: {alternativeSelection[0].sideEffects}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Daily intake: {alternativeSelection[0].dailyIntake}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Additional notes: {alternativeSelection[0].additionalNotes}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Type: {alternativeSelection[0].medicineType}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Form: {alternativeSelection[0].medicineForm}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                -Manufacturer: {alternativeSelection[0].manufacturer}\r\n              </Row>\r\n            </Col>\r\n          )}\r\n          <Row className=\"mb-2 mt-5 ml-2\">\r\n            Selected medicine:{\" \"}\r\n            {selectedMedicine ? selectedMedicine.name : \"- none selected -\"}\r\n          </Row>\r\n\r\n          <Form.Group as={Row} className=\"mb-4 ml-2\">\r\n            <Form.Label>Prescribed days of therapy: </Form.Label>\r\n            <Col md={3}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                value={amount}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Confirm\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={exitModal}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TherapyMedicineModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst ScheduleAnotherApp = (props) => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [workersWorktime, setWorkersWorktime] = useState(null);\r\n  const [showWorkTime, setShowWorkTime] = useState(false);\r\n  const [apptsOnSelectedDate, setApptsOnSelectedDate] = useState([]);\r\n\r\n  const [startHours, setStartHours] = useState(\"\");\r\n  const [startMinutes, setStartMinutes] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n\r\n    if (getUserTypeFromToken().trim() === \"PHARMACIST\") {\r\n      api\r\n        .post(\"/api/workers/getWorkTimeForReport\", bodyFormData)\r\n        .then((resp) => {\r\n          setWorkersWorktime(resp.data);\r\n        })\r\n        .catch(() =>\r\n          addToast(\"Couldn't get worktime!\", { appearance: \"error\" })\r\n        );\r\n    } else {\r\n      if (props.appt) {\r\n        bodyFormData.append(\"pharmacyID\", props.appt.pharmacyID);\r\n        api\r\n          .post(\"/api/workers/getWorkTimeForReportDerm\", bodyFormData)\r\n          .then((resp) => {\r\n            setWorkersWorktime(resp.data);\r\n          })\r\n          .catch(() =>\r\n            addToast(\"Couldn't get worktime!\", { appearance: \"error\" })\r\n          );\r\n      }\r\n    }\r\n  }, [props.appt]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedDate) {\r\n      setApptsOnSelectedDate([]);\r\n      return;\r\n    }\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"patientID\", props.appt.patientID);\r\n    bodyFormData.append(\"date\", moment(selectedDate).valueOf());\r\n\r\n    api\r\n      .post(\"/api/appointment/appointmentsOnThatDate\", bodyFormData)\r\n      .then((resp) => {\r\n        setApptsOnSelectedDate(resp.data);\r\n      })\r\n      .catch(() =>\r\n        addToast(\"Couldn't get appts on selected date!\", {\r\n          appearance: \"error\",\r\n        })\r\n      );\r\n  }, [selectedDate]);\r\n\r\n  const scheduleAndFinish = () => {\r\n    if (!selectedDate) {\r\n      addToast(\"Invalid date\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (isNaN(startHours)) {\r\n      addToast(\"Invalid start time!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (isNaN(startMinutes)) {\r\n      addToast(\"Invalid start time!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (isNaN(duration)) {\r\n      addToast(\"Invalid duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    let hours = parseInt(startHours);\r\n    let minutes = parseInt(startMinutes);\r\n    let durationI = parseInt(duration);\r\n    if (hours < 0 || hours > 24 || minutes < 0 || minutes > 60) {\r\n      addToast(\"Invalid start time!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    if (durationI < 0 || durationI > 180) {\r\n      addToast(\"Invalid duration!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    let totalMillisHourMin = hours * 60 * 60 * 1000 + minutes * 60 * 1000;\r\n\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"patientID\", props.appt.patientID);\r\n    bodyFormData.append(\"pharmacyID\", props.appt.pharmacyID);\r\n    bodyFormData.append(\r\n      \"date\",\r\n      moment(selectedDate).valueOf() + totalMillisHourMin\r\n    );\r\n    bodyFormData.append(\"duration\", durationI);\r\n    api\r\n      .post(\"/api/appointment/scheduleAppointment\", bodyFormData)\r\n      .then(() => {\r\n        addToast(\"Appointment scheduled!\", { appearance: \"success\" });\r\n        props.onSchedule();\r\n      })\r\n      .catch((resp) => {\r\n        addToast(resp.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      scrollable\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Schedule another appointment\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Row className=\"ml-3 mb-2\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Worker's schedule</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Button onClick={() => setShowWorkTime(!showWorkTime)}>\r\n              Show/hide\r\n            </Button>\r\n          </InputGroup>\r\n        </Row>\r\n        {showWorkTime && (\r\n          <div>\r\n            <Row className=\"ml-5 mb-2\">Holidays:</Row>\r\n            {(workersWorktime ? workersWorktime.holidays : []).map(\r\n              (value, index) => {\r\n                return (\r\n                  <Row className=\"ml-5 mb-2\" key={index + 100}>\r\n                    {index + 1}) On holiday from{\" \"}\r\n                    {moment(value.startTime).format(\"DD MMM YYYY\")} to{\" \"}\r\n                    {moment(value.endTime).format(\"DD MMM YYYY\")}\r\n                  </Row>\r\n                );\r\n              }\r\n            )}\r\n            <Row className=\"ml-5 mb-2\">Worktime:</Row>\r\n            {(workersWorktime ? workersWorktime.workDayList : []).map(\r\n              (value, index) => {\r\n                return (\r\n                  <Row className=\"ml-5 mb-2\" key={index}>\r\n                    {value.weekday}: {value.startTime} - {value.endTime}\r\n                  </Row>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n        )}\r\n        <Form>\r\n          <Form.Group as={Row} className=\"ml-3 mb-2 mt-4\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Date for appointment:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={selectedDate}\r\n                minDate={Date.now()}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setSelectedDate(date)}\r\n                isClearable\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        {apptsOnSelectedDate.length > 0 && (\r\n          <div>\r\n            <Row className=\"ml-5 mb-2\">Appointments on selected date:</Row>\r\n            {apptsOnSelectedDate.map((value, index) => {\r\n              return (\r\n                <Row className=\"ml-5 mb-2\" key={index + 100}>\r\n                  {index + 1}) From {moment(value.startTime).format(\"HH:mm\")} to{\" \"}\r\n                  {moment(value.endTime).format(\"HH:mm\")}\r\n                </Row>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        <Row className=\"ml-1 mt-4 mb-2\">\r\n          <Col md={8}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Start time:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"hours\"\r\n                value={startHours}\r\n                onChange={(e) => setStartHours(e.target.value)}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"minutes\"\r\n                value={startMinutes}\r\n                onChange={(e) => setStartMinutes(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"ml-1 mt-4 mb-2\">\r\n          <Col md={8}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Duration(min):</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={duration}\r\n                onChange={(e) => setDuration(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center m-3 align-items-center\">\r\n          <Button onClick={() => scheduleAndFinish()}>Schedule</Button>\r\n        </Row>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ScheduleAnotherApp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TherapyMedicineModal from \"./appointment_report_therapy_modal\";\r\nimport ScheduleAnotherApp from \"./appointment_report_schedule_modal\";\r\nimport api from \"../../app/api\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction AppointmentReport() {\r\n  const [selectedMedicine, setSelectedMedicine] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showScheduleAnother, setShowScheduleAnother] = useState(false);\r\n  const [showClicked, setShowClicked] = useState(false);\r\n  const [currAppt, setCurrAppt] = useState(null);\r\n  const [apptInfo, setApptInfo] = useState(\"\");\r\n  const [apptType, setApptType] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    if (getUserTypeFromToken().trim() === \"DERMATOLOGIST\") {\r\n      setApptType(\"checkup\");\r\n    } else if (getUserTypeFromToken().trim() === \"PHARMACIST\") {\r\n      setApptType(\"consultation\");\r\n    } else {\r\n      setApptType(\"appointment\");\r\n    }\r\n    let bodyFormData = new FormData();\r\n    if (!location.state.appointmentID) {\r\n      addToast(\"No appointment id! Couldn't start appointment!\", {\r\n        appearance: \"error\",\r\n      });\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    let appt_id = location.state.appointmentID;\r\n    bodyFormData.append(\"id\", appt_id);\r\n\r\n    api\r\n      .post(\"/api/appointment/getApptForReport\", bodyFormData)\r\n      .then((resp) => {\r\n        setCurrAppt(resp.data);\r\n      })\r\n      .catch(() => {\r\n        addToast(\"Couldn't get ids!\", { appearance: \"error\" });\r\n        history.push(\"/\");\r\n      }); //todo sta koji djavo ovo znaci\r\n  }, []);\r\n\r\n  const onAdd = (medItem) => {\r\n    for (let i = 0; i < selectedMedicine.length; i++) {\r\n      if (selectedMedicine[i].medicineID === medItem.medicineID) {\r\n        addToast(\"That medicine is already added to therapy!\", {\r\n          appearance: \"error\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    selectedMedicine.push(medItem);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const finishAppt = () => {\r\n    let appointment_id = currAppt.id;\r\n    api\r\n      .post(\"/api/appointment/finalizeAppointment\", {\r\n        apptId: appointment_id,\r\n        medicineList: selectedMedicine,\r\n        info: apptInfo,\r\n      })\r\n      .then(() => {\r\n        addToast(\"Appointment finished!\", { appearance: \"success\" });\r\n        setShowScheduleAnother(false);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((resp) => {\r\n        setSelectedMedicine([]);\r\n        addToast(resp.response.data, { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ backgroundColor: \"#395E82\" }}>\r\n        <Row className=\"justify-content-center pt-5 mb-2 align-items-center\">\r\n          <h2 style={{ color: \"#83CEC2\" }}>\r\n            Appointment report for: {currAppt?.patient}\r\n          </h2>\r\n        </Row>\r\n        <Row className=\"justify-content-center mb-5 align-items-center\">\r\n          <h3 style={{ color: \"#83CEC2\" }}>{currAppt?.pharmacy}</h3>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center pb-3  align-items-center\">\r\n          <Col md={8}>\r\n            <Row\r\n              className=\"justify-content-center align-items-center pt-3 rounded\"\r\n              style={{ backgroundColor: \"#83CEC2\" }}\r\n            >\r\n              <Col>\r\n                <p className=\"text-center\">\r\n                  Date: {moment(currAppt?.start).format(\"DD MMM YYYY\")}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p className=\"text-center\">\r\n                  Time:\r\n                  {moment(currAppt?.start).format(\"HH:mm a\")}-\r\n                  {moment(currAppt?.end).format(\"HH:mm a\")}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p className=\"text-center\">Price: {currAppt?.price}</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center mb-5 align-items-center\">\r\n          <Col md={8}>\r\n            <Form>\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"justify-content-center align-items-center  mt-3\"\r\n              >\r\n                <Form.Label>\r\n                  <h4 style={{ color: \"#83CEC2\" }}>\r\n                    Input information about the {apptType}\r\n                  </h4>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"8\"\r\n                  name=\"address\"\r\n                  value={apptInfo}\r\n                  onChange={(e) => setApptInfo(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center pb-5 align-items-center\">\r\n          <Col md={8}>\r\n            <Row className=\"justify-content-center align-items-center\">\r\n              <div style={{ color: \"white\" }}>Therapy medicine</div>\r\n              <Button\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  setShowModal(true);\r\n                  setShowClicked(!showClicked);\r\n                }}\r\n              >\r\n                Add new\r\n              </Button>\r\n            </Row>\r\n            {(selectedMedicine ? selectedMedicine : []).map((value, index) => {\r\n              return (\r\n                <Row\r\n                  className=\"justify-content-center align-items-center mt-3 ml=5\"\r\n                  key={value.code}\r\n                >\r\n                  <div style={{ color: \"white\" }}>\r\n                    Medicine: {value.code} - {value.name}. Duration of\r\n                    therapy(in days): {value.duration}\r\n                  </div>\r\n                  <Button\r\n                    onClick={() => {\r\n                      let newArray = [];\r\n                      for (let i = 0; i < selectedMedicine.length; i++) {\r\n                        if (i != index) newArray.push(selectedMedicine[i]);\r\n                      }\r\n                      setSelectedMedicine(newArray);\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Row>\r\n              );\r\n            })}\r\n\r\n            <Row className=\"justify-content-center mt-5 align-items-center\">\r\n              <div style={{ color: \"#83CEC2\" }}>Finalize appointment</div>\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 mb-5 align-items-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setShowScheduleAnother(true);\r\n                }}\r\n              >\r\n                Schedule another and finish appointment\r\n              </Button>\r\n              <Button onClick={() => finishAppt()}>\r\n                {\" \"}\r\n                Finish appointment without scheduling\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <TherapyMedicineModal\r\n        show={showModal}\r\n        appt={currAppt}\r\n        onHideModal={hideModal}\r\n        onAddMedicine={onAdd}\r\n        clickedShow={showClicked}\r\n      ></TherapyMedicineModal>\r\n      <ScheduleAnotherApp\r\n        show={showScheduleAnother}\r\n        appt={currAppt}\r\n        onHide={() => setShowScheduleAnother(false)}\r\n        onSchedule={() => {\r\n          setShowScheduleAnother(false);\r\n          finishAppt();\r\n        }}\r\n      ></ScheduleAnotherApp>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Modal, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction VacationModal(props) {\r\n  const [fromDate, setFromDate] = useState(null);\r\n  const [toDate, setToDate] = useState(null);\r\n  const [typeVac, setTypeVac] = useState(\"none\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    setToDate(null);\r\n    setFromDate(null);\r\n    setTypeVac(\"none\");\r\n  }, [props.show]);\r\n\r\n  const onStart = () => {\r\n    if (!fromDate) {\r\n      addToast(\"Starting date is empty!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (!toDate) {\r\n      addToast(\"Ending date is empty!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (typeVac === \"none\") {\r\n      addToast(\"Vacation type is none!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    if (fromDate.getTime() >= toDate.getTime()) {\r\n      addToast(\"Invalid start/end date!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    let userID = getIdFromToken();\r\n    if (!userID) {\r\n      addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n\r\n    let startDate = Math.floor(fromDate.getTime());\r\n    let endDate = Math.floor(toDate.getTime());\r\n\r\n    if (moment(Date.now()) > moment(startDate)) {\r\n      addToast(\"Start date of vacation has to be in future!\", {\r\n        appearance: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let search_params = new URLSearchParams();\r\n    search_params.append(\"id\", userID);\r\n    search_params.append(\"start\", startDate);\r\n    search_params.append(\"end\", endDate);\r\n    search_params.append(\"type\", typeVac);\r\n\r\n    api\r\n      .get(\"/api/vacation/request_vacation\", { params: search_params })\r\n      .then(() => props.onCreateMethod())\r\n      .catch((error) => addToast(error.response.data, { appearance: \"error\" }));\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Create a request for a vacation\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body as={Row} className=\"justify-content-center m-3\">\r\n        <Col>\r\n          <Row className=\"justify-content-center m-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Start date:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={fromDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setFromDate(date)}\r\n                isClearable\r\n              />\r\n            </InputGroup>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center m-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>End date:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as={DatePicker}\r\n                closeOnScroll={true}\r\n                selected={toDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={(date) => setToDate(date)}\r\n                isClearable\r\n              />\r\n            </InputGroup>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center m-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Type:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={typeVac}\r\n                onChange={(event) => setTypeVac(event.target.value)}\r\n                name=\"typeVac\"\r\n              >\r\n                <option value=\"none\">none</option>\r\n                <option value=\"vacation\">vacation</option>\r\n                <option value=\"leave\">leave</option>\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Row>\r\n        </Col>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={onStart}>Create request</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default VacationModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Button, Col, Card } from \"react-bootstrap\";\r\nimport VacationModal from \"./vacation_modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction VacationRequest() {\r\n  const [requests, setRequests] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let userID = getIdFromToken();\r\n    if (!userID) {\r\n      addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/vacation/getVacationsFromWorker?id=\" + userID)\r\n      .then((resp) => setRequests(resp.data))\r\n      .catch(() => setRequests([]));\r\n  }, []);\r\n\r\n  const onBtnClick = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCreateRequest = () => {\r\n    let userID = getIdFromToken();\r\n    if (!userID) {\r\n      addToast(\"No user id in token! error\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/vacation/getVacationsFromWorker?id=\" + userID)\r\n      .then((resp) => setRequests(resp.data))\r\n      .catch(() => setRequests([])); //todo da se stavi da se dodaje u listu, a ne novi zahtev\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center ml-5 pb-4 pt-5 align-items-center\">\r\n        <Col md={6}>\r\n          <Row className=\"justify-content-center ml-5 mb-2 align-items-center\">\r\n            <h2 className=\"my_content_header\">Requests for vacations</h2>\r\n          </Row>\r\n          <Row className=\"justify-content-center ml-5 mb-4 align-items-center\">\r\n            <Button onClick={onBtnClick} size=\"lg\">\r\n              Create new\r\n            </Button>\r\n          </Row>\r\n\r\n          {requests.map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center ml-5 mb-4 align-items-center\"\r\n                key={index}\r\n              >\r\n                <Col>\r\n                  <Card fluid className=\"card_appt_home\">\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {\"From: \" +\r\n                          moment(value.start).format(\"DD MMM YYYY\") +\r\n                          \" | To: \" +\r\n                          moment(value.end).format(\"DD MMM YYYY\")}\r\n                      </Card.Title>\r\n                      <Card.Text>{\"Type: \" + value.absenceType}</Card.Text>\r\n                      <Card.Text>{\"Status: \" + value.requestState}</Card.Text>\r\n                      {value.requestState.trim() === \"CANCELLED\" && (\r\n                        <Card.Text>\r\n                          Reason for decline: {value.declineText}\r\n                        </Card.Text>\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n\r\n        <VacationModal\r\n          show={showModal}\r\n          onCreateMethod={onCreateRequest}\r\n          onHide={() => {\r\n            setShowModal(false);\r\n          }}\r\n        ></VacationModal>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VacationRequest;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styling/profile.css\";\r\nimport { Form, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport BasicProfileInfo from \"../profile/BasicProfileInfo\";\r\nimport api from \"../../app/api\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction DermatologistProfile() {\r\n  const [workplaces, setWorkplaces] = useState([]);\r\n  const [currSelect, setCurrSelect] = useState(0);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"No token, error!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/workplace/dermatologist/get_workplaces/\" + id)\r\n      .then((resp) => {\r\n        setWorkplaces(resp.data);\r\n        console.log(workplaces);\r\n        if (workplaces.length > 0) {\r\n          setCurrSelect(0); //selectujemo ih po indeksu\r\n        }\r\n      })\r\n      .catch(() => setWorkplaces([]));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 align-items-center\">\r\n        <BasicProfileInfo title={\"Dermatologist profile\"}></BasicProfileInfo>\r\n      </Row>\r\n      <Row className=\"justify-content-center mt-5 ml-5 mr-5 pb-5 align-items-center\">\r\n        <Col\r\n          md={4}\r\n          className=\"card_appt_home\"\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <Row className=\"justify-content-center m-5 align-items-center\">\r\n            <h3 className=\"my_content_header\" style={{ textAlign: \"center\" }}>\r\n              Working hours\r\n            </h3>\r\n          </Row>\r\n          <Row className=\"justify-content-center m-5 align-items-center\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Select pharmacy:</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                as=\"select\"\r\n                defaultValue={0}\r\n                value={currSelect}\r\n                onChange={(event) => setCurrSelect(event.target.value)}\r\n              >\r\n                {workplaces.map((value, index) => {\r\n                  return <option value={index}>{value.pharmacy}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Row>\r\n          {(workplaces[currSelect]?.workDayList\r\n            ? workplaces[currSelect].workDayList\r\n            : []\r\n          ).map((value, index) => {\r\n            return (\r\n              <Row\r\n                className=\"justify-content-center p-2 m-2 align-items-center\"\r\n                style={{ backgroundColor: \"#83CEC2\" }}\r\n              >\r\n                <div>\r\n                  {value.weekday}: {value.startTime} - {value.endTime}h\r\n                </div>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DermatologistProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styling/profile.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport BasicProfileInfo from \"../profile/BasicProfileInfo\";\r\nimport api from \"../../app/api\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction PharmacistProfile() {\r\n  const [workplace, setWorkplace] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let id = getIdFromToken();\r\n    if (!id) {\r\n      addToast(\"Token error!\", { appearance: \"error\" });\r\n      return;\r\n    }\r\n    api\r\n      .get(\"/api/workplace/pharmacist/get_workplace/\" + id)\r\n      .then((resp) => {\r\n        setWorkplace(resp.data);\r\n      })\r\n      .catch(() => setWorkplace({}));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <Row className=\"justify-content-center pt-5 align-items-center\">\r\n        <BasicProfileInfo title={\"Pharmacist profile\"}></BasicProfileInfo>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center mt-5 ml-5 mr-5 pb-5 align-items-center\">\r\n        <Col\r\n          md={4}\r\n          className=\"card_appt_home\"\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <Row className=\"justify-content-center m-5 align-items-center\">\r\n            <h3 className=\"my_content_header\" style={{ textAlign: \"center\" }}>\r\n              Working hours: {workplace ? workplace.pharmacy : \"\"}\r\n            </h3>\r\n          </Row>\r\n          {(workplace?.workDayList ? workplace.workDayList : []).map(\r\n            (value, index) => {\r\n              return (\r\n                <Row\r\n                  className=\"justify-content-center m-2 align-items-center p-2\"\r\n                  style={{ backgroundColor: \"#83CEC2\" }}\r\n                >\r\n                  <div>\r\n                    {value.weekday}: {value.startTime} - {value.endTime}h\r\n                  </div>\r\n                </Row>\r\n              );\r\n            }\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacistProfile;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Form, Button, Col, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport api from \"../../app/api\";\r\nimport moment from \"moment\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport \"../../styling/worker.css\";\r\n\r\nfunction IssueMedicine() {\r\n  const [reservedMedicine, setReservedMedicine] = useState(null);\r\n  const [resID, setResID] = useState(null);\r\n  const { addToast } = useToasts();\r\n\r\n  const searchRes = () => {\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"resID\", resID);\r\n\r\n    api\r\n      .post(\"/api/medicine-reservation/getReservedIssue\", bodyFormData)\r\n      .then((resp) => {\r\n        setReservedMedicine(resp.data);\r\n      })\r\n      .catch((resp) => {\r\n        addToast(resp.response.data.message, { appearance: \"error\" });\r\n        setReservedMedicine(null);\r\n      });\r\n  };\r\n\r\n  const issueMed = () => {\r\n    let bodyFormData = new FormData();\r\n    let workerID = getIdFromToken();\r\n    if (workerID === null) {\r\n      return;\r\n    }\r\n    bodyFormData.append(\"workerID\", workerID);\r\n    bodyFormData.append(\"resID\", resID);\r\n\r\n    api\r\n      .post(\"/api/medicine-reservation/issueMedicine\", bodyFormData)\r\n      .then((resp) => {\r\n        addToast(resp.data, { appearance: \"success\" });\r\n        setReservedMedicine(null);\r\n        setResID(\"\");\r\n      })\r\n      .catch((resp) => {\r\n        addToast(resp.response.data.message, { appearance: \"error\" });\r\n        setReservedMedicine(null);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"my__container\" style={{ minHeight: \"100vh\" }}>\r\n      <div>\r\n        <Row className=\"justify-content-center pt-5\">\r\n          <h4 className=\"my_content_header\">Issue medicine</h4>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center align-items-center\">\r\n          <Form\r\n            onSubmit={(event) => event.preventDefault()}\r\n            className=\"search_field\"\r\n          >\r\n            <Form.Group\r\n              as={Row}\r\n              className=\"justify-content-center m-3 align-items-center\"\r\n            >\r\n              <Form.Label>Search reservation:</Form.Label>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Reservation ID\"\r\n                value={resID}\r\n                onChange={(event) => setResID(event.target.value)}\r\n              />\r\n              <Row className=\"mt-3\">\r\n                <Button onClick={() => searchRes()}>Search</Button>\r\n              </Row>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n\r\n      <Row className=\"justify-content-center p-3\">\r\n        {reservedMedicine && (\r\n          <Col md={6}>\r\n            <Card fluid className=\"card_appt_home\">\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  Reservation ID: {reservedMedicine.reservationID}\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  Reservation date:{\" \"}\r\n                  {moment(reservedMedicine.reservationDate).format(\r\n                    \"DD MMM YYYY\"\r\n                  )}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Reservation pickup due date:{\" \"}\r\n                  {moment(reservedMedicine.pickupDate).format(\"DD MMM YYYY\")}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Medicine name: {reservedMedicine.medicineName}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  Medicine ID: {reservedMedicine.medicineID}\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Row className=\"justify-content-center align-items-center m-3\">\r\n                <Button onClick={() => issueMed()}>Issue medicine</Button>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssueMedicine;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport FirstNameFormGroup from \"../utilComponents/formGroups/FirstNameFormGroup\";\r\nimport LastNameFormGroup from \"../utilComponents/formGroups/LastNameFormGroup\";\r\nimport EmailFormGroup from \"../utilComponents/formGroups/EmailFormGroup\";\r\nimport PhoneNumberFormGroup from \"../utilComponents/formGroups/PhoneNumberFormGroup\";\r\nimport PasswordFormGroup from \"../utilComponents/formGroups/PasswordFormGroup\";\r\nimport CityFormGroup from \"../utilComponents/formGroups/CityFormGroup\";\r\nimport StreetFormGroup from \"../utilComponents/formGroups/StreetFormGroup\";\r\nimport CountryFormGroup from \"../utilComponents/formGroups/CountryFormGroup\";\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\n\r\nimport api from \"../../app/api\";\r\nimport Validator from \"../../app/validator\";\r\n\r\nfunction AddUserModal(props) {\r\n  const [form, setForm] = useState(\r\n    {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      telephone: '',\r\n      city: '',\r\n      street: '',\r\n      country: ''\r\n    }\r\n  );\r\n  const { addToast } = useToasts();\r\n\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    return Validator['firstName'](form['firstName'])\r\n      && Validator['lastName'](form['lastName'])\r\n      && Validator['email'](form['email'])\r\n      && Validator['password'](form['password'])\r\n      && Validator['password'](form['repeatPassword'])\r\n      && Validator['telephone'](form['telephone'])\r\n      && Validator['city'](form['city'])\r\n      && Validator['street'](form['street'])\r\n      && Validator['country'](form['country'])\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (validateForm()) {\r\n      if (form['password'] !== form['repeatPassword']) {\r\n        addToast(\"Passwords do not match\", { appearance: 'warning' })\r\n        return;\r\n      }\r\n      sendPostRequest();\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = () => {\r\n    const newForm = convertForm(form);\r\n    api\r\n      .post(\"/api/users/\", newForm)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        addToast(\"User added successfully.\", { appearance: 'success' });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: 'error' });\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let address = {\r\n      city: form[\"city\"],\r\n      street: form[\"street\"],\r\n      country: form[\"country\"],\r\n    };\r\n\r\n    let newForm = {\r\n      ...form,\r\n      address: address,\r\n      roleName: props.usertype,\r\n    };\r\n\r\n    delete newForm[\"city\"];\r\n    delete newForm[\"street\"];\r\n    delete newForm[\"country\"];\r\n\r\n    return newForm;\r\n  };\r\n\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add new {props.usertype}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FirstNameFormGroup\r\n                onChange={(event) => setField(\"firstName\", event.target.value)}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <LastNameFormGroup\r\n                onChange={(event) => setField(\"lastName\", event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <EmailFormGroup\r\n                onChange={(event) => setField(\"email\", event.target.value)}\r\n              ></EmailFormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <PhoneNumberFormGroup\r\n                onChange={(event) => setField(\"telephone\", event.target.value)}\r\n              ></PhoneNumberFormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <PasswordFormGroup\r\n                onChange={(event) => setField(\"password\", event.target.value)}\r\n              ></PasswordFormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <PasswordFormGroup\r\n                name=\"Repeat password\" onChange={(event) => setField(\"repeatPassword\", event.target.value)}\r\n              ></PasswordFormGroup>\r\n            </Col>\r\n          </Row>\r\n          <CityFormGroup\r\n            onChange={(event) => setField(\"city\", event.target.value)}\r\n          ></CityFormGroup>\r\n          <StreetFormGroup\r\n            onChange={(event) => setField(\"street\", event.target.value)}\r\n          ></StreetFormGroup>\r\n          <CountryFormGroup\r\n            onChange={(event) => setField(\"country\", event.target.value)}\r\n          ></CountryFormGroup>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer />\r\n    </Modal >\r\n  );\r\n}\r\n\r\nAddUserModal.propTypes = {\r\n  usertype: PropTypes.string.isRequired,\r\n};\r\nexport default AddUserModal;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport FirstNameFormGroup from \"../utilComponents/formGroups/FirstNameFormGroup\";\r\nimport LastNameFormGroup from \"../utilComponents/formGroups/LastNameFormGroup\";\r\nimport EmailFormGroup from \"../utilComponents/formGroups/EmailFormGroup\";\r\nimport PhoneNumberFormGroup from \"../utilComponents/formGroups/PhoneNumberFormGroup\";\r\nimport CityFormGroup from \"../utilComponents/formGroups/CityFormGroup\";\r\nimport StreetFormGroup from \"../utilComponents/formGroups/StreetFormGroup\";\r\nimport CountryFormGroup from \"../utilComponents/formGroups/CountryFormGroup\";\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport api from \"../../app/api\";\r\nimport Validator from \"../../app/validator\";\r\n\r\nfunction EditUserModal(props) {\r\n  const [form, setForm] = useState({});\r\n  const formRef = useRef(null);\r\n  const { addToast } = useToasts();\r\n\r\n  const resetForm = () => {\r\n    setForm(\r\n      {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        telephone: '',\r\n        city: '',\r\n        street: '',\r\n        country: ''\r\n      }\r\n    )\r\n    formRef.current.reset();\r\n  }\r\n\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    return Validator['firstName'](form['firstName'])\r\n      && Validator['lastName'](form['lastName'])\r\n      && Validator['email'](form['email'])\r\n      && Validator['telephone'](form['telephone'])\r\n      && Validator['city'](form['city'])\r\n      && Validator['street'](form['street'])\r\n      && Validator['country'](form['country'])\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (validateForm()) {\r\n      if (form['password'] !== form['repeatPassword']) {\r\n        addToast(\"Passwords do not match\", { appearance: 'warning' })\r\n        return;\r\n      }\r\n      sendPutRequest();\r\n    }\r\n  };\r\n\r\n  const showHandler = () => {\r\n    let newForm = {\r\n      ...props.user,\r\n      city: props.user.address.city,\r\n      street: props.user.address.street,\r\n      country: props.user.address.country,\r\n    };\r\n    setForm(newForm);\r\n  };\r\n\r\n  const sendPutRequest = () => {\r\n    const newForm = convertForm(form);\r\n    console.log(newForm);\r\n    api\r\n      .put(\"/api/users/\" + props.user.id, newForm)\r\n      .then(() => {\r\n        setForm({});\r\n        props.onSuccess();\r\n        props.onHide();\r\n        addToast(\"User updated successfully.\", { appearance: 'success' });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: 'error' });\r\n      });\r\n  };\r\n\r\n  const convertForm = () => {\r\n    let address = {\r\n      ...props.user.address,\r\n      city: form[\"city\"],\r\n      street: form[\"street\"],\r\n      country: form[\"country\"],\r\n    };\r\n\r\n    let newForm = {\r\n      ...form,\r\n      address: address,\r\n      roleName: props.usertype,\r\n    };\r\n\r\n    delete newForm[\"city\"];\r\n    delete newForm[\"street\"];\r\n    delete newForm[\"country\"];\r\n\r\n    return newForm;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onShow={showHandler}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Edit {props.user.firstName + \" \" + props.user.lastName}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FirstNameFormGroup\r\n                onChange={(event) => setField(\"firstName\", event.target.value)}\r\n                defaultValue={!!props.user.firstName ? props.user.firstName : \"\"}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <LastNameFormGroup\r\n                onChange={(event) => setField(\"lastName\", event.target.value)}\r\n                defaultValue={!!props.user.lastName ? props.user.lastName : \"\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <EmailFormGroup\r\n                onChange={(event) => setField(\"email\", event.target.value)}\r\n                defaultValue={!!props.user.email ? props.user.email : \"\"}\r\n                disabled={true}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <PhoneNumberFormGroup\r\n                onChange={(event) => setField(\"telephone\", event.target.value)}\r\n                defaultValue={!!props.user.telephone ? props.user.telephone : \"\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CityFormGroup\r\n            onChange={(event) => setField(\"city\", event.target.value)}\r\n            defaultValue={!!props.user.address ? props.user.address.city : \"\"}\r\n          />\r\n          <StreetFormGroup\r\n            onChange={(event) => setField(\"street\", event.target.value)}\r\n            defaultValue={!!props.user.address ? props.user.address.street : \"\"}\r\n          />\r\n          <CountryFormGroup\r\n            onChange={(event) => setField(\"country\", event.target.value)}\r\n            defaultValue={\r\n              !!props.user.address ? props.user.address.country : \"\"\r\n            }\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nEditUserModal.propTypes = {\r\n  usertype: PropTypes.string.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\nexport default EditUserModal;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function UserRow({ user, onClick, editClick, detailsClick, deleteClick }) {\r\n\treturn (\r\n\t\t<tr onClick={onClick} key={user.id}>\r\n\t\t\t<td>{user.firstName}</td>\r\n\t\t\t<td>{user.lastName}</td>\r\n\t\t\t<td>{user.email}</td>\r\n\t\t\t<td>{user.telephone}</td>\r\n\t\t\t<td>{user.address.city + ' ' + user.address.street}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<Button onClick={editClick}>Edit</Button>\r\n\t\t\t\t<Button variant=\"danger\" onClick={deleteClick}>\r\n\t\t\t\t\tDelete\r\n        </Button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Form, Row, Table } from 'react-bootstrap'\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserModal from './EditUserModal';\r\nimport DeleteModal from '../utilComponents/modals/DeleteModal';\r\nimport PropTypes from 'prop-types';\r\nimport UserRow from './UserRow';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport api from '../../app/api';\r\n\r\nfunction UserTable({ initialUserType }) {\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUserType, setCurrentUserType] = useState(\"\");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const [showErrorModal, setShowErrorModal] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await api.get('/api/users/?type=' + currentUserType).catch(() => { });\r\n      setUsers(!!response ? response.data : []);\r\n    }\r\n    fetchData();\r\n  }, [reload, currentUserType]);\r\n\r\n\r\n  useEffect(\r\n    function () {\r\n      setCurrentUserType(initialUserType);\r\n    },\r\n    [initialUserType]\r\n  );\r\n\r\n  const updateCurrentUserType = (event) => {\r\n    setCurrentUserType(event.target.value);\r\n  };\r\n\r\n  const reloadTable = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const getFormattedUserType = () => {\r\n    switch (currentUserType) {\r\n      case \"PHARMACIST\":\r\n        return \"Pharmacist\";\r\n      case \"DERMATOLOGIST\":\r\n        return \"Dermatologist\";\r\n      case \"SUPPLIER\":\r\n        return \"Supplier\";\r\n      case \"ADMIN\":\r\n        return \"System Admin\";\r\n      case \"PHARMACY_ADMIN\":\r\n        return \"Pharmacy Admin\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const deleteUser = () => {\r\n    api\r\n      .delete(\"/api/users/\" + selected.id)\r\n      .then(() => {\r\n        reloadTable()\r\n        setShowDeleteModal(false)\r\n        addToast(\"User deleted successfully.\", { appearance: 'success' });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: 'error' });\r\n      })\r\n  }\r\n  const updateSelected = (selectedUser) => {\r\n    setSelected(selectedUser);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: '10px' }} className=\"justify-content-center\">\r\n      <Row className=\"justify-content-md-between\">\r\n        <Form.Group controlId=\"userTypeSelect\">\r\n          <Form.Label>User Type</Form.Label>\r\n          <Form.Control as=\"select\" onChange={updateCurrentUserType.bind(this)}>\r\n            <option value=\"PHARMACIST\">Pharmacist</option>\r\n            <option value=\"DERMATOLOGIST\">Dermatologist</option>\r\n            <option value=\"SUPPLIER\">Supplier</option>\r\n            <option value=\"PHARMACY_ADMIN\">Pharmacy Admin</option>\r\n            <option value=\"ADMIN\">System Admin</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button variant=\"secondary\" style={{ float: 'right', margin: '20px' }} onClick={() => setShowAddModal(true)}>Add new {getFormattedUserType()}</Button>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>E Mail</th>\r\n            <th>Phone number</th>\r\n            <th>Address</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <UserRow\r\n              key={user.id}\r\n              user={user}\r\n              onClick={() => updateSelected(user)}\r\n              editClick={() => setShowEditModal(true)}\r\n              deleteClick={() => setShowDeleteModal(true)}>\r\n            </UserRow>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <AddUserModal show={showAddModal} onHide={() => setShowAddModal(false)} onSuccess={reloadTable} usertype={currentUserType} />\r\n      <DeleteModal title={\"Remove \" + selected.firstName + \" \" + selected.lastName} show={showDeleteModal} onHide={() => setShowDeleteModal(false)} onDelete={deleteUser} />\r\n      <EditUserModal show={showEditModal} user={selected} onHide={() => setShowEditModal(false)} onSuccess={reloadTable} usertype={currentUserType} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nUserTable.propTypes = {\r\n  userType: PropTypes.oneOf([\r\n    \"DERMATOLOGIST\",\r\n    \"PHARMACIST\",\r\n    \"SUPPLIER\",\r\n    \"PHARMACY_ADMIN\",\r\n    \"ADMIN\",\r\n  ]),\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react'\r\n\r\nconst UserSearchPanel = props => {\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSearchPanel\r\n","import React from 'react'\r\nimport UserTable from './UserTable'\r\nimport UserSearchPanel from './UserSearchPanel'\r\n\r\nconst UserCrud = props => {\r\n    return (\r\n        <div>\r\n            <UserSearchPanel> </UserSearchPanel>\r\n            <UserTable initialUserType={\"PHARMACIST\"}> </UserTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCrud","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Pagination,\r\n  Table,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\n\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction PharmaciesWithFreePharmacists() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [startHour, setStartHour] = useState(null);\r\n  const [requestedDate, setRequestedDate] = useState(null);\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [workers, setWorkers] = useState([]);\r\n  const [chosenPharmacy, setChosenPharmacy] = useState(null);\r\n  const [pagNumber, setPugNummber] = useState(0);\r\n  const [maxPag, setMaxPag] = useState(0);\r\n  const [showedPharmacies, setShowedPharmacies] = useState([]);\r\n  const [selectedWorker, setSelectedWorker] = useState({});\r\n  const [reloadPharmacies, setReloadPharmacies] = useState(false);\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const [sorter2, setSorter2] = useState(\"none\");\r\n  const [reload2, setReload2] = useState(false);\r\n  const [points, setPoints] = useState(0);\r\n  const [category, setCategory] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchPoints() {\r\n      const request = await api.get(\r\n        \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n      ).catch(() => { });;\r\n      setPoints(!!request ? request.data : 0);\r\n      return request;\r\n    }\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchCategory() {\r\n      const request = await api.get(\"/api/ranking-category/points/\" + points).catch(() => { });;\r\n      setCategory(!!request ? request.data : {});\r\n\r\n      return request;\r\n    }\r\n    fetchCategory();\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    if (requestedDate == null) return;\r\n\r\n    async function fetchPharmacies() {\r\n      let search_params = new URLSearchParams();\r\n      search_params.append(\"date\", requestedDate);\r\n      const request = await api.get(\"/api/pharmacy/all/free-pharmacists/\", {\r\n        params: search_params,\r\n      }).catch(() => { });\r\n      if (request.status == 404) {\r\n        addToast(request.data, { appearance: \"error\" });\r\n        setPharmacies([]);\r\n      }\r\n      if (request.status == 200) {\r\n        if (request.data.length == 0) {\r\n          addToast(\"There's no available pharmacists!\", {\r\n            appearance: \"warning\",\r\n          });\r\n        }\r\n        setPharmacies(request.data);\r\n      }\r\n      setChosenPharmacy(null);\r\n      setSelectedWorker({});\r\n      setWorkers([]);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  }, [reloadPharmacies, requestedDate, reload]);\r\n\r\n  useEffect(() => {\r\n    if (chosenPharmacy == null) return;\r\n    async function fetchWorkers() {\r\n      let search_params = new URLSearchParams();\r\n      search_params.append(\"date\", requestedDate);\r\n      search_params.append(\"id\", chosenPharmacy.id);\r\n      const request = await api.get(\r\n        \"/api/workers/all/free-pharmacists/pharmacy\",\r\n        { params: search_params }\r\n      ).catch(() => { });;\r\n      if (request.status == 404) {\r\n        addToast(request.data, { appearance: \"error\" });\r\n        setWorkers([]);\r\n      }\r\n      if (request.status == 200) {\r\n        if (request.data.length == 0) {\r\n          addToast(\"There's no available pharmacists!\", {\r\n            appearance: \"warning\",\r\n          });\r\n        }\r\n        setWorkers(request.data);\r\n      }\r\n\r\n      return request;\r\n    }\r\n    fetchWorkers();\r\n  }, [chosenPharmacy, reload2]);\r\n\r\n  useEffect(() => {\r\n    let maxNumber = Math.floor(pharmacies?.length / 12) - 1;\r\n    if (pharmacies?.length / 12 - 1 > maxNumber) {\r\n      maxNumber = maxNumber + 1;\r\n    }\r\n    setMaxPag(maxNumber);\r\n  }, [pharmacies]);\r\n\r\n  useEffect(() => {\r\n    let first = pagNumber * 12;\r\n    let max = pharmacies.length < first + 12 ? pharmacies?.length : first + 12;\r\n    setShowedPharmacies(pharmacies?.slice(first, max));\r\n  }, [pharmacies, pagNumber]);\r\n\r\n  let handleSlideLeft = () => {\r\n    if (pagNumber !== 0) {\r\n      setPugNummber(pagNumber - 1);\r\n    }\r\n  };\r\n\r\n  let handleSlideRight = () => {\r\n    if (pagNumber !== maxPag) {\r\n      setPugNummber(pagNumber + 1);\r\n    }\r\n  };\r\n\r\n  const updateSelectedWorker = (selectedWorker) => {\r\n    setSelectedWorker(selectedWorker);\r\n  };\r\n\r\n  const createReservation = () => {\r\n    api\r\n      .post(\r\n        `/api/appointment/reserve-consultation/pharmacy/${chosenPharmacy.id\r\n        }/pharmacist/${selectedWorker.id\r\n        }/patient/${getIdFromToken()}/date/${requestedDate}/`\r\n      )\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setRequestedDate(null);\r\n        setPharmacies([]);\r\n        setReloadPharmacies(!reloadPharmacies);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        setReloadPharmacies(!reloadPharmacies);\r\n      });\r\n    setChosenPharmacy(null);\r\n    setSelectedWorker({});\r\n    setWorkers([]);\r\n  };\r\n\r\n  const changeDate = (date) => {\r\n    let array = date.split(\"-\");\r\n    let d = new Date(\r\n      Number.parseInt(array[0]),\r\n      Number.parseInt(array[1]) - 1,\r\n      Number.parseInt(array[2])\r\n    );\r\n    setStartDate(d);\r\n  };\r\n\r\n  const createRequestedDate = () => {\r\n    let date = startDate;\r\n    let hour = startHour;\r\n    let array = hour.split(\":\");\r\n    date.setHours(Number.parseInt(array[0]), Number.parseInt(array[1]), 0);\r\n    if (date.getTime()) {\r\n      if (date.getTime() < new Date()) {\r\n        addToast(\"Choose a date from the future!\", { appearance: \"warning\" });\r\n      } else {\r\n        setRequestedDate(date.getTime());\r\n      }\r\n    }\r\n  };\r\n\r\n  const formSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sorter === \"none\") return;\r\n\r\n    let search_params = new URLSearchParams();\r\n\r\n    if (sorter === \"ascPrice\") {\r\n      search_params.append(\"sort\", \"consultationPrice,asc\");\r\n    }\r\n    if (sorter === \"descPrice\") {\r\n      search_params.append(\"sort\", \"consultationPrice,desc\");\r\n    }\r\n    if (sorter === \"ascGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,asc\");\r\n    }\r\n    if (sorter === \"descGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,desc\");\r\n    }\r\n\r\n    search_params.append(\"date\", requestedDate);\r\n\r\n    api\r\n      .get(\"/api/pharmacy/all/free-pharmacists/\", {\r\n        params: search_params,\r\n      })\r\n      .then((resp) => setPharmacies(resp.data))\r\n      .catch(setPharmacies([]));\r\n  };\r\n\r\n  const updateSorting = (event) => {\r\n    setSorter(event.target.value);\r\n  };\r\n\r\n  const formSearch2 = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (sorter2 === \"none\") return;\r\n\r\n    let search_params = new URLSearchParams();\r\n\r\n    if (sorter2 === \"ascGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,asc\");\r\n    }\r\n    if (sorter2 === \"descGrade\") {\r\n      search_params.append(\"sort\", \"avgGrade,desc\");\r\n    }\r\n\r\n    search_params.append(\"date\", requestedDate);\r\n    search_params.append(\"id\", chosenPharmacy.id);\r\n    api\r\n      .get(\"/api/workers/all/free-pharmacists/pharmacy\", {\r\n        params: search_params,\r\n      })\r\n      .then((resp) => setWorkers(resp.data))\r\n      .catch(setWorkers([]));\r\n  };\r\n\r\n  const updateSorting2 = (event) => {\r\n    setSorter2(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"reserve__consultation__container\">\r\n      <div className=\"reserve__consultation__content\">\r\n        <Row>\r\n          <Col className=\"my__flex\">\r\n            <h3>Choose a date and time of consultation</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"my__flex\">\r\n            <Form.Group controlId=\"datePicker\" di>\r\n              <Form.Label>Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                onChange={(event) => changeDate(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"timePicker\" di>\r\n              <Form.Label>Start time</Form.Label>\r\n              <Form.Control\r\n                type=\"time\"\r\n                value={startHour}\r\n                onChange={(event) => setStartHour(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={createRequestedDate}\r\n              disabled={startDate == null || startHour == null}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className=\"justify-content-center mt-5\"\r\n          style={{ display: pharmacies.length == 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <Form onSubmit={formSearch}>\r\n            <Form.Group as={Row} className=\"align-items-center\">\r\n              <Col className=\"my__flex\" md={6} lg={6}>\r\n                <Form.Label style={{ marginRight: \"20px\" }}>\r\n                  Sorter:{\" \"}\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sorter}\r\n                  onChange={updateSorting.bind(this)}\r\n                  name=\"sorter\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"ascPrice\">Price (ascending)</option>\r\n                  <option value=\"descPrice\">Price (descending)</option>\r\n                  <option value=\"ascGrade\">Pharmacy grade (ascending)</option>\r\n                  <option value=\"descGrade\">Pharmacy grade (descending)</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col className=\"justify-content-center\" md={6} lg={6}>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Sort{\" \"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setReload(!reload);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Reset{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          {showedPharmacies &&\r\n            showedPharmacies.map((pharmacy) => {\r\n              return (\r\n                <Col\r\n                  className=\"my__flex\"\r\n                  key={pharmacy.id}\r\n                  lg={3}\r\n                  md={6}\r\n                  sm={12}\r\n                >\r\n                  <Card\r\n                    className=\"my__card\"\r\n                    style={{ width: \"18rem\" }}\r\n                    onClick={() => {\r\n                      setChosenPharmacy(pharmacy);\r\n                      setSelectedWorker({});\r\n                    }}\r\n                  >\r\n                    <Card.Body>\r\n                      <Card.Title>{pharmacy.name}</Card.Title>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {pharmacy.address}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        {[...Array(Math.ceil(pharmacy.avgGrade))].map(() => (\r\n                          <StarFill className=\"my__star\" />\r\n                        ))}\r\n                      </ListGroupItem>\r\n                      <ListGroupItem className=\"my__flex\">\r\n                        Price: {pharmacy.consultationPrice}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n\r\n        {showedPharmacies.length > 0 && (\r\n          <Row className=\"my__row__pagination\">\r\n            <Col className=\"my__flex\">\r\n              <Pagination size=\"lg\">\r\n                <Pagination.Prev\r\n                  disabled={pagNumber === 0}\r\n                  onClick={handleSlideLeft}\r\n                />\r\n                <Pagination.Item disabled>{pagNumber}</Pagination.Item>\r\n                <Pagination.Next\r\n                  disabled={pagNumber === maxPag}\r\n                  onClick={handleSlideRight}\r\n                />\r\n              </Pagination>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row\r\n          className=\"justify-content-center mt-5\"\r\n          style={{\r\n            display:\r\n              requestedDate != null && showedPharmacies.length === 0\r\n                ? \"none\"\r\n                : \"flex\",\r\n          }}\r\n        >\r\n          <Form\r\n            onSubmit={formSearch2}\r\n            style={{ display: workers.length === 0 ? \"none\" : \"block\" }}\r\n          >\r\n            <Form.Group as={Row} className=\"align-items-center\">\r\n              <Col className=\"my__flex\" md={6} lg={6}>\r\n                <Form.Label style={{ marginRight: \"20px\" }}>\r\n                  Sorter:{\" \"}\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={sorter2}\r\n                  onChange={updateSorting2.bind(this)}\r\n                  name=\"sorter2\"\r\n                >\r\n                  <option value=\"none\">none</option>\r\n                  <option value=\"ascGrade\">Pharmacist grade (ascending)</option>\r\n                  <option value=\"descGrade\">\r\n                    Pharmacist grade (descending)\r\n                  </option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col className=\"justify-content-center\" md={6} lg={6}>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Sort{\" \"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setReload2(!reload2);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Reset{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            style={{\r\n              display:\r\n                chosenPharmacy !== null && workers.length > 0\r\n                  ? \"table\"\r\n                  : \"none\",\r\n              width: \"50%\",\r\n            }}\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {workers &&\r\n                workers.map((w) => (\r\n                  <tr\r\n                    key={w.id}\r\n                    onClick={() => updateSelectedWorker(w)}\r\n                    className={\r\n                      selectedWorker.id === w.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{w.name}</td>\r\n                    <td>{w.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            display: category == \"\" ? \"none\" : \"block\",\r\n          }}\r\n        >\r\n          You have a discount of {category?.discount}%\r\n        </p>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"1.3rem\",\r\n            display:\r\n              category == \"\" || chosenPharmacy == null ? \"none\" : \"block\",\r\n          }}\r\n        >\r\n          Total price:{\" \"}\r\n          <span style={{ textDecoration: \"line-through\" }}>\r\n            {chosenPharmacy?.consultationPrice}\r\n          </span>\r\n          {\"   ->   \"}\r\n          {(chosenPharmacy?.consultationPrice * (100 - category.discount)) /\r\n            100}\r\n        </p>\r\n        <Row>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={createReservation}\r\n            style={{\r\n              display:\r\n                Object.keys(selectedWorker).length === 0 ||\r\n                  chosenPharmacy == null\r\n                  ? \"none\"\r\n                  : \"inline-block\",\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            Reserve\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PharmaciesWithFreePharmacists;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Container, Table, Button, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction ConsultationsInsight() {\r\n  const [consultations, setConsultations] = useState([]);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"History\");\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [ascDesc, setAscDesc] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchConsultations() {\r\n      if (dropdownLabel === \"History\") {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await api.get(\r\n          \"/api/appointment/history/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        ).catch(() => { });;\r\n        setConsultations(!!request ? request.data : []);\r\n\r\n        return request;\r\n      } else {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await api.get(\r\n          \"/api/appointment/upcoming/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        ).catch(() => { });\r\n        setConsultations(!!request ? request.data : []);\r\n\r\n        return request;\r\n      }\r\n    }\r\n    fetchConsultations();\r\n  }, [dropdownLabel, sorter, ascDesc, reload]);\r\n\r\n  const cancelConsultation = (id) => {\r\n    api\r\n      .put(\"/api/appointment/cancel-consultation/\" + id)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  function differenceInMinutes(startTime) {\r\n    let today = new Date().getTime();\r\n    if ((startTime - today) / 60000 < 1440) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row style={{ justifyContent: \"space-between\" }}>\r\n          <Col className=\"my__flex\" md={3} lg={3}>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {dropdownLabel}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    // filterOrders(\"All\");\r\n                    setDropdownLabel(\"History\");\r\n                  }}\r\n                >\r\n                  History\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    // filterOrders(\"InProgress\");\r\n                    setDropdownLabel(\"Upcoming\");\r\n                  }}\r\n                >\r\n                  Upcoming\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n          <Col className=\"my__flex\" md={6} lg={6}>\r\n            <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {sorter}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"start time\");\r\n                  }}\r\n                >\r\n                  start time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"end time\");\r\n                  }}\r\n                >\r\n                  end time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"duration\");\r\n                  }}\r\n                >\r\n                  duration\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"price\");\r\n                  }}\r\n                >\r\n                  price\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {ascDesc}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"asc\");\r\n                  }}\r\n                >\r\n                  ascending\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"desc\");\r\n                  }}\r\n                >\r\n                  descending\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Start time</th>\r\n                <th>End time</th>\r\n                <th>Duration</th>\r\n                <th>Price</th>\r\n                <th>Pharmacist</th>\r\n                <th>Pharmacy</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {consultations &&\r\n                consultations.map((fc) => (\r\n                  <tr key={fc.id}>\r\n                    <td>{moment(fc.startTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{moment(fc.endTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{fc.duration}</td>\r\n                    <td>{fc.price}</td>\r\n                    <td>{fc.workerName}</td>\r\n                    <td>{fc.pharmacyName}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => cancelConsultation(fc.id)}\r\n                        style={{\r\n                          display:\r\n                            dropdownLabel === \"Upcoming\" &&\r\n                              differenceInMinutes(fc.startTime)\r\n                              ? \"inline-block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ConsultationsInsight;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Container, Table, Button, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction CheckupsInsight() {\r\n  const [checkups, setCheckups] = useState([]);\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"History\");\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [ascDesc, setAscDesc] = useState(\"none\");\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchCheckups() {\r\n      if (dropdownLabel === \"History\") {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await api.get(\r\n          \"/api/appointment/checkups/history/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        ).catch(() => { });\r\n        setCheckups(!!request ? request.data : []);\r\n\r\n        return request;\r\n      } else {\r\n        let search_params = new URLSearchParams();\r\n        if (sorter != \"none\" && ascDesc != \"none\")\r\n          search_params.append(\"sort\", sorter + ascDesc);\r\n        const request = await api.get(\r\n          \"/api/appointment/checkups/upcoming/patient/\" + getIdFromToken(),\r\n          {\r\n            params: search_params,\r\n          }\r\n        ).catch(() => { });\r\n        setCheckups(!!request ? request.data : []);\r\n\r\n        return request;\r\n      }\r\n    }\r\n    fetchCheckups();\r\n  }, [dropdownLabel, sorter, ascDesc, reload]);\r\n\r\n  const cancelCheckup = (id) => {\r\n    api\r\n      .put(\"/api/appointment/cancel-checkup/\" + id)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  function differenceInMinutes(startTime) {\r\n    let today = new Date().getTime();\r\n    if ((startTime - today) / 60000 < 1440) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row style={{ justifyContent: \"space-between\" }}>\r\n          <Col className=\"my__flex\" md={3} lg={3}>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {dropdownLabel}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setDropdownLabel(\"History\");\r\n                  }}\r\n                >\r\n                  History\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setDropdownLabel(\"Upcoming\");\r\n                  }}\r\n                >\r\n                  Upcoming\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n          <Col className=\"my__flex\" md={6} lg={6}>\r\n            <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {sorter}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"start time\");\r\n                  }}\r\n                >\r\n                  start time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"end time\");\r\n                  }}\r\n                >\r\n                  end time\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"duration\");\r\n                  }}\r\n                >\r\n                  duration\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setSorter(\"price\");\r\n                  }}\r\n                >\r\n                  price\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {ascDesc}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"none\");\r\n                  }}\r\n                >\r\n                  none\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"asc\");\r\n                  }}\r\n                >\r\n                  ascending\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    setAscDesc(\"desc\");\r\n                  }}\r\n                >\r\n                  descending\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Start time</th>\r\n                <th>End time</th>\r\n                <th>Duration</th>\r\n                <th>Price</th>\r\n                <th>Pharmacist</th>\r\n                <th>Pharmacy</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {checkups &&\r\n                checkups.map((c) => (\r\n                  <tr key={c.id}>\r\n                    <td>{moment(c.startTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{moment(c.endTime).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{c.duration}</td>\r\n                    <td>{c.price}</td>\r\n                    <td>{c.workerName}</td>\r\n                    <td>{c.pharmacyName}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => cancelCheckup(c.id)}\r\n                        style={{\r\n                          display:\r\n                            dropdownLabel === \"Upcoming\" &&\r\n                              differenceInMinutes(c.startTime)\r\n                              ? \"inline-block\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckupsInsight;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { XCircle } from \"react-bootstrap-icons\";\r\n\r\nimport { Row, Container, Table } from \"react-bootstrap\";\r\n\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport api from \"../../app/api\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\n\r\n// CHECK Deki ovde ima\r\nfunction SubscribedPharmacies() {\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState([]);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadPharmacies();\r\n  }, []);\r\n\r\n  const loadPharmacies = () => {\r\n    async function fetchPharmacies() {\r\n      const request = await api.get(\r\n        \"/api/pharmacy/subscribed/patient/\" + getIdFromToken()\r\n      ).catch(() => { });;\r\n      setPharmacies(!!request ? request.data : []);\r\n\r\n      return request;\r\n    }\r\n    fetchPharmacies();\r\n  };\r\n\r\n  const unsubscribe = () => {\r\n    api\r\n      .post(\r\n        `/api/pharmacy/${selectedPharmacy.id}/unsubscribe/${getIdFromToken()}`\r\n      )\r\n      .then(() => {\r\n        loadPharmacies();\r\n        setShowDeleteModal(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row className=\"my__flex\">\r\n          <h3>Pharmacies to which you are subscribed</h3>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Average grade</th>\r\n                <th>Address</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pharmacies &&\r\n                pharmacies.map((p) => (\r\n                  <tr\r\n                    key={p.id}\r\n                    onClick={() => {\r\n                      setSelectedPharmacy(p);\r\n                    }}\r\n                  >\r\n                    <td>{p.name}</td>\r\n                    <td>\r\n                      {p.description.length > 30\r\n                        ? p.description.substr(0, 29) + \"...\"\r\n                        : p.description}\r\n                    </td>\r\n                    <td>{p.avgGrade}</td>\r\n                    <td>{p.address}</td>\r\n                    <td>\r\n                      <XCircle\r\n                        style={{ color: \"red\" }}\r\n                        onClick={() => {\r\n                          setShowDeleteModal(true);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n      <DeleteModal\r\n        show={showDeleteModal}\r\n        title={`Unsubscribe from ${selectedPharmacy.name}`}\r\n        bodyText=\"Press 'confirm' to unsubscribe\"\r\n        onDelete={unsubscribe}\r\n        onHide={() => {\r\n          setShowDeleteModal(false);\r\n        }}\r\n      >\r\n        {\" \"}\r\n      </DeleteModal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SubscribedPharmacies;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Container, Table, Button } from \"react-bootstrap\";\r\n\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction ReservedMedicines() {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchReservations() {\r\n      const request = await api.get(\r\n        \"/api/medicine-reservation/reserved-medicines/patient/\" +\r\n        getIdFromToken()\r\n      ).catch(() => { });;\r\n      setReservations(!!request ? request.data : []);\r\n\r\n      return request;\r\n    }\r\n    fetchReservations();\r\n  }, [reload]);\r\n\r\n  const cancelReservation = (id) => {\r\n    api\r\n      .put(\"/api/medicine-reservation/cancel-reservation/\" + id)\r\n      .then((res) => {\r\n        addToast(res.data, { appearance: \"success\" });\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        setReload(!reload);\r\n      });\r\n  };\r\n\r\n  function differenceInMinutes(startTime) {\r\n    let today = new Date().getTime();\r\n    if ((startTime - today) / 60000 < 1440) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{ display: reservations.length === 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <h3>Reserved medicines</h3>\r\n        </Row>\r\n        <Row>\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n            style={{ display: reservations.length === 0 ? \"none\" : \"table\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Reservation date</th>\r\n                <th>Pickup date</th>\r\n                <th>Medicine</th>\r\n                <th>Pharmacy</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {reservations &&\r\n                reservations.map((r) => (\r\n                  <tr key={r.id}>\r\n                    <td>{r.reservationID}</td>\r\n                    <td>\r\n                      {moment(r.reservationDate).format(\"DD-MM-YYYY HH:mm\")}\r\n                    </td>\r\n                    <td>{moment(r.pickupDate).format(\"DD-MM-YYYY HH:mm\")}</td>\r\n                    <td>{r.medicineName}</td>\r\n                    <td>{r.pharmacyName}</td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => cancelReservation(r.id)}\r\n                        style={{\r\n                          display: differenceInMinutes(r.pickupDate)\r\n                            ? \"inline-block\"\r\n                            : \"none\",\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{ display: reservations.length === 0 ? \"block\" : \"none\" }}\r\n        >\r\n          <h3>You have no reservations made!</h3>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ReservedMedicines;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Container, Table, Button, Alert } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { StarFill } from \"react-bootstrap-icons\";\r\nimport moment from \"moment\";\r\n\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from \"../../app/errorHandler\";\r\n\r\nfunction Rating() {\r\n  const [dropdownLabel, setDropdownLabel] = useState(\"Dermatologist\");\r\n  const [entities, setEntitites] = useState([]);\r\n  const [selectedEntity, setSelectedEntity] = useState(null);\r\n  const [rating, setRating] = useState(null);\r\n  const [enabledRating, setEnabledRating] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const { addToast } = useToasts();\r\n  var spans = document.querySelectorAll(\"span\");\r\n\r\n  useEffect(() => {\r\n    async function fetchEntities() {\r\n      let url;\r\n      if (dropdownLabel === \"Dermatologist\") {\r\n        url = \"/api/workers/all-dermatologists/patient/\";\r\n      } else if (dropdownLabel === \"Pharmacist\") {\r\n        url = \"/api/workers/all-pharmacists/patient/\";\r\n      } else if (dropdownLabel === \"Medicine\") {\r\n        url = \"/api/medicine/all-medicines/patient/\";\r\n      } else {\r\n        url = \"/api/pharmacy/all-pharmacies/patient/\";\r\n      }\r\n\r\n      const request = await api\r\n        .get(url + getIdFromToken())\r\n        .then((res) => {\r\n          setEntitites(res.data);\r\n        })\r\n        .catch(() => {\r\n          setEntitites([]);\r\n        });\r\n\r\n      return request;\r\n    }\r\n    fetchEntities();\r\n  }, [dropdownLabel, reload]);\r\n\r\n  const updateSelectedEntity = (selectedEntity) => {\r\n    setSelectedEntity(selectedEntity);\r\n\r\n    api\r\n      .get(\r\n        \"/api/rating/\" +\r\n        dropdownLabel.toLowerCase() +\r\n        \"/\" +\r\n        selectedEntity.id +\r\n        \"/patient/\" +\r\n        getIdFromToken() +\r\n        \"/grade\"\r\n      )\r\n      .then((res) => {\r\n        setRating(res.data);\r\n      }).catch(() => { });\r\n  };\r\n\r\n  const ratingChanged = (newRating) => {\r\n    for (let span of spans) {\r\n      span.classList.remove(\"my__color__star\");\r\n    }\r\n\r\n    let forSend = {\r\n      id: -1,\r\n      grade: newRating,\r\n      gradedID: selectedEntity.id,\r\n      date: new Date().getTime(),\r\n      patientId: getIdFromToken(),\r\n      type: dropdownLabel.toUpperCase(),\r\n    };\r\n\r\n    if (enabledRating === false) {\r\n      api\r\n        .post(\"/api/rating/\", forSend)\r\n        .then((res) => {\r\n          addToast(res.data, { appearance: \"success\" });\r\n          setEnabledRating(false);\r\n          updateSelectedEntity(selectedEntity);\r\n          setReload(!reload);\r\n        })\r\n        .catch((err) => {\r\n          addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        });\r\n    } else {\r\n      forSend.id = rating.id;\r\n      api\r\n        .put(\"/api/rating/\", forSend)\r\n        .then((res) => {\r\n          addToast(res.data, { appearance: \"success\" });\r\n          setEnabledRating(false);\r\n          updateSelectedEntity(selectedEntity);\r\n          setReload(!reload);\r\n        })\r\n        .catch((err) => {\r\n          addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    for (let span of spans) {\r\n      span.classList.add(\"my__color__star\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"consultation__insight__container\">\r\n      <div className=\"consultation__insight__content\">\r\n        <Row className=\"my__flex\">\r\n          <h3>Rating procedure</h3>\r\n        </Row>\r\n        <Row>\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              {dropdownLabel}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Dermatologist\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Dermatologist\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Pharmacist\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Pharmacist\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Medicine\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Medicine\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setDropdownLabel(\"Pharmacy\");\r\n                  setSelectedEntity(null);\r\n                  setRating(null);\r\n                  setEnabledRating(false);\r\n                  reset();\r\n                }}\r\n              >\r\n                Pharmacy\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            display:\r\n              (dropdownLabel == \"Dermatologist\" ||\r\n                dropdownLabel == \"Pharmacist\") &&\r\n                entities.length > 0\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entities &&\r\n                entities.map((e) => (\r\n                  <tr\r\n                    key={e.id}\r\n                    onClick={() => updateSelectedEntity(e)}\r\n                    className={\r\n                      selectedEntity?.id === e.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{e.name}</td>\r\n                    <td>{e.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            display:\r\n              dropdownLabel == \"Medicine\" && entities.length > 0\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Medicine code</th>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entities &&\r\n                entities.map((e) => (\r\n                  <tr\r\n                    key={e.id}\r\n                    onClick={() => updateSelectedEntity(e)}\r\n                    className={\r\n                      selectedEntity?.id === e.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{e.medicineCode}</td>\r\n                    <td>{e.name}</td>\r\n                    <td>{e.avgGrade}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            display:\r\n              dropdownLabel == \"Pharmacy\" && entities.length > 0\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <Table\r\n            striped\r\n            bordered\r\n            variant=\"light\"\r\n            className=\"my__table__pharmacies\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Average grade</th>\r\n                <th>Address</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entities &&\r\n                entities.map((e) => (\r\n                  <tr\r\n                    key={e.id}\r\n                    onClick={() => updateSelectedEntity(e)}\r\n                    className={\r\n                      selectedEntity?.id === e.id\r\n                        ? \"my__row__selected my__table__row\"\r\n                        : \"my__table__row\"\r\n                    }\r\n                  >\r\n                    <td>{e.name}</td>\r\n                    <td>{e.avgGrade}</td>\r\n                    <td>{e.address}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{\r\n            display:\r\n              rating != null && rating !== \"not graded\" ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <p className=\"my__flex\" style={{ marginBottom: \"0\" }}>\r\n            You have graded last time{\" \"}\r\n            {rating && moment(rating?.date).format(\"DD-MM-YYYY HH:mm\")}:{\" \"}\r\n            {[...Array(rating && rating?.grade)].map(() => (\r\n              <StarFill style={{ width: \"1.5rem\" }} />\r\n            ))}\r\n          </p>\r\n          <Button\r\n            disabled={enabledRating}\r\n            variant=\"info\"\r\n            onClick={() => setEnabledRating(true)}\r\n          >\r\n            Change grade\r\n          </Button>\r\n        </Row>\r\n        <Row\r\n          className=\"my__flex\"\r\n          style={{\r\n            display:\r\n              (rating != null && rating === \"not graded\") || enabledRating\r\n                ? \"flex\"\r\n                : \"none\",\r\n          }}\r\n        >\r\n          <ReactStars\r\n            count={5}\r\n            onChange={ratingChanged}\r\n            size={48}\r\n            activeColor=\"green\"\r\n          />\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            justifyContent: \"center\",\r\n            display: entities.length === 0 ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <Alert transition={true} variant=\"warning\">\r\n            There's no {dropdownLabel.toLowerCase()} to grade!\r\n          </Alert>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, FormGroup, FormLabel, Row } from 'react-bootstrap'\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport api from '../../app/api';\r\nimport { getIdFromToken } from '../../app/jwtTokenUtils'\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\n\r\nconst SubmitComplaintForm = () => {\r\n  const [complaintType, setComplaintType] = useState(\"PHARMACIST\");\r\n  const [singleSelection, setSingleSelection] = useState([]);\r\n  const [options, setOptions] = useState([])\r\n  const [textAreaText, setTextAreaText] = useState(\"\")\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    let url = `/api/patients/${getIdFromToken()}/`;\r\n    switch (complaintType) {\r\n      case \"PHARMACIST\":\r\n        url = url + \"my-pharmacists\";\r\n        break;\r\n      case \"DERMATOLOGIST\":\r\n        url = url + \"my-dermatologists\";\r\n        break;\r\n      case \"PHARMACY\":\r\n        url = url + \"my-pharmacies\";\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    api.get(url).then((res) => {\r\n      setOptions(res.data);\r\n      setSingleSelection([]);\r\n    }).catch(() => { });\r\n  }, [complaintType]);\r\n\r\n  const getLabelKey = (option) => {\r\n    try {\r\n      switch (complaintType) {\r\n        case \"PHARMACIST\":\r\n          return `${option.name}`;\r\n        case \"DERMATOLOGIST\":\r\n          return `${option.name}`;\r\n        case \"PHARMACY\":\r\n          return `${option.name} -- ${option.address.street}`;\r\n        default:\r\n          return \"\";\r\n      }\r\n    } catch {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!singleSelection[0]) {\r\n      addToast(`Please select the ${complaintType.toLocaleLowerCase()}`, { appearance: \"warning\" });\r\n      return;\r\n    }\r\n    if (!textAreaText) {\r\n      addToast(\"Please fill out complaint text\", { appearance: \"warning\" });\r\n      return;\r\n    }\r\n    let data = {\r\n      \"content\": textAreaText,\r\n      \"complaintOn\": getLabelKey(singleSelection[0]),\r\n      \"complaintOnId\": singleSelection[0].id,\r\n      \"type\": complaintType,\r\n      \"date\": Date.now(),\r\n      \"patientId\": getIdFromToken()\r\n    }\r\n\r\n    let url = \"/api/complaints/\";\r\n    api.post(url, JSON.stringify(data))\r\n      .then(() => {\r\n        addToast(\"Successfully submitted\", { appearance: \"success\" });\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      })\r\n  }\r\n\r\n  const updateComplaintType = (e) => {\r\n    setComplaintType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Container className=\"border border-primary\" style={{ borderRadius: '10px', padding: '10px', marginTop: '10px', marginBottom: '10px', backgroundColor: 'white' }}>\r\n        <Row className=\"justify-content-between\">\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <FormLabel>\r\n                Select type\r\n              </FormLabel>\r\n              <Form.Control as=\"select\" onChange={updateComplaintType.bind(this)}>\r\n                <option value=\"PHARMACIST\" defaultValue>Pharmacist</option>\r\n                <option value=\"DERMATOLOGIST\">Dermatologist</option>\r\n                <option value=\"PHARMACY\">Pharmacy</option>\r\n              </Form.Control>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={7}>\r\n            <FormGroup>\r\n              <FormLabel>\r\n                Select name\r\n              </FormLabel>\r\n              <Typeahead\r\n                id=\"complaintTypeahead\"\r\n                labelKey={(option) => getLabelKey(option)}\r\n                onChange={setSingleSelection}\r\n                options={options}\r\n                placeholder={\"Select...\"}\r\n                selected={singleSelection}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group>\r\n          <Form.Label>Complaint text</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            onChange={(event) => setTextAreaText(event.target.value)}\r\n            required />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Container>\r\n    </Form >\r\n  )\r\n}\r\n\r\nexport default SubmitComplaintForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    FormLabel,\r\n    Row,\r\n} from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\n\r\nconst ComplaintDetails = ({ complaint }) => {\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchResponse() {\r\n            api.get(`/api/complaint-responses/${complaint.id}`).then((res) => {\r\n                setResponse(res.data ? res.data.responseText : \"\");\r\n            }).catch(() => { });\r\n        }\r\n        fetchResponse();\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"border border-primary\" style={{ borderRadius: '10px', padding: '10px', marginTop: '10px', marginBottom: '10px', backgroundColor: 'white' }}>\r\n            <Row className=\"justify-content-between\">\r\n                <Col md={6}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            For: {complaint.complaintOn}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Type: {complaint.type}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Date: {new Date(complaint.date).toLocaleDateString(\"sr-sp\")}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Form.Group>\r\n                <Form.Label>Complaint text</Form.Label>\r\n                <Form.Control\r\n                    as=\"textarea\"\r\n                    value={complaint.content}\r\n                    disabled />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Response text</Form.Label>\r\n                <Form.Control\r\n                    as=\"textarea\"\r\n                    defaultValue={response}\r\n                    value={response}\r\n                    disabled />\r\n            </Form.Group>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ComplaintDetails","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport ComplaintDetails from \"./ComplaintDetails\";\r\n\r\nconst ComplaintHistory = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchComplaints() {\r\n      api.get(`/api/complaints/patient/${getIdFromToken()}`).then((res) => {\r\n        setComplaints(res.data);\r\n      }).catch(() => { });\r\n    }\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {complaints &&\r\n        complaints.map((c) => {\r\n          return <ComplaintDetails key={c.id} complaint={c}></ComplaintDetails>;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintHistory;\r\n","import React from 'react'\r\nimport { Col, Nav, Row, Tab, TabPane } from 'react-bootstrap'\r\nimport SubmitComplaintForm from './SubmitComplaintForm'\r\nimport ComplaintHistory from './ComplaintHistory'\r\n\r\nconst ComplaintsPage = () => {\r\n    return (\r\n        <main className=\"home__page\">\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\" unmountOnExit>\r\n                <Row className=\"my-panel\">\r\n                    <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                                    Submit a complaint\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                                    My complaints\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n                        <Tab.Content>\r\n                            <TabPane eventKey=\"first\">\r\n                                <SubmitComplaintForm></SubmitComplaintForm>\r\n                            </TabPane>\r\n                            <TabPane eventKey=\"second\">\r\n                                <ComplaintHistory></ComplaintHistory>\r\n                            </TabPane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ComplaintsPage\r\n","import React, { useState } from 'react'\r\nimport { Button, Col, Container, Form, FormGroup, FormLabel, Row } from 'react-bootstrap'\r\nimport api from '../../app/api'\r\nimport { getIdFromToken } from '../../app/jwtTokenUtils'\r\nimport { useToasts } from \"react-toast-notifications\"\r\n\r\nconst ComplaintResponse = ({ complaint, onSuccessfulSubmit }) => {\r\n    const [responseText, setResponseText] = useState()\r\n    const { addToast } = useToasts();\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n        if (!responseText) {\r\n            addToast(\"Please fill out response text\", { appearance: \"warning\" });\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            \"responseText\": responseText,\r\n            \"complaintId\": complaint.id,\r\n            \"adminId\": getIdFromToken(),\r\n            \"date\": Date.now(),\r\n        }\r\n\r\n        let url = `/api/complaint-responses/${complaint.id}`;\r\n        api.post(url, JSON.stringify(data))\r\n            .then(() => {\r\n                onSuccessfulSubmit()\r\n                addToast(\"Successfully submitted\", { appearance: \"success\" });\r\n            })\r\n            .catch((err) => {\r\n                addToast(\"Error. Response not submitted!\", { appearance: \"success\" });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Container className=\"border border-primary\" style={{ borderRadius: '10px', padding: '10px', marginTop: '10px', marginBottom: '10px', backgroundColor: 'white' }}>\r\n                <Row className=\"justify-content-between\">\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                For: {complaint.complaintOn}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                Type: {complaint.type}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <FormGroup>\r\n                            <FormLabel>\r\n                                Date: {new Date(complaint.date).toLocaleDateString(\"sr-sp\")}\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group>\r\n                    <Form.Label>Complaint text</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={5}\r\n                        value={complaint.content}\r\n                        disabled />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Response text</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={5}\r\n                        onChange={(event) => { setResponseText(event.target.value) }}\r\n                        required />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ComplaintResponse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ComplaintResponse from \"./ComplaintResponse\";\r\nimport api from \"../../app/api\";\r\n\r\nconst NewComplaintsList = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getNewComplaints();\r\n  }, []);\r\n\r\n  const getNewComplaints = () => {\r\n    async function fetchComplaints() {\r\n      api.get(`/api/complaints/new`).then((res) => {\r\n        setComplaints(res.data);\r\n      }).catch(() => { });\r\n    }\r\n    fetchComplaints();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {complaints &&\r\n        complaints.map((c) => {\r\n          return (\r\n            <ComplaintResponse\r\n              key={c.id}\r\n              complaint={c}\r\n              onSuccessfulSubmit={getNewComplaints}\r\n            ></ComplaintResponse>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewComplaintsList;\r\n","import React from 'react'\r\nimport { Col, Container, FormControl, FormGroup, FormLabel, Row } from 'react-bootstrap'\r\n\r\nconst ComplaintResponseDetails = ({ complaintResponse }) => {\r\n    return (\r\n        <Container className=\"border border-primary\" style={{ borderRadius: '10px', padding: '10px', marginTop: '10px', marginBottom: '10px', backgroundColor: 'white' }}>\r\n            <Row className=\"justify-content-between\">\r\n                <Col md={5}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            For: {complaintResponse.complaint.complaintOn}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Type: {complaintResponse.complaint.type}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Complaint Date: {new Date(complaintResponse.complaint.date).toLocaleDateString(\"sr-sp\")}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <FormGroup>\r\n                        <FormLabel>\r\n                            Response Date: {new Date(complaintResponse.date).toLocaleDateString(\"sr-sp\")}\r\n                        </FormLabel>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <FormGroup>\r\n                <FormLabel>Complaint text</FormLabel>\r\n                <FormControl\r\n                    as=\"textarea\"\r\n                    value={complaintResponse.complaint.content}\r\n                    disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <FormLabel>Response text</FormLabel>\r\n                <FormControl\r\n                    as=\"textarea\"\r\n                    value={complaintResponse.responseText}\r\n                    disabled />\r\n            </FormGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ComplaintResponseDetails\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport ComplaintResponseDetails from \"./ComplaintResponseDetails\";\r\n\r\nconst ComplaintResponsesHistory = () => {\r\n  const [complaintResponses, setComplaintResponses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchComplaints() {\r\n      api\r\n        .get(`/api/complaint-responses/admin/${getIdFromToken()}`)\r\n        .then((res) => {\r\n          setComplaintResponses(res.data);\r\n        }).catch(() => { });\r\n    }\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {complaintResponses &&\r\n        complaintResponses.map((cr) => {\r\n          return (\r\n            <ComplaintResponseDetails\r\n              key={cr.id}\r\n              complaintResponse={cr}\r\n            ></ComplaintResponseDetails>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintResponsesHistory;\r\n","import React from 'react'\r\nimport { Col, Nav, Row, Tab, TabPane } from 'react-bootstrap'\r\nimport NewComplaintsList from './NewComplaintsList'\r\nimport ComplaintResponsesHistory from './ComplaintResponsesHistory'\r\n\r\nconst ComplaintResponsesPage = () => {\r\n    return (\r\n        <main className=\"home__page\">\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\" unmountOnExit>\r\n                <Row className=\"my-panel\">\r\n                    <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                                    New complaints\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                                    History\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col className=\"my__container\" sm={9} md={9} lg={10} xs={12}>\r\n                        <Tab.Content>\r\n                            <TabPane eventKey=\"first\">\r\n                                <NewComplaintsList></NewComplaintsList>\r\n                            </TabPane>\r\n                            <TabPane eventKey=\"second\">\r\n                                <ComplaintResponsesHistory></ComplaintResponsesHistory>\r\n                            </TabPane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ComplaintResponsesPage\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nconst PharmacyWithMedicineItem = ({ pharmacy, doBuy }) => {\r\n    const [points, setPoints] = useState(0)\r\n    const [category, setCategory] = useState({})\r\n\r\n    useEffect(() => {\r\n        async function fetchPoints() {\r\n            const request = await api.get(\r\n                \"/api/patients/\" + getIdFromToken() + \"/points\"\r\n            ).catch(() => { });\r\n            setPoints(request ? request.data : 0);\r\n            return request;\r\n        }\r\n        fetchPoints();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchCategory() {\r\n            const request = await api.get(\"/api/ranking-category/points/\" + points).catch(() => { });\r\n            setCategory(request ? request.data : {});\r\n\r\n            return request;\r\n        }\r\n        fetchCategory();\r\n    }, [points]);\r\n\r\n    return (\r\n        <Card style={{ marginBottom: '20px' }}>\r\n            <Card.Header>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={{ span: 3, offset: 0 }}>\r\n                            {`${pharmacy.name}`}\r\n                        </Col>\r\n                        <Col md={{ span: 4, offset: 5 }}>\r\n                            <div style={{ float: 'right' }}>\r\n                                {`${pharmacy.addressStreet}, ${pharmacy.addressCity}`}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Container>\r\n                    {`Grade: ${pharmacy.avgGrade}`}\r\n                </Container>\r\n            </Card.Body>\r\n            <Card.Footer className=\"align-content-end\" >\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={{ span: 3, offset: 0 }}>\r\n                            {`Total price: ${pharmacy.totalPrice}`}\r\n                        </Col>\r\n                        <Col md={{ span: 3, offset: 1 }}>\r\n                            {!!category && category.discount != 0 ? `Total price with discount: ${(pharmacy.totalPrice * (1 - category.discount / 100)).toFixed(2)}` : \"\"}\r\n                        </Col>\r\n                        <Col md={{ span: 2, offset: 3 }}>\r\n                            <Button style={{ width: '100%' }} onClick={() => { doBuy(pharmacy) }}>Buy</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card.Footer>\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default PharmacyWithMedicineItem;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport PharmacyWithMedicineItem from './PharmacyWithMedicineItem'\r\n\r\nconst PharmacyWithMedicineList = ({ pharmacies, doBuy }) => {\r\n\r\n    return (\r\n\r\n        <Container>\r\n            {pharmacies.map((p) => {\r\n                return <PharmacyWithMedicineItem pharmacy={p} doBuy={() => { doBuy(p) }}></PharmacyWithMedicineItem >\r\n            })}\r\n        </Container >\r\n\r\n    )\r\n}\r\n\r\nPharmacyWithMedicineList.defaultProps = {\r\n    pharmacies: []\r\n}\r\n\r\nexport default PharmacyWithMedicineList\r\n","import React from 'react'\r\nimport { Container, ListGroup } from 'react-bootstrap'\r\n\r\nconst RequiredMedicineList = ({ medicines }) => {\r\n    return (\r\n        <ListGroup style={{ marginBottom: '20px' }}>\r\n            {medicines.map((m) => {\r\n                return <ListGroup.Item>{`Code: ${m.medicineCode} -- ${m.medicineName}, Quantity ${m.quantity} pcs`}</ListGroup.Item>\r\n            })}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nRequiredMedicineList.defaultProps = {\r\n    medicines: []\r\n}\r\n\r\nexport default RequiredMedicineList\r\n","import api from \"../../app/api\";\r\nimport { data } from \"jquery\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\nimport PharmacyWithMedicineList from \"./PharmacyWithMedicineList\";\r\nimport RequiredMedicineList from \"./RequiredMedicineList\";\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { getErrorMessage } from '../../app/errorHandler'\r\n\r\nconst ERecipeSearch = () => {\r\n  const [QRImage, setQRImage] = useState({});\r\n  // Lista apoteka u kojima je dostupno\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\r\n  const [sortBy, setSortBy] = useState(\"totalPrice\");\r\n  const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n  // Podaci procitani iz QR koda\r\n  const [parsedData, setParsedData] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  const handleFileChange = (e) => {\r\n    setQRImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    // Slika mora biti ucitana\r\n    if (Object.keys(QRImage).length === 0 && QRImage.constructor === Object) {\r\n      addToast(\"Please select QR code\", { appearance: \"warning\" });\r\n      return;\r\n    }\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"file\", QRImage);\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/e-recipes/upload-qr/${getIdFromToken()}`,\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        setParsedData(res.data);\r\n      })\r\n      .catch(() => {\r\n        addToast(\"Invalid QR code!\", { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // Ako podaci nisu ucitani ovo nema smisla raditi\r\n    if (Object.keys(parsedData).length === 0 && parsedData.constructor === Object) {\r\n      return;\r\n    }\r\n\r\n    let data = parsedData;\r\n    if (data.state == \"REJECTED\") {\r\n      setPharmacies([]);\r\n      setShowSearchPanel(false);\r\n      addToast(\"Invalid QR code!\", { appearance: \"error\" });\r\n      return;\r\n    } else if (data.state == \"PROCESSED\") {\r\n      setPharmacies([]);\r\n      addToast(\"This code has already been processed!\", { appearance: \"error\" });\r\n      setShowSearchPanel(false);\r\n      return;\r\n    }\r\n\r\n    api({\r\n      method: \"post\",\r\n      url: `/api/pharmacy/e-recipe?sort=${sortBy}&order=${sortOrder}`,\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        setPharmacies(res.data);\r\n        setShowSearchPanel(true);\r\n      })\r\n      .catch(() => {\r\n        setPharmacies([]);\r\n        addToast(\"Invalid QR code!\", { appearance: \"error\" });\r\n        setShowSearchPanel(false);\r\n      });\r\n  }, [parsedData, sortBy, sortOrder]);\r\n\r\n  const doBuy = (pharmacy) => {\r\n    let data = {\r\n      ...parsedData,\r\n      pharmacyId: pharmacy.id,\r\n      totalPrice: pharmacy.totalPrice,\r\n    };\r\n    api\r\n      .post(`/api/e-recipes/dispense-medicine/${getIdFromToken()}`, data)\r\n      .then(() => {\r\n        addToast(\"Successfully dispensed!\", { appearance: \"success\" });\r\n        setParsedData({});\r\n        setPharmacies([]);\r\n        setShowSearchPanel(false);\r\n      })\r\n      .catch((err) => {\r\n        addToast(getErrorMessage(err), { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"consultation__insight__content\">\r\n      <Container>\r\n        <Form\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <Container style={{ marginBottom: \"15px\" }}>\r\n            <Row>\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Form.File>\r\n                  <Form.File.Label>Upload QR Code</Form.File.Label>\r\n                  <Form.File.Input onChange={(e) => handleFileChange(e)} />\r\n                </Form.File>\r\n              </Col>\r\n\r\n              <Col className=\"my-auto\" md={{ span: 4, offset: 2 }}>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n        <Form hidden={!showSearchPanel}>\r\n          <p>Required medicine: </p>\r\n          <RequiredMedicineList\r\n            medicines={!!parsedData.eRecipeItems ? parsedData.eRecipeItems : []}\r\n          ></RequiredMedicineList>\r\n          <Container>\r\n            <Row className=\"align-content-between\">\r\n              <Col md={{ span: 3, offset: 2 }}>\r\n                <Form.Group>\r\n                  <Form.Label>Sort by</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => {\r\n                      setSortBy(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"totalPrice\" selected>\r\n                      Total price\r\n                    </option>\r\n                    <option value=\"name\">Pharmacy name</option>\r\n                    <option value=\"avgGrade\">Pharmacy grade</option>\r\n                    <option value=\"addressCity\">City</option>\r\n                    <option value=\"street\">Street</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={{ span: 3, offset: 2 }}>\r\n                <Form.Group>\r\n                  <Form.Label>Order</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => {\r\n                      setSortOrder(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"ASC\" selected>\r\n                      Ascending\r\n                    </option>\r\n                    <option value=\"DESC\">Descending</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n        <PharmacyWithMedicineList\r\n          pharmacies={pharmacies}\r\n          doBuy={(pharmacy) => {\r\n            doBuy(pharmacy);\r\n          }}\r\n        >\r\n          {\" \"}\r\n        </PharmacyWithMedicineList>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERecipeSearch;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Table, Form } from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport moment from \"moment\";\r\n\r\nimport api from \"../../app/api\";\r\nimport { getIdFromToken } from \"../../app/jwtTokenUtils\";\r\n\r\nimport \"../../styling/pharmaciesAndMedicines.css\";\r\nimport \"../../styling/consultation.css\";\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nfunction EPrescriptionReview() {\r\n  const [entities, setEntitites] = useState([]);\r\n  const [selectedEntity, setSelectedEntity] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n  const [reload2, setReload2] = useState(false);\r\n  const [sorter, setSorter] = useState(\"none\");\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchEntities() {\r\n      const request = await api\r\n        .get(\"/api/e-recipes/patient/\" + getIdFromToken())\r\n        .then((res) => {\r\n          setEntitites(res.data);\r\n          setReload2(!reload2);\r\n        })\r\n        .catch((err) => {\r\n          addToast(getErrorMessage(err), { appearance: \"error\" });\r\n        });\r\n\r\n      return request;\r\n    }\r\n    fetchEntities();\r\n  }, [reload]);\r\n\r\n  useEffect(() => {\r\n    doFiltering();\r\n  }, [reload2]);\r\n\r\n  const updateSelectedEntity = (selectedEntity) => {\r\n    setSelectedEntity(selectedEntity);\r\n  };\r\n\r\n  const doSorting = (sortParam) => {\r\n    if (sortParam === \"none\") return;\r\n\r\n    entities.sort(function (e1, e2) {\r\n      return e1.prescriptionDate - e2.prescriptionDate;\r\n    });\r\n\r\n    if (sortParam === \"desc\") {\r\n      entities.reverse();\r\n    }\r\n  };\r\n\r\n  const doFiltering = () => {\r\n    if (filter === \"none\") {\r\n      return;\r\n    }\r\n\r\n    let filtered = [];\r\n    for (let i = 0; i < entities.length; i++) {\r\n      if (filter === \"Processed\" && entities[i].state === \"PROCESSED\") {\r\n        filtered.push(entities[i]);\r\n      } else if (filter === \"New\" && entities[i].state === \"NEW\") {\r\n        filtered.push(entities[i]);\r\n      } else if (filter === \"Rejected\" && entities[i].state === \"REJECTED\") {\r\n        filtered.push(entities[i]);\r\n      }\r\n    }\r\n\r\n    setEntitites(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"consultation__insight__content\">\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          display: entities.length === 0 && filter === \"none\" ? \"flex\" : \"none\",\r\n        }}\r\n      >\r\n        <h3>You don't have any e-prescriptions!</h3>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          display: entities.length === 0 && filter === \"none\" ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <Form.Label style={{ marginRight: \"20px\" }}>Sorter: </Form.Label>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            {sorter}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setSorter(\"none\");\r\n                doSorting(\"none\");\r\n              }}\r\n            >\r\n              none\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setSorter(\"Dispensing date (ascending)\");\r\n                doSorting(\"asc\");\r\n              }}\r\n            >\r\n              Dispensing date (ascending)\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setSorter(\"Dispensing date (descending)\");\r\n                doSorting(\"desc\");\r\n              }}\r\n            >\r\n              Dispensing date (descending)\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Form.Label style={{ marginRight: \"20px\" }}>Filter: </Form.Label>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            {filter}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"none\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              none\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"Processed\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              Processed\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"New\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              New\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                setFilter(\"Rejected\");\r\n                setReload(!reload);\r\n                setSelectedEntity(null);\r\n              }}\r\n            >\r\n              Rejected\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          justifyContent: \"space-between\",\r\n          display: entities.length === 0 && filter === \"none\" ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <Table\r\n          striped\r\n          bordered\r\n          variant=\"light\"\r\n          className=\"my__table__pharmacies\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Code</th>\r\n              <th>State</th>\r\n              <th>Prescription date</th>\r\n              <th>Dispensing date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {entities &&\r\n              entities.map((e) => (\r\n                <tr\r\n                  key={e.code}\r\n                  onClick={() => updateSelectedEntity(e)}\r\n                  className={\r\n                    selectedEntity?.code === e.code\r\n                      ? \"my__row__selected my__table__row\"\r\n                      : \"my__table__row\"\r\n                  }\r\n                >\r\n                  <td>{e.code}</td>\r\n                  <td>{e.state}</td>\r\n                  <td>\r\n                    {moment(e.prescriptionDate).format(\"DD-MM-YYYY HH:mm:ss\")}\r\n                  </td>\r\n                  <td>\r\n                    {e.dispensingDate != null\r\n                      ? moment(e.dispensingDate).format(\"DD-MM-YYYY HH:mm:ss\")\r\n                      : \"/\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"50px\",\r\n          display: selectedEntity == null ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <h3>Medicines of e-prescription</h3>\r\n      </Row>\r\n      <Row style={{ display: selectedEntity == null ? \"none\" : \"flex\" }}>\r\n        <Table\r\n          striped\r\n          bordered\r\n          variant=\"light\"\r\n          className=\"my__table__pharmacies\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Code</th>\r\n              <th>Name</th>\r\n              <th>Quanitiy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedEntity &&\r\n              selectedEntity.eRecipeItems.map((e) => (\r\n                <tr key={e.medicineCode}>\r\n                  <td>{e.medicineCode}</td>\r\n                  <td>{e.medicineName}</td>\r\n                  <td>{e.quantity}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EPrescriptionReview;\r\n","import React from \"react\";\r\nimport { Col, Nav, Row, Tab, TabPane } from \"react-bootstrap\";\r\nimport EPrescriptionSearch from \"./EPrescriptionSearch\";\r\nimport EPrescriptionReview from \"./EPrescriptionReview\";\r\n\r\nfunction EPrescriptionPage() {\r\n  return (\r\n    <main className=\"home__page\">\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey=\"first\"\r\n        unmountOnExit\r\n      >\r\n        <Row className=\"my-panel\">\r\n          <Col sm={3} md={3} lg={2} xs={12} className=\"side__bar\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"first\">\r\n                  Upload\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link className=\"my__nav__link\" eventKey=\"second\">\r\n                  Review\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col\r\n            className=\"my__container\"\r\n            sm={9}\r\n            md={9}\r\n            lg={10}\r\n            xs={12}\r\n            style={{ backgroundColor: \"rgba(228, 245, 245, 0.897)\" }}\r\n          >\r\n            <Tab.Content>\r\n              <TabPane eventKey=\"first\">\r\n                <EPrescriptionSearch />\r\n              </TabPane>\r\n              <TabPane eventKey=\"second\">\r\n                <EPrescriptionReview />\r\n              </TabPane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EPrescriptionPage;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap'\r\nimport api from '../../app/api';\r\nimport { getErrorMessage } from '../../app/errorHandler';\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst AddEditCategoryModal = (props) => {\r\n    const [name, setName] = useState(!!props.category ? props.category.name : \"b\")\r\n    const [requiredPoints, setRequiredPoints] = useState(!!props.category ? props.category.pointsRequired : 0);\r\n    const [discount, setDiscount] = useState(!!props.category ? props.category.discount : 0.00);\r\n    const { addToast } = useToasts();\r\n\r\n    useEffect(() => {\r\n        console.log(props.category)\r\n        setName(!!props.category ? props.category.name : \"a\");\r\n        setRequiredPoints(!!props.category ? props.category.pointsRequired : 0);\r\n        setDiscount(!!props.category ? props.category.discount : 0.00);\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        let data = {\r\n            id: !!props.category ? props.category.id : -1,\r\n            name: name,\r\n            pointsRequired: parseInt(requiredPoints),\r\n            discount: parseFloat(discount),\r\n        };\r\n\r\n        api.post('/api/ranking-category/', data)\r\n            .then(() => {\r\n                props.onAddEdit()\r\n                props.onHide()\r\n            })\r\n            .catch((err) => {\r\n                addToast(getErrorMessage(err), { appearance: \"error\" });\r\n            })\r\n    }\r\n\r\n    const resetData = () => {\r\n        setName(\"\");\r\n        setRequiredPoints(0);\r\n        setDiscount(0.0);\r\n    };\r\n\r\n    return (\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {!!props.category ? `Edit ${props.category.name}` : \"Add new category\"}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"input\"\r\n                            onChange={(event) => setName(event.target.value)}\r\n                            defaultValue={!!props.category ? props.category.name : \"\"}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Required points</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            onChange={(event) => setRequiredPoints(event.target.value)}\r\n                            defaultValue={!!props.category ? props.category.pointsRequired : 0}\r\n                            min={0}\r\n                            max={100000}\r\n                            step={1}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Discount</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            onChange={(event) => setDiscount(event.target.value)}\r\n                            defaultValue={!!props.category ? props.category.discount : 0.00}\r\n                            min={0}\r\n                            max={100.00}\r\n                            step={0.01}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={{ span: 4, offset: 0 }}>\r\n                                <Button variant=\"outline-danger\" onClick={props.onHide}>Cancel</Button>\r\n                            </Col>\r\n                            <Col md={{ span: 4, offset: 4 }}>\r\n                                <Button variant=\"outline-secondary\" type=\"submit\">Confirm</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default AddEditCategoryModal;","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport DeleteModal from \"../utilComponents/modals/DeleteModal\";\r\nimport api from \"../../app/api\";\r\nimport AddEditCategoryModal from \"./AddEditCategoryModal\";\r\n\r\nconst CategoryItem = ({ category, onItemChanged }) => {\r\n  const [showAddEditModal, setShowAddEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const deleteCategory = () => {\r\n    api.delete(`/api/ranking-category/${category.id}`).then(() => {\r\n      onItemChanged();\r\n    });\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const editCategory = () => {\r\n    onItemChanged();\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ marginBottom: \"20px\" }}>\r\n      <Card.Header>\r\n        <Container>\r\n          <Row>\r\n            <Col md={{ span: 3, offset: 0 }}>{`${category.name}`}</Col>\r\n            <Col md={{ span: 4, offset: 5 }}>\r\n              <div style={{ float: \"right\" }}>{`${category.discount}%`}</div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Container>{`Points required: ${category.pointsRequired}`}</Container>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Container>\r\n          <Row>\r\n            <Col md={{ span: 4, offset: 0 }}>\r\n              <Button\r\n                variant=\"outline-success\"\r\n                style={{ width: \"100%\", marginLeft: \"0\" }}\r\n                onClick={() => {\r\n                  setShowAddEditModal(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 4 }}>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                style={{ width: \"100%\" }}\r\n                onClick={() => {\r\n                  setShowDeleteModal(true);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Footer>\r\n      <DeleteModal\r\n        title={\"Remove \" + category.name}\r\n        show={showDeleteModal}\r\n        onHide={() => setShowDeleteModal(false)}\r\n        onDelete={deleteCategory}\r\n      />\r\n      <AddEditCategoryModal\r\n        show={showAddEditModal}\r\n        category={category}\r\n        onHide={() => setShowAddEditModal(false)}\r\n        onAddEdit={editCategory}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport api from \"../../app/api\";\r\nimport AddEditCategoryModal from \"./AddEditCategoryModal\";\r\nimport CategoryItem from \"./CategoryItem\";\r\n\r\nconst CategoryList = () => {\r\n  const [components, setComponents] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [showAddEditModal, setShowAddEditModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    api.get(`/api/ranking-category/`).then((res) => {\r\n      setComponents(res.data);\r\n    }).catch(() => { });\r\n  }, [refresh]);\r\n\r\n  const addCategory = () => {\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginBottom: \"30px\", marginTop: \"30px\" }} fluid>\r\n      <Row>\r\n        <Col md={{ span: 4, offset: 4 }}>\r\n          <div>\r\n            {components.map((c) => {\r\n              return (\r\n                <CategoryItem\r\n                  key={c.id}\r\n                  category={c}\r\n                  onItemChanged={() => {\r\n                    setRefresh(!refresh);\r\n                  }}\r\n                ></CategoryItem>\r\n              );\r\n            })}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ span: 2, offset: 5 }}>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            variant=\"outline-secondary\"\r\n            onClick={() => {\r\n              setShowAddEditModal(true);\r\n            }}\r\n          >\r\n            Add new category\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <AddEditCategoryModal\r\n        show={showAddEditModal}\r\n        onHide={() => setShowAddEditModal(false)}\r\n        onAddEdit={addCategory}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import { React, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getUserTypeFromToken } from \"../../app/jwtTokenUtils.js\";\r\n\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst GuardedRoute = ({ component: Component, userType, ...rest }) => {\r\n  const { addToast } = useToasts();\r\n  useEffect(() => {\r\n    if (userType != undefined) {\r\n      if (!userType.includes(getUserTypeFromToken())) {\r\n        addToast(\"Unauthorized!\", {\r\n          appearance: \"error\",\r\n        });\r\n      }\r\n    }\r\n  }, [userType]);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        userType.includes(getUserTypeFromToken()) ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default GuardedRoute;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport Registration from \"./components/Registration\";\r\nimport HomePage from \"./components/utilComponents/HomePage\";\r\nimport PharmacyAdminHomePage from \"./components/pharmacyAdmin/PharmacyAdminHomePage\";\r\nimport UserProfile from \"./components/profile/UserProfile\";\r\nimport Footer from \"./components/Footer\";\r\nimport PharmacyProfile from \"./components/pharmacyProfile/PharmacyProfile\";\r\nimport MedicineProfile from \"./components/medicine/MedicineProfile\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport DermHomePage from \"./components/workers/dermatologist/home_page_dermatologist\";\r\nimport PharmHomePage from \"./components/workers/pharmacist/home_page_pharmacist\";\r\nimport PharmacyCrud from \"./components/pharmacy/PharmacyCrud\";\r\nimport MedicineCrud from \"./components/medicine/MedicineCrud\";\r\nimport SearchPatPage from \"./components/workers/search_patients\";\r\nimport SearchExaminedPatPage from \"./components/workers/list_examined\";\r\nimport CommonHeader from \"./components/utilComponents/header/CommonHeader\";\r\nimport BasicProfileInfo from \"./components/profile/BasicProfileInfo\";\r\n\r\nimport WorkCalendar from \"./components/workers/work_calendar\";\r\nimport AppointmentReport from \"./components/workers/appointment_report\";\r\nimport VacationRequest from \"./components/workers/vacation_request\";\r\nimport DermatologistProfile from \"./components/workers/dermatologist_profile\";\r\nimport PharmacistProfile from \"./components/workers/pharmacist_profile\";\r\nimport IssueMedicine from \"./components/workers/issue_medicine\";\r\n\r\nimport UserCrud from \"./components/users/UserCrud\";\r\nimport PharmaciesWithFreePharmacists from \"./components/unregisteredAndPatient/PharmaciesWithFreePharmacists\";\r\nimport ConsultationsInsight from \"./components/unregisteredAndPatient/ConsultationsInsight\";\r\nimport CheckupsInsight from \"./components/unregisteredAndPatient/CheckupsInsight\";\r\nimport SubscribedPharmacies from \"./components/unregisteredAndPatient/SubscribedPharmacies\";\r\nimport ReservedMedicines from \"./components/unregisteredAndPatient/ReservedMedicines\";\r\nimport Rating from \"./components/unregisteredAndPatient/Rating\";\r\nimport ComplaintsPage from \"./components/complaints/ComplaintsPage\";\r\nimport ComplaintResponsesPage from \"./components/complaintResponses/ComplaintResponsesPage\";\r\nimport EPrescriptionPage from \"./components/ePrescription/EPrescriptionPage\";\r\nimport CategotyList from \"./components/loyaltyProgram/CategoryList\";\r\n\r\nimport \"./styling/navbar.css\";\r\nimport './styling/modal.css'\r\n\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\nimport GuardedRoute from \"./components/utilComponents/GuardedRoute\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ToastProvider\r\n      autoDismiss=\"true\"\r\n      autoDismissTimeout=\"4000\"\r\n      placement=\"top-center\"\r\n    >\r\n      <Router>\r\n        <div style={{ minHeight: \"100vh\" }}>\r\n          <CommonHeader />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n\r\n            {/* null znaci da moze i neregistrovani korisnik */}\r\n            <GuardedRoute\r\n              path=\"/registration\"\r\n              component={Registration}\r\n              userType={[null]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/login\"\r\n              component={LoginPage}\r\n              userType={[null]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/pharmacy/:id\"\r\n              component={PharmacyProfile}\r\n              userType={[null, \"PATIENT\", \"PHARMACY_ADMIN\", \"ADMIN\", \"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/medicine/:id/pharmacy/:pid/price/:priceid\"\r\n              component={MedicineProfile}\r\n              userType={[null, \"PATIENT\", \"PHARMACY_ADMIN\", \"ADMIN\", \"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/profile\"\r\n              exact\r\n              component={UserProfile}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/infoProfile\"\r\n              exact\r\n              component={BasicProfileInfo}\r\n              userType={[\r\n                \"ADMIN\",\r\n                \"PHARMACIST\",\r\n                \"DERMATOLOGIST\",\r\n                \"SUPPLIER\",\r\n                \"PHARMACY_ADMIN\",\r\n              ]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/reserve-consultation/pharmacies\"\r\n              component={PharmaciesWithFreePharmacists}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/consultations-insight\"\r\n              component={ConsultationsInsight}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/subscribed-pharmacies\"\r\n              component={SubscribedPharmacies}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/rating\"\r\n              component={Rating}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/reserved-medicines\"\r\n              component={ReservedMedicines}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/checkups-insight\"\r\n              component={CheckupsInsight}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n\r\n            {/* Ne treba nam ovo jer gore imamo home page koji koristi sve ove */}\r\n            {/* <Route path=\"/dermatologist\" component={DermHomePage} />\r\n            <Route path=\"/pharmacist\" component={PharmHomePage} />\r\n            <Route path=\"/pharmacyAdmin\" component={PharmacyAdminHomePage} /> */}\r\n\r\n            <GuardedRoute\r\n              path=\"/admin/pharmacies\"\r\n              component={PharmacyCrud}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/medicine\"\r\n              component={MedicineCrud}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n\r\n            <GuardedRoute\r\n              path=\"/worker/search-patients\"\r\n              component={SearchPatPage}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/dermatologist_profile\"\r\n              component={DermatologistProfile}\r\n              userType={[\"DERMATOLOGIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/pharmacist_profile\"\r\n              component={PharmacistProfile}\r\n              userType={[\"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/users\"\r\n              component={UserCrud}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/examined\"\r\n              component={SearchExaminedPatPage}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/calendar\"\r\n              component={WorkCalendar}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/appointment_report\"\r\n              component={AppointmentReport}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/vacation\"\r\n              component={VacationRequest}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/worker/issue_medicine\"\r\n              component={IssueMedicine}\r\n              userType={[\"DERMATOLOGIST\", \"PHARMACIST\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/user/complaints\"\r\n              component={ComplaintsPage}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/complaint-responses\"\r\n              component={ComplaintResponsesPage}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/e-prescription\"\r\n              component={EPrescriptionPage}\r\n              userType={[\"PATIENT\"]}\r\n            />\r\n            <GuardedRoute\r\n              path=\"/admin/loyalty\"\r\n              component={CategotyList}\r\n              userType={[\"ADMIN\"]}\r\n            />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </ToastProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport user from './slices/userSlice'\r\n\r\nconst reducer = combineReducers({\r\n  user,\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n});\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styling/index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}